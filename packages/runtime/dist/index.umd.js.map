{"version":3,"file":"index.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/binding/binding-behavior.ts","../src/binding/binding-flags.ts","../src/binding/observation.ts","../src/binding/subscriber-collection.ts","../src/binding/target-observer.ts","../src/binding/collection-observer.ts","../src/binding/array-observer.ts","../src/binding/set-observer.ts","../src/binding/change-set.ts","../src/dom.ts","../src/binding/target-accessors.ts","../src/binding/resources/attr-binding-behavior.ts","../src/binding/binding-mode.ts","../src/binding/resources/binding-mode-behaviors.ts","../src/binding/property-observer.ts","../src/binding/property-observation.ts","../src/binding/binding-context.ts","../src/binding/signaler.ts","../src/binding/value-converter.ts","../src/binding/ast.ts","../src/binding/connectable.ts","../src/binding/binding.ts","../src/binding/resources/debounce-binding-behavior.ts","../src/binding/resources/sanitize.ts","../src/binding/resources/self-binding-behavior.ts","../src/binding/resources/signals.ts","../src/binding/resources/throttle-binding-behavior.ts","../src/binding/event-manager.ts","../src/binding/computed-observer.ts","../src/binding/dirty-checker.ts","../src/binding/element-observation.ts","../src/binding/map-observer.ts","../src/binding/svg-analyzer.ts","../src/binding/observer-locator.ts","../src/binding/resources/update-trigger-binding-behavior.ts","../src/binding/call.ts","../src/binding/expression-parser.ts","../src/binding/listener.ts","../src/binding/ref.ts","../src/templating/bindable.ts","../src/templating/instructions.ts","../src/templating/create-element.ts","../src/templating/custom-element.ts","../src/templating/renderable.ts","../src/binding/interpolation-binding.ts","../src/binding/let-binding.ts","../src/templating/custom-attribute.ts","../src/templating/render-strategy.ts","../src/templating/renderer.ts","../src/templating/runtime-behavior.ts","../src/templating/view.ts","../src/templating/render-context.ts","../src/templating/template.ts","../src/templating/template-compiler.ts","../src/templating/view-compile-flags.ts","../src/templating/rendering-engine.ts","../src/templating/lifecycle.ts","../src/templating/resources/composition-coordinator.ts","../src/templating/resources/compose.ts","../src/templating/resources/if.ts","../src/templating/resources/repeat.ts","../src/templating/resources/replaceable.ts","../src/templating/resources/with.ts","../src/aurelia.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Constructable, IContainer, Registration, Writable } from '@au-test/kernel';\nimport { IResourceKind, IResourceType } from '../resource';\n\nexport interface IBindingBehaviorSource {\n  name: string;\n}\n\nexport type IBindingBehaviorType = IResourceType<IBindingBehaviorSource>;\n\nexport function bindingBehavior(nameOrSource: string | IBindingBehaviorSource) {\n  return function<T extends Constructable>(target: T) {\n    return BindingBehaviorResource.define(nameOrSource, target);\n  }\n}\n\nexport const BindingBehaviorResource: IResourceKind<IBindingBehaviorSource, IBindingBehaviorType> = {\n  name: 'binding-behavior',\n\n  keyFrom(name: string): string {\n    return `${this.name}:${name}`;\n  },\n\n  isType<T extends Constructable>(type: T): type is T & IBindingBehaviorType {\n    return (type as any).kind === this;\n  },\n\n  define<T extends Constructable>(nameOrSource: string | IBindingBehaviorSource, ctor: T): T & IBindingBehaviorType {\n    const Type = ctor as T & IBindingBehaviorType;\n    const description = typeof nameOrSource === 'string'\n      ? { name: nameOrSource }\n      : nameOrSource;\n\n    (Type as Writable<IBindingBehaviorType>).kind = BindingBehaviorResource;\n    (Type as Writable<IBindingBehaviorType>).description = description;\n    Type.register = register;\n\n    return Type;\n  }\n};\n\nfunction register(this: IBindingBehaviorType, container: IContainer): void {\n  container.register(\n    Registration.singleton(\n      BindingBehaviorResource.keyFrom(this.description.name),\n      this\n    )\n  );\n}\n","export enum BindingFlags {\n  none                   = 0b000000000000000000_00000000_000_00,\n  mustEvaluate           = 0b100000000000000000_00000000_000_00,\n\n  mutation               = 0b000000000000000000_00000000_000_11,\n  isCollectionMutation   = 0b000000000000000000_00000000_000_01,\n  isInstanceMutation     = 0b000000000000000000_00000000_000_10,\n\n  update                 = 0b000000000000000000_00000000_111_00,\n  updateTargetObserver   = 0b000000000000000000_00000000_001_00,\n  updateTargetInstance   = 0b000000000000000000_00000000_010_00,\n  updateSourceExpression = 0b000000000000000000_00000000_100_00,\n\n  from                   = 0b000000000000000000_11111111_000_00,\n  fromFlushChanges       = 0b000000000000000000_00000001_000_00,\n  fromStartTask          = 0b000000000000000000_00000010_000_00,\n  fromStopTask           = 0b000000000000000000_00000100_000_00,\n  fromBind               = 0b000000000000000000_00001000_000_00,\n  fromUnbind             = 0b000000000000000000_00010000_000_00,\n  fromDOMEvent           = 0b000000000000000000_00100000_000_00,\n  fromObserverSetter     = 0b000000000000000000_01000000_000_00,\n  fromBindableHandler    = 0b000000000000000000_10000000_000_00,\n}\n","import { IDisposable, IIndexable } from '@au-test/kernel';\nimport { INode } from '../dom';\nimport { IScope } from './binding-context';\nimport { BindingFlags } from './binding-flags';\nimport { IChangeSet } from './change-set';\n// tslint:disable:no-any\n\nexport interface IBindScope {\n  readonly $isBound: boolean;\n  $bind(flags: BindingFlags, scope: IScope): void;\n  $unbind(flags: BindingFlags): void;\n}\n\n/**\n * Basic interface to normalize getting/setting a value of any property on any object\n */\nexport interface IAccessor<TValue = any> {\n  getValue(): TValue;\n  setValue(newValue: TValue, flags: BindingFlags): void;\n}\n\n/**\n * Describes a target observer for to-view bindings (in other words, an observer without the observation).\n */\nexport interface IBindingTargetAccessor<\n  TObj = any,\n  TProp = keyof TObj,\n  TValue = any>\n  extends IDisposable,\n          IAccessor<TValue>,\n          IPropertyChangeTracker<TObj, TProp> { }\n\n/**\n * Describes a target observer for from-view or two-way bindings.\n */\nexport interface IBindingTargetObserver<\n  TObj = any,\n  TProp = keyof TObj,\n  TValue = any>\n  extends IBindingTargetAccessor<TObj, TProp, TValue>,\n          ISubscribable<MutationKind.instance>,\n          ISubscriberCollection<MutationKind.instance> {\n\n  bind?(flags: BindingFlags): void;\n  unbind?(flags: BindingFlags): void;\n}\n\nexport type AccessorOrObserver = IBindingTargetAccessor | IBindingTargetObserver;\n\nexport type IObservable = (IIndexable | string | Node | INode | Collection) & {\n  readonly $synthetic?: false;\n  $observers?: Record<string, AccessorOrObserver>;\n};\n\n/**\n * An array of indices, where the index of an element represents the index to map FROM, and the numeric value of the element itself represents the index to map TO\n *\n * The deletedItems property contains the items (in case of an array) or keys (in case of map or set) that have been deleted.\n */\nexport type IndexMap = number[] & {\n  deletedItems?: any[];\n};\n\n/**\n * Describes a type that tracks changes and can flush those changes in some way\n */\nexport interface IChangeTracker {\n  hasChanges?: boolean;\n  flushChanges(): void;\n}\n\n/**\n * Mostly just a marker enum to help with typings (specifically to reduce duplication)\n */\nexport enum MutationKind {\n  instance   = 0b01,\n  collection = 0b10\n}\n\n/**\n * Describes a type that specifically tracks changes in an object property, or simply something that can have a getter and/or setter\n */\nexport interface IPropertyChangeTracker<TObj extends Object, TProp = keyof TObj, TValue = any> {\n  obj: TObj;\n  propertyKey?: TProp;\n  currentValue?: TValue;\n}\n\n/**\n * Describes a type that specifically tracks changes in a collection (map, set or array)\n */\nexport interface ICollectionChangeTracker<T extends Collection> extends IChangeTracker {\n  collection: T;\n  indexMap: IndexMap;\n  resetIndexMap(): void;\n}\n\n/**\n * Represents a (subscriber) function that can be called by a PropertyChangeNotifier\n */\nexport type IPropertyChangeHandler<TValue = any> = (newValue: TValue, previousValue: TValue, flags: BindingFlags) => void;\n/**\n * Represents a (observer) function that can notify subscribers of mutations on a property\n */\nexport interface IPropertyChangeNotifier extends IPropertyChangeHandler {}\n\n/**\n * Describes a (subscriber) type that has a function conforming to the IPropertyChangeHandler interface\n */\nexport interface IPropertySubscriber<TValue = any> { handleChange(newValue: TValue, previousValue: TValue, flags: BindingFlags): void; }\n\n/**\n * Represents a (subscriber) function that can be called by a CollectionChangeNotifier\n */\nexport type ICollectionChangeHandler = (origin: string, args: IArguments | null, flags?: BindingFlags) => void;\n/**\n * Represents a (observer) function that can notify subscribers of mutations in a collection\n */\nexport interface ICollectionChangeNotifier extends ICollectionChangeHandler {}\n\n/**\n * Represents a (subscriber) function that can be called by a BatchedCollectionChangeNotifier\n */\nexport type IBatchedCollectionChangeHandler = (indexMap: number[]) => void;\n/**\n * Represents a (observer) function that can notify subscribers of batched mutations in a collection\n */\nexport interface IBatchedCollectionChangeNotifier extends IBatchedCollectionChangeHandler {}\n\n/**\n * Describes a (subscriber) type that has a function conforming to the ICollectionChangeHandler interface\n */\nexport interface ICollectionSubscriber { handleChange(origin: string, args: IArguments | null, flags: BindingFlags): void; }\n/**\n * Describes a (subscriber) type that has a function conforming to the IBatchedCollectionChangeNotifier interface\n */\nexport interface IBatchedCollectionSubscriber { handleBatchedChange(indexMap: number[]): void; }\n\n/**\n * Either a property or collection subscriber\n */\nexport type Subscriber = ICollectionSubscriber | IPropertySubscriber;\n/**\n * Either a batched property or batched collection subscriber\n */\nexport type BatchedSubscriber = IBatchedCollectionSubscriber;\n\n/**\n * Helper type that translates from mutationKind enum to the correct subscriber interface\n */\nexport type MutationKindToSubscriber<T> =\n  T extends MutationKind.instance ? IPropertySubscriber :\n  T extends MutationKind.collection ? ICollectionSubscriber :\n  never;\n\n/**\n * Helper type that translates from mutationKind enum to the correct batched subscriber interface\n */\nexport type MutationKindToBatchedSubscriber<T> =\n  T extends MutationKind.collection ? IBatchedCollectionSubscriber :\n  never;\n\n/**\n * Helper type that translates from mutationKind enum to the correct notifier interface\n */\nexport type MutationKindToNotifier<T> =\n  T extends MutationKind.instance ? IPropertyChangeNotifier :\n  T extends MutationKind.collection ? ICollectionChangeNotifier :\n  never;\n\n/**\n * Helper type that translates from mutationKind enum to the correct batched notifier interface\n */\nexport type MutationKindToBatchedNotifier<T> =\n  T extends MutationKind.collection ? IBatchedCollectionChangeNotifier :\n  never;\n\nexport interface ISubscribable<T extends MutationKind> {\n  subscribe(subscriber: MutationKindToSubscriber<T>): void;\n  unsubscribe(subscriber: MutationKindToSubscriber<T>): void;\n}\n\n/*@internal*/\nexport const enum SubscriberFlags {\n  None            = 0,\n  Subscriber0     = 0b0001,\n  Subscriber1     = 0b0010,\n  Subscriber2     = 0b0100,\n  SubscribersRest = 0b1000,\n  Any             = 0b1111,\n}\n\n/**\n * A collection of property or collection subscribers\n */\nexport interface ISubscriberCollection<T extends MutationKind> extends ISubscribable<T> {\n  /*@internal*/_subscriberFlags?: SubscriberFlags;\n  /*@internal*/_subscriber0?: MutationKindToSubscriber<T>;\n  /*@internal*/_subscriber1?: MutationKindToSubscriber<T>;\n  /*@internal*/_subscriber2?: MutationKindToSubscriber<T>;\n  /*@internal*/_subscribersRest?: MutationKindToSubscriber<T>[];\n\n  callSubscribers: MutationKindToNotifier<T>;\n  hasSubscribers(): boolean;\n  hasSubscriber(subscriber: MutationKindToSubscriber<T>): boolean;\n  removeSubscriber(subscriber: MutationKindToSubscriber<T>): boolean;\n  addSubscriber(subscriber: MutationKindToSubscriber<T>): boolean;\n}\n\n/**\n * A collection of batched property or collection subscribers\n */\nexport interface IBatchedSubscriberCollection<T extends MutationKind> extends IBatchedSubscribable<T> {\n  /*@internal*/_batchedSubscriberFlags?: SubscriberFlags;\n  /*@internal*/_batchedSubscriber0?: MutationKindToBatchedSubscriber<T>;\n  /*@internal*/_batchedSubscriber1?: MutationKindToBatchedSubscriber<T>;\n  /*@internal*/_batchedSubscriber2?: MutationKindToBatchedSubscriber<T>;\n  /*@internal*/_batchedSubscribersRest?: MutationKindToBatchedSubscriber<T>[];\n\n  /*@internal*/changeSet?: IChangeSet;\n  callBatchedSubscribers: MutationKindToBatchedNotifier<T>;\n\n  /*@internal*/flushChanges(): void;\n  hasBatchedSubscribers(): boolean;\n  hasBatchedSubscriber(subscriber: MutationKindToBatchedSubscriber<T>): boolean;\n  removeBatchedSubscriber(subscriber: MutationKindToBatchedSubscriber<T>): boolean;\n  addBatchedSubscriber(subscriber: MutationKindToBatchedSubscriber<T>): boolean;\n}\n\nexport interface IBatchedSubscribable<T extends MutationKind> {\n  subscribeBatched(subscriber: MutationKindToBatchedSubscriber<T>): void;\n  unsubscribeBatched(subscriber: MutationKindToBatchedSubscriber<T>): void;\n}\n\n/**\n * Describes a complete property observer with an accessor, change tracking fields, normal and batched subscribers\n */\nexport interface IPropertyObserver<TObj extends Object, TProp extends keyof TObj> extends\n  IDisposable,\n  IAccessor<TObj[TProp]>,\n  IPropertyChangeTracker<TObj, TProp>,\n  ISubscriberCollection<MutationKind.instance> {\n  /*@internal*/observing: boolean;\n}\n\n/**\n * An any-typed property observer\n */\nexport type PropertyObserver = IPropertyObserver<any, PropertyKey>;\n\n/**\n * A collection (array, set or map)\n */\nexport type Collection = any[] | Set<any> | Map<any, any>;\ninterface IObservedCollection {\n  $observer?: CollectionObserver;\n}\n\n/**\n * An array that is being observed for mutations\n */\nexport interface IObservedArray<T = any> extends IObservedCollection, Array<T> { }\n/**\n * A set that is being observed for mutations\n */\nexport interface IObservedSet<T = any> extends IObservedCollection, Set<T> { }\n/**\n * A map that is being observed for mutations\n */\nexport interface IObservedMap<K = any, V = any> extends IObservedCollection, Map<K, V> { }\n/**\n * A collection that is being observed for mutations\n */\nexport type ObservedCollection = IObservedArray | IObservedSet | IObservedMap;\n\nexport const enum CollectionKind {\n  indexed = 0b1000,\n  keyed   = 0b0100,\n  array   = 0b1001,\n  map     = 0b0110,\n  set     = 0b0111\n}\n\nexport type LengthPropertyName<T> =\n  T extends any[] ? 'length' :\n  T extends Set<any> ? 'size' :\n  T extends Map<any, any> ? 'size' :\n  never;\n\nexport type CollectionTypeToKind<T> =\n  T extends any[] ? CollectionKind.array | CollectionKind.indexed :\n  T extends Set<any> ? CollectionKind.set | CollectionKind.keyed :\n  T extends Map<any, any> ? CollectionKind.map | CollectionKind.keyed :\n  never;\n\nexport type CollectionKindToType<T> =\n  T extends CollectionKind.array ? any[] :\n  T extends CollectionKind.indexed ? any[] :\n  T extends CollectionKind.map ? Map<any, any> :\n  T extends CollectionKind.set ? Set<any> :\n  T extends CollectionKind.keyed ? Set<any> | Map<any, any> :\n  never;\n\nexport type ObservedCollectionKindToType<T> =\n  T extends CollectionKind.array ? IObservedArray :\n  T extends CollectionKind.indexed ? IObservedArray :\n  T extends CollectionKind.map ? IObservedMap :\n  T extends CollectionKind.set ? IObservedSet :\n  T extends CollectionKind.keyed ? IObservedSet | IObservedMap :\n  never;\n\n/**\n * An observer that tracks collection mutations and notifies subscribers (either directly or in batches)\n */\nexport interface ICollectionObserver<T extends CollectionKind> extends\n  IDisposable,\n  ICollectionChangeTracker<CollectionKindToType<T>>,\n  ISubscriberCollection<MutationKind.collection>,\n  IBatchedSubscriberCollection<MutationKind.collection> {\n    /*@internal*/changeSet: IChangeSet;\n    collection: ObservedCollectionKindToType<T>;\n    lengthPropertyName: LengthPropertyName<CollectionKindToType<T>>;\n    collectionKind: T;\n    lengthObserver: IBindingTargetObserver;\n    getLengthObserver(): IBindingTargetObserver;\n}\n\nexport type CollectionObserver = ICollectionObserver<CollectionKind>;\n","import { IIndexable, Primitive } from '@au-test/kernel';\nimport { BindingFlags } from './binding-flags';\nimport { IBatchedCollectionSubscriber, IBatchedSubscriberCollection, IndexMap, IPropertySubscriber, ISubscriberCollection, MutationKind, MutationKindToBatchedSubscriber, MutationKindToSubscriber, SubscriberFlags } from './observation';\n\nexport function subscriberCollection<T extends MutationKind>(mutationKind: T): ClassDecorator {\n  return function(target: Function): void {\n    const proto = <ISubscriberCollection<MutationKind.instance | MutationKind.collection>>target.prototype;\n\n    proto._subscriberFlags = SubscriberFlags.None;\n    proto._subscriber0 = null;\n    proto._subscriber1 = null;\n    proto._subscriber2 = null;\n    proto._subscribersRest = null;\n\n    proto.addSubscriber = addSubscriber;\n    proto.removeSubscriber = removeSubscriber;\n    proto.hasSubscriber = hasSubscriber;\n    proto.hasSubscribers = hasSubscribers;\n    proto.callSubscribers = (mutationKind === MutationKind.instance ? callPropertySubscribers : callCollectionSubscribers);\n  };\n}\n\nfunction addSubscriber<T extends MutationKind>(this: ISubscriberCollection<T>, subscriber: MutationKindToSubscriber<T>): boolean {\n  if (this.hasSubscriber(subscriber)) {\n    return false;\n  }\n  const subscriberFlags = this._subscriberFlags;\n  if (!(subscriberFlags & SubscriberFlags.Subscriber0)) {\n    this._subscriber0 = subscriber;\n    this._subscriberFlags |= SubscriberFlags.Subscriber0;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.Subscriber1)) {\n    this._subscriber1 = subscriber;\n    this._subscriberFlags |= SubscriberFlags.Subscriber1;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.Subscriber2)) {\n    this._subscriber2 = subscriber;\n    this._subscriberFlags |= SubscriberFlags.Subscriber2;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.SubscribersRest)) {\n    this._subscribersRest = [subscriber];\n    this._subscriberFlags |= SubscriberFlags.SubscribersRest;\n    return true;\n  }\n  this._subscribersRest.push(subscriber);\n  return true;\n}\n\nfunction removeSubscriber<T extends MutationKind>(this: ISubscriberCollection<T>, subscriber: IPropertySubscriber): boolean {\n  const subscriberFlags = this._subscriberFlags;\n  if ((subscriberFlags & SubscriberFlags.Subscriber0) && this._subscriber0 === subscriber) {\n    this._subscriber0 = null;\n    this._subscriberFlags &= ~SubscriberFlags.Subscriber0;\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber1) && this._subscriber1 === subscriber) {\n    this._subscriber1 = null;\n    this._subscriberFlags &= ~SubscriberFlags.Subscriber1;\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber2) && this._subscriber2 === subscriber) {\n    this._subscriber2 = null;\n    this._subscriberFlags &= ~SubscriberFlags.Subscriber2;\n    return true;\n  }\n  if (subscriberFlags & SubscriberFlags.SubscribersRest) {\n    const subscribers = this._subscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        subscribers.splice(i, 1);\n        if (ii === 1) {\n          this._subscriberFlags &= ~SubscriberFlags.SubscribersRest;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction callPropertySubscribers(\n  this: ISubscriberCollection<MutationKind.instance>,\n  newValue: IIndexable | Primitive,\n  previousValue: IIndexable | Primitive,\n  flags: BindingFlags): void {\n  /**\n   * Note: change handlers may have the side-effect of adding/removing subscribers to this collection during this\n   * callSubscribers invocation, so we're caching them all before invoking any.\n   * Subscribers added during this invocation are not invoked (and they shouldn't be).\n   * Subscribers removed during this invocation will still be invoked (and they also shouldn't be,\n   * however this is accounted for via $isBound and similar flags on the subscriber objects)\n   */\n  const subscriber0 = this._subscriber0;\n  const subscriber1 = this._subscriber1;\n  const subscriber2 = this._subscriber2;\n  let subscribers = this._subscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    subscriber0.handleChange(newValue, previousValue, flags);\n  }\n  if (subscriber1 !== null) {\n    subscriber1.handleChange(newValue, previousValue, flags);\n  }\n  if (subscriber2 !== null) {\n    subscriber2.handleChange(newValue, previousValue, flags);\n  }\n  const length = subscribers && subscribers.length || 0;\n  if (length > 0) {\n    for (let i = 0; i < length; ++i) {\n      const subscriber = subscribers[i];\n      if (subscriber !== null) {\n        subscriber.handleChange(newValue, previousValue, flags);\n      }\n    }\n  }\n}\n\nfunction callCollectionSubscribers(this: ISubscriberCollection<MutationKind.collection> & Required<IBatchedSubscriberCollection<MutationKind.collection>>, origin: string, args: IArguments | null, flags: BindingFlags): void {\n  const subscriber0 = this._subscriber0;\n  const subscriber1 = this._subscriber1;\n  const subscriber2 = this._subscriber2;\n  let subscribers = this._subscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    subscriber0.handleChange(origin, args, flags);\n  }\n  if (subscriber1 !== null) {\n    subscriber1.handleChange(origin, args, flags);\n  }\n  if (subscriber2 !== null) {\n    subscriber2.handleChange(origin, args, flags);\n  }\n  const length = subscribers && subscribers.length || 0;\n  if (length > 0) {\n    for (let i = 0; i < length; ++i) {\n      const subscriber = subscribers[i];\n      if (subscriber !== null) {\n        subscriber.handleChange(origin, args, flags);\n      }\n    }\n  }\n  this.changeSet.add(this);\n}\n\nfunction hasSubscribers<T extends MutationKind>(this: ISubscriberCollection<T>): boolean {\n  return this._subscriberFlags !== SubscriberFlags.None;\n}\n\nfunction hasSubscriber<T extends MutationKind>(this: ISubscriberCollection<T>, subscriber: IPropertySubscriber): boolean {\n  // Flags here is just a perf tweak\n  // Compared to not using flags, it's a moderate speed-up when this collection does not have the subscriber;\n  // and minor slow-down when it does, and the former is more common than the latter.\n  const subscriberFlags = this._subscriberFlags;\n  if ((subscriberFlags & SubscriberFlags.Subscriber0) && this._subscriber0 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber1) && this._subscriber1 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber2) && this._subscriber2 === subscriber) {\n    return true;\n  }\n  if (subscriberFlags & SubscriberFlags.SubscribersRest) {\n    // no need to check length; if the flag is set, there's always at least one\n    const subscribers = this._subscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function batchedSubscriberCollection(): ClassDecorator {\n  return function(target: Function): void {\n    const proto = <IBatchedSubscriberCollection<MutationKind.collection>>target.prototype;\n\n    proto._batchedSubscriberFlags = SubscriberFlags.None;\n    proto._batchedSubscriber0 = null;\n    proto._batchedSubscriber1 = null;\n    proto._batchedSubscriber2 = null;\n    proto._batchedSubscribersRest = null;\n\n    proto.addBatchedSubscriber = addBatchedSubscriber;\n    proto.removeBatchedSubscriber = removeBatchedSubscriber;\n    proto.hasBatchedSubscriber = hasBatchedSubscriber;\n    proto.hasBatchedSubscribers = hasBatchedSubscribers;\n    proto.callBatchedSubscribers = callBatchedCollectionSubscribers;\n  };\n}\n\nfunction addBatchedSubscriber(this: IBatchedSubscriberCollection<MutationKind.collection>, subscriber: MutationKindToBatchedSubscriber<MutationKind.collection>): boolean {\n  if (this.hasBatchedSubscriber(subscriber)) {\n    return false;\n  }\n  const subscriberFlags = this._batchedSubscriberFlags;\n  if (!(subscriberFlags & SubscriberFlags.Subscriber0)) {\n    this._batchedSubscriber0 = subscriber;\n    this._batchedSubscriberFlags |= SubscriberFlags.Subscriber0;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.Subscriber1)) {\n    this._batchedSubscriber1 = subscriber;\n    this._batchedSubscriberFlags |= SubscriberFlags.Subscriber1;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.Subscriber2)) {\n    this._batchedSubscriber2 = subscriber;\n    this._batchedSubscriberFlags |= SubscriberFlags.Subscriber2;\n    return true;\n  }\n  if (!(subscriberFlags & SubscriberFlags.SubscribersRest)) {\n    this._batchedSubscribersRest = [subscriber];\n    this._batchedSubscriberFlags |= SubscriberFlags.SubscribersRest;\n    return true;\n  }\n  this._batchedSubscribersRest.push(subscriber);\n  return true;\n}\n\nfunction removeBatchedSubscriber(this: IBatchedSubscriberCollection<MutationKind.collection>, subscriber: IBatchedCollectionSubscriber): boolean {\n  const subscriberFlags = this._batchedSubscriberFlags;\n  if ((subscriberFlags & SubscriberFlags.Subscriber0) && this._batchedSubscriber0 === subscriber) {\n    this._batchedSubscriber0 = null;\n    this._batchedSubscriberFlags &= ~SubscriberFlags.Subscriber0;\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber1) && this._batchedSubscriber1 === subscriber) {\n    this._batchedSubscriber1 = null;\n    this._batchedSubscriberFlags &= ~SubscriberFlags.Subscriber1;\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber2) && this._batchedSubscriber2 === subscriber) {\n    this._batchedSubscriber2 = null;\n    this._batchedSubscriberFlags &= ~SubscriberFlags.Subscriber2;\n    return true;\n  }\n  if (subscriberFlags & SubscriberFlags.SubscribersRest) {\n    const subscribers = this._batchedSubscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        subscribers.splice(i, 1);\n        if (ii === 1) {\n          this._batchedSubscriberFlags &= ~SubscriberFlags.SubscribersRest;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction callBatchedCollectionSubscribers(this: IBatchedSubscriberCollection<MutationKind.collection>, indexMap: IndexMap): void {\n  const subscriber0 = this._batchedSubscriber0;\n  const subscriber1 = this._batchedSubscriber1;\n  const subscriber2 = this._batchedSubscriber2;\n  let subscribers = this._batchedSubscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    subscriber0.handleBatchedChange(indexMap);\n  }\n  if (subscriber1 !== null) {\n    subscriber1.handleBatchedChange(indexMap);\n  }\n  if (subscriber2 !== null) {\n    subscriber2.handleBatchedChange(indexMap);\n  }\n  const length = subscribers && subscribers.length || 0;\n  if (length > 0) {\n    for (let i = 0; i < length; ++i) {\n      const subscriber = subscribers[i];\n      if (subscriber !== null) {\n        subscriber.handleBatchedChange(indexMap);\n      }\n    }\n  }\n}\n\nfunction hasBatchedSubscribers(this: IBatchedSubscriberCollection<MutationKind.collection>): boolean {\n  return this._batchedSubscriberFlags !== SubscriberFlags.None;\n}\n\nfunction hasBatchedSubscriber(this: IBatchedSubscriberCollection<MutationKind.collection>, subscriber: IBatchedCollectionSubscriber): boolean {\n  // Flags here is just a perf tweak\n  // Compared to not using flags, it's a moderate speed-up when this collection does not have the subscriber;\n  // and minor slow-down when it does, and the former is more common than the latter.\n  const subscriberFlags = this._batchedSubscriberFlags;\n  if ((subscriberFlags & SubscriberFlags.Subscriber0) && this._batchedSubscriber0 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber1) && this._batchedSubscriber1 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SubscriberFlags.Subscriber2) && this._batchedSubscriber2 === subscriber) {\n    return true;\n  }\n  if (subscriberFlags & SubscriberFlags.SubscribersRest) {\n    // no need to check length; if the flag is set, there's always at least one\n    const subscribers = this._batchedSubscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","import { IIndexable, Primitive } from '@au-test/kernel';\nimport { BindingFlags } from './binding-flags';\nimport { IChangeSet } from './change-set';\nimport { IBindingTargetAccessor, MutationKind } from './observation';\nimport { subscriberCollection } from './subscriber-collection';\n\ntype BindingTargetAccessor = IBindingTargetAccessor & {\n  changeSet: IChangeSet;\n  currentFlags: BindingFlags;\n  oldValue?: IIndexable | Primitive;\n  defaultValue: Primitive | IIndexable;\n  flushChanges(): void;\n  setValueCore(value: Primitive | IIndexable, flags: BindingFlags): void;\n};\n\nfunction setValue(this: BindingTargetAccessor, newValue: Primitive | IIndexable, flags: BindingFlags): Promise<void> {\n  const currentValue = this.currentValue;\n  newValue = newValue === null || newValue === undefined ? this.defaultValue : newValue;\n  if (currentValue !== newValue) {\n    this.currentValue = newValue;\n    if (flags & BindingFlags.fromFlushChanges) {\n      this.setValueCore(newValue, flags);\n    } else {\n      this.currentFlags = flags;\n      return this.changeSet.add(this);\n    }\n  }\n  return Promise.resolve();\n}\n\nconst defaultFlushChangesFlags = BindingFlags.fromFlushChanges | BindingFlags.updateTargetInstance;\n\nfunction flushChanges(this: BindingTargetAccessor): void {\n  const currentValue = this.currentValue;\n  // we're doing this check because a value could be set multiple times before a flush, and the final value could be the same as the original value\n  // in which case the target doesn't need to be updated\n  if (this.oldValue !== currentValue) {\n    this.setValueCore(currentValue, this.currentFlags | defaultFlushChangesFlags);\n    this.oldValue = this.currentValue;\n  }\n}\n\nfunction dispose(this: BindingTargetAccessor): void {\n  this.currentValue = null;\n  this.oldValue = null;\n  this.defaultValue = null;\n\n  this.obj = null;\n  this.propertyKey = '';\n\n  this.changeSet = null;\n}\n\nexport function targetObserver(defaultValue: Primitive | IIndexable = null): ClassDecorator {\n  return function(target: Function): void {\n    subscriberCollection(MutationKind.instance)(target);\n    const proto = <BindingTargetAccessor>target.prototype;\n\n    proto.currentValue = defaultValue;\n    proto.oldValue = defaultValue;\n    proto.defaultValue = defaultValue;\n\n    proto.obj = null;\n    proto.propertyKey = '';\n\n    proto.setValue = proto.setValue || setValue;\n    proto.flushChanges = proto.flushChanges || flushChanges;\n    proto.dispose = proto.dispose || dispose;\n    proto.changeSet = null;\n  };\n}\n","import { BindingFlags } from './binding-flags';\nimport { Collection, CollectionKind, CollectionObserver, IBindingTargetObserver, ICollectionObserver, IndexMap, IPropertySubscriber, MutationKind } from './observation';\nimport { batchedSubscriberCollection, subscriberCollection } from './subscriber-collection';\nimport { targetObserver } from './target-observer';\n\nfunction flushChanges(this: CollectionObserver): void {\n  this.callBatchedSubscribers(this.indexMap);\n  this.resetIndexMap();\n}\n\nfunction dispose(this: CollectionObserver): void {\n  this.collection.$observer = undefined;\n  this.collection = null;\n  this.indexMap = null;\n}\n\nfunction resetIndexMapIndexed(this: ICollectionObserver<CollectionKind.indexed>): void {\n  const len = this.collection.length;\n  const indexMap: IndexMap = (this.indexMap = Array(len));\n  let i = 0;\n  while (i < len) {\n    indexMap[i] = i++;\n  }\n  indexMap.deletedItems = [];\n}\n\nfunction resetIndexMapKeyed(this: ICollectionObserver<CollectionKind.keyed>): void {\n  const len = this.collection.size;\n  const indexMap: IndexMap = (this.indexMap = Array(len));\n  let i = 0;\n  while (i < len) {\n    indexMap[i] = i++;\n  }\n  indexMap.deletedItems = [];\n}\n\nfunction getLengthObserver(this: CollectionObserver): CollectionLengthObserver {\n  return this.lengthObserver || <any>(this.lengthObserver = new CollectionLengthObserver(<any>this, this.lengthPropertyName));\n}\n\nexport function collectionObserver(kind: CollectionKind.array | CollectionKind.set | CollectionKind.map): ClassDecorator {\n  return function(target: Function): void {\n    subscriberCollection(MutationKind.collection)(target);\n    batchedSubscriberCollection()(target);\n    const proto = <CollectionObserver>target.prototype;\n\n    proto.collection = null;\n    proto.indexMap = null;\n    proto.hasChanges = false;\n    proto.lengthPropertyName = kind & CollectionKind.indexed ? 'length' : 'size';\n    proto.collectionKind = kind;\n    proto.resetIndexMap = kind & CollectionKind.indexed ? resetIndexMapIndexed : resetIndexMapKeyed;\n    proto.flushChanges = flushChanges;\n    proto.dispose = dispose;\n    proto.getLengthObserver = getLengthObserver;\n\n    proto.subscribe = proto.subscribe || proto.addSubscriber;\n    proto.unsubscribe = proto.unsubscribe || proto.removeSubscriber;\n\n    proto.subscribeBatched = proto.subscribeBatched || proto.addBatchedSubscriber;\n    proto.unsubscribeBatched = proto.unsubscribeBatched || proto.removeBatchedSubscriber;\n  };\n}\n\nexport interface CollectionLengthObserver extends IBindingTargetObserver<any, string> {}\n\n@targetObserver()\nexport class CollectionLengthObserver implements CollectionLengthObserver {\n  public currentValue: number;\n  public currentFlags: BindingFlags;\n\n  constructor(public obj: Collection, public propertyKey: 'length' | 'size') {\n    this.currentValue = obj[propertyKey];\n  }\n\n  public getValue(): number {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValueCore(newValue: number): void {\n    this.obj[this.propertyKey] = newValue;\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n  }\n}\n","import { IIndexable, Primitive } from '@au-test/kernel';\n// tslint:disable:no-reserved-keywords\nimport { BindingFlags } from './binding-flags';\nimport { IChangeSet } from './change-set';\nimport { collectionObserver } from './collection-observer';\nimport { CollectionKind, IBatchedCollectionChangeNotifier, IBatchedCollectionSubscriber, ICollectionChangeNotifier, ICollectionObserver, ICollectionSubscriber, IndexMap, IObservedArray } from './observation';\n\nconst proto = Array.prototype;\nexport const nativePush = proto.push; // TODO: probably want to make these internal again\nexport const nativeUnshift = proto.unshift;\nexport const nativePop = proto.pop;\nexport const nativeShift = proto.shift;\nexport const nativeSplice = proto.splice;\nexport const nativeReverse = proto.reverse;\nexport const nativeSort = proto.sort;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.push\nfunction observePush(this: IObservedArray): ReturnType<typeof nativePush> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativePush.apply(this, arguments);\n  }\n  const len = this.length;\n  const argCount = arguments.length;\n  if (argCount === 0) {\n    return len;\n  }\n  this.length = o.indexMap.length = len + argCount;\n  let i = len;\n  while (i < this.length) {\n    this[i] = arguments[i - len]; o.indexMap[i] = - 2;\n    i++;\n  }\n  o.callSubscribers('push', arguments, BindingFlags.isCollectionMutation);\n  return this.length;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.unshift\nfunction observeUnshift(this: IObservedArray): ReturnType<typeof nativeUnshift>  {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeUnshift.apply(this, arguments);\n  }\n  const argCount = arguments.length;\n  const inserts = new Array(argCount);\n  let i = 0;\n  while (i < argCount) {\n    inserts[i++] = - 2;\n  }\n  nativeUnshift.apply(o.indexMap, inserts);\n  const len = nativeUnshift.apply(this, arguments);\n  o.callSubscribers('unshift', arguments, BindingFlags.isCollectionMutation);\n  return len;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.pop\nfunction observePop(this: IObservedArray): ReturnType<typeof nativePop> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativePop.call(this);\n  }\n  const indexMap = o.indexMap;\n  const element = nativePop.call(this);\n  // only mark indices as deleted if they actually existed in the original array\n  const index = indexMap.length - 1;\n  if (indexMap[index] > -1) {\n    nativePush.call(indexMap.deletedItems, element);\n  }\n  nativePop.call(indexMap);\n  o.callSubscribers('pop', arguments, BindingFlags.isCollectionMutation);\n  return element;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.shift\nfunction observeShift(this: IObservedArray): ReturnType<typeof nativeShift> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeShift.call(this);\n  }\n  const indexMap = o.indexMap;\n  const element = nativeShift.call(this);\n  // only mark indices as deleted if they actually existed in the original array\n  if (indexMap[0] > -1) {\n    nativePush.call(indexMap.deletedItems, element);\n  }\n  nativeShift.call(indexMap);\n  o.callSubscribers('shift', arguments, BindingFlags.isCollectionMutation);\n  return element;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\nfunction observeSplice(this: IObservedArray, start: number, deleteCount?: number): ReturnType<typeof nativeSplice> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeSplice.apply(this, arguments);\n  }\n  const indexMap = o.indexMap;\n  if (deleteCount > 0) {\n    let i = start || 0;\n    const to = i + deleteCount;\n    while (i < to) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, this[i]);\n      }\n      i++;\n    }\n  }\n  const argCount = arguments.length;\n  if (argCount > 2) {\n    const itemCount = argCount - 2;\n    const inserts = new Array(itemCount);\n    let i = 0;\n    while (i < itemCount) {\n      inserts[i++] = - 2;\n    }\n    nativeSplice.call(indexMap, start, deleteCount, ...inserts);\n  } else if (argCount === 2) {\n    nativeSplice.call(indexMap, start, deleteCount);\n  }\n  const deleted = nativeSplice.apply(this, arguments);\n  o.callSubscribers('splice', arguments, BindingFlags.isCollectionMutation);\n  return deleted;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.reverse\nfunction observeReverse(this: IObservedArray): ReturnType<typeof nativeReverse> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeReverse.call(this);\n  }\n  const len = this.length;\n  const middle = (len / 2) | 0;\n  let lower = 0;\n  while (lower !== middle) {\n    const upper = len - lower - 1;\n    const lowerValue = this[lower]; const lowerIndex = o.indexMap[lower];\n    const upperValue = this[upper]; const upperIndex = o.indexMap[upper];\n    this[lower] = upperValue; o.indexMap[lower] = upperIndex;\n    this[upper] = lowerValue; o.indexMap[upper] = lowerIndex;\n    lower++;\n  }\n  o.callSubscribers('reverse', arguments, BindingFlags.isCollectionMutation);\n  return this;\n}\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.sort\n// https://github.com/v8/v8/blob/master/src/js/array.js\nfunction observeSort(this: IObservedArray, compareFn?: (a: IIndexable | Primitive, b: IIndexable | Primitive) => number): IObservedArray {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeSort.call(this, compareFn);\n  }\n  const len = this.length;\n  if (len < 2) {\n    return this;\n  }\n  quickSort(this, o.indexMap, 0, len, preSortCompare);\n  let i = 0;\n  while (i < len) {\n    if (this[i] === undefined) {\n      break;\n    }\n    i++;\n  }\n  if (compareFn === undefined || typeof compareFn !== 'function'/*spec says throw a TypeError, should we do that too?*/) {\n    compareFn = sortCompare;\n  }\n  quickSort(this, o.indexMap, 0, i, compareFn);\n  o.callSubscribers('sort', arguments, BindingFlags.isCollectionMutation);\n  return this;\n}\n\n// https://tc39.github.io/ecma262/#sec-sortcompare\nfunction sortCompare(x: IIndexable | Primitive, y: IIndexable | Primitive): number {\n  if (x === y) {\n    return 0;\n  }\n  x = x === null ? 'null' : x.toString();\n  y = y === null ? 'null' : y.toString();\n  return x < y ? -1 : 1;\n}\n\nfunction preSortCompare(x: IIndexable | Primitive, y: IIndexable | Primitive): number {\n  if (x === undefined) {\n    if (y === undefined) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n  if (y === undefined) {\n    return -1;\n  }\n  return 0;\n}\n\nfunction insertionSort(arr: IObservedArray, indexMap: IndexMap, from: number, to: number, compareFn: (a: IIndexable | Primitive, b: IIndexable | Primitive) => number): void {\n  let velement, ielement, vtmp, itmp, order;\n  let i, j;\n  for (i = from + 1; i < to; i++) {\n    velement = arr[i]; ielement = indexMap[i];\n    for (j = i - 1; j >= from; j--) {\n      vtmp = arr[j]; itmp = indexMap[j];\n      order = compareFn(vtmp, velement);\n      if (order > 0) {\n        arr[j + 1] = vtmp; indexMap[j + 1] = itmp;\n      } else {\n        break;\n      }\n    }\n    arr[j + 1] = velement; indexMap[j + 1] = ielement;\n  }\n}\n\nfunction quickSort(arr: IObservedArray, indexMap: IndexMap, from: number, to: number, compareFn: (a: IIndexable | Primitive, b: IIndexable | Primitive) => number): void {\n  let thirdIndex = 0, i = 0;\n  let v0, v1, v2;\n  let i0, i1, i2;\n  let c01, c02, c12;\n  let vtmp, itmp;\n  let vpivot, ipivot, lowEnd, highStart;\n  let velement, ielement, order, vtopElement;\n\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    if (to - from <= 10) {\n      insertionSort(arr, indexMap, from, to, compareFn);\n      return;\n    }\n\n    thirdIndex = from + ((to - from) >> 1);\n    v0 = arr[from];       i0 = indexMap[from];\n    v1 = arr[to - 1];     i1 = indexMap[to - 1];\n    v2 = arr[thirdIndex]; i2 = indexMap[thirdIndex];\n    c01 = compareFn(v0, v1);\n    if (c01 > 0) {\n      vtmp = v0; itmp = i0;\n      v0 = v1;   i0 = i1;\n      v1 = vtmp; i1 = itmp;\n    }\n    c02 = compareFn(v0, v2);\n    if (c02 >= 0) {\n      vtmp = v0; itmp = i0;\n      v0 = v2;   i0 = i2;\n      v2 = v1;   i2 = i1;\n      v1 = vtmp; i1 = itmp;\n    } else {\n      c12 = compareFn(v1, v2);\n      if (c12 > 0) {\n        vtmp = v1; itmp = i1;\n        v1 = v2;   i1 = i2;\n        v2 = vtmp; i2 = itmp;\n      }\n    }\n    arr[from] = v0;   indexMap[from] = i0;\n    arr[to - 1] = v2; indexMap[to - 1] = i2;\n    vpivot = v1;      ipivot = i1;\n    lowEnd = from + 1;\n    highStart = to - 1;\n    arr[thirdIndex] = arr[lowEnd]; indexMap[thirdIndex] = indexMap[lowEnd];\n    arr[lowEnd] = vpivot;          indexMap[lowEnd] = ipivot;\n\n    partition: for (i = lowEnd + 1; i < highStart; i++) {\n      velement = arr[i]; ielement = indexMap[i];\n      order = compareFn(velement, vpivot);\n      if (order < 0) {\n        arr[i] = arr[lowEnd];   indexMap[i] = indexMap[lowEnd];\n        arr[lowEnd] = velement; indexMap[lowEnd] = ielement;\n        lowEnd++;\n      } else if (order > 0) {\n        do {\n          highStart--;\n          // tslint:disable-next-line:triple-equals\n          if (highStart == i) {\n            break partition;\n          }\n          vtopElement = arr[highStart];          order = compareFn(vtopElement, vpivot);\n        } while (order > 0);\n        arr[i] = arr[highStart];   indexMap[i] = indexMap[highStart];\n        arr[highStart] = velement; indexMap[highStart] = ielement;\n        if (order < 0) {\n          velement = arr[i];      ielement = indexMap[i];\n          arr[i] = arr[lowEnd];   indexMap[i] = indexMap[lowEnd];\n          arr[lowEnd] = velement; indexMap[lowEnd] = ielement;\n          lowEnd++;\n        }\n      }\n    }\n    if (to - highStart < lowEnd - from) {\n      quickSort(arr, indexMap, highStart, to, compareFn);\n      to = lowEnd;\n    } else {\n      quickSort(arr, indexMap, from, lowEnd, compareFn);\n      from = highStart;\n    }\n  }\n}\n\nfor (const observe of [observePush, observeUnshift, observePop, observeShift, observeSplice, observeReverse, observeSort]) {\n  Object.defineProperty(observe, 'observing', { value: true, writable: false, configurable: false, enumerable: false });\n}\n\nexport function enableArrayObservation(): void {\n  if (proto.push['observing'] !== true) proto.push = observePush;\n  if (proto.unshift['observing'] !== true) proto.unshift = observeUnshift;\n  if (proto.pop['observing'] !== true) proto.pop = observePop;\n  if (proto.shift['observing'] !== true) proto.shift = observeShift;\n  if (proto.splice['observing'] !== true) proto.splice = observeSplice;\n  if (proto.reverse['observing'] !== true) proto.reverse = observeReverse;\n  if (proto.sort['observing'] !== true) proto.sort = observeSort;\n}\n\nenableArrayObservation();\n\nexport function disableArrayObservation(): void {\n  if (proto.push['observing'] === true) proto.push = nativePush;\n  if (proto.unshift['observing'] === true) proto.unshift = nativeUnshift;\n  if (proto.pop['observing'] === true) proto.pop = nativePop;\n  if (proto.shift['observing'] === true) proto.shift = nativeShift;\n  if (proto.splice['observing'] === true) proto.splice = nativeSplice;\n  if (proto.reverse['observing'] === true) proto.reverse = nativeReverse;\n  if (proto.sort['observing'] === true) proto.sort = nativeSort;\n}\n\nexport interface ArrayObserver extends ICollectionObserver<CollectionKind.array> {}\n\n@collectionObserver(CollectionKind.array)\nexport class ArrayObserver implements ArrayObserver {\n  public resetIndexMap: () => void;\n  public changeSet: IChangeSet;\n\n  public collection: IObservedArray;\n\n  constructor(changeSet: IChangeSet, array: IObservedArray) {\n    this.changeSet = changeSet;\n    array.$observer = this;\n    this.collection = array;\n    this.resetIndexMap();\n  }\n}\n\nexport function getArrayObserver(changeSet: IChangeSet, array: IObservedArray): ArrayObserver {\n  return (array.$observer as ArrayObserver) || new ArrayObserver(changeSet, array);\n}\n","import { IIndexable, Primitive } from '@au-test/kernel';\n// tslint:disable:no-reserved-keywords\nimport { nativePush, nativeSplice } from './array-observer';\nimport { BindingFlags } from './binding-flags';\nimport { IChangeSet } from './change-set';\nimport { collectionObserver } from './collection-observer';\nimport { CollectionKind, ICollectionObserver, IObservedSet } from './observation';\n\nconst proto = Set.prototype;\nexport const nativeAdd = proto.add; // TODO: probably want to make these internal again\nexport const nativeClear = proto.clear;\nexport const nativeDelete = proto.delete;\n\n// note: we can't really do much with Set due to the internal data structure not being accessible so we're just using the native calls\n// fortunately, add/delete/clear are easy to reconstruct for the indexMap\n\n// https://tc39.github.io/ecma262/#sec-set.prototype.add\nfunction observeAdd(this: IObservedSet, value: IIndexable | Primitive): ReturnType<typeof nativeAdd> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeAdd.call(this, value);\n  }\n  const oldSize = this.size;\n  nativeAdd.call(this, value);\n  const newSize = this.size;\n  if (newSize === oldSize) {\n    return this;\n  }\n  o.indexMap[oldSize] = -2;\n  o.callSubscribers('add', arguments, BindingFlags.isCollectionMutation);\n  return this;\n}\n\n// https://tc39.github.io/ecma262/#sec-set.prototype.clear\nfunction observeClear(this: IObservedSet): ReturnType<typeof nativeClear>  {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeClear.call(this);\n  }\n  const size = this.size;\n  if (size > 0) {\n    const indexMap = o.indexMap;\n    let i = 0;\n    for (const entry of this.keys()) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, entry);\n      }\n      i++;\n    }\n    nativeClear.call(this);\n    indexMap.length = 0;\n    o.callSubscribers('clear', arguments, BindingFlags.isCollectionMutation);\n  }\n  return undefined;\n}\n\n// https://tc39.github.io/ecma262/#sec-set.prototype.delete\nfunction observeDelete(this: IObservedSet, value: IIndexable | Primitive): ReturnType<typeof nativeDelete> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeDelete.call(this, value);\n  }\n  const size = this.size;\n  if (size === 0) {\n    return false;\n  }\n  let i = 0;\n  const indexMap = o.indexMap;\n  for (const entry of this.keys()) {\n    if (entry === value) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, entry);\n      }\n      nativeSplice.call(indexMap, i, 1);\n      return nativeDelete.call(this, value);\n    }\n    i++;\n  }\n  o.callSubscribers('delete', arguments, BindingFlags.isCollectionMutation);\n  return false;\n}\n\nfor (const observe of [observeAdd, observeClear, observeDelete]) {\n  Object.defineProperty(observe, 'observing', { value: true, writable: false, configurable: false, enumerable: false });\n}\n\nexport function enableSetObservation(): void {\n  if (proto.add['observing'] !== true) proto.add = observeAdd;\n  if (proto.clear['observing'] !== true) proto.clear = observeClear;\n  if (proto.delete['observing'] !== true) proto.delete = observeDelete;\n}\n\nenableSetObservation();\n\nexport function disableSetObservation(): void {\n  if (proto.add['observing'] === true) proto.add = nativeAdd;\n  if (proto.clear['observing'] === true) proto.clear = nativeClear;\n  if (proto.delete['observing'] === true) proto.delete = nativeDelete;\n}\n\nexport interface SetObserver extends ICollectionObserver<CollectionKind.set> {}\n\n@collectionObserver(CollectionKind.set)\nexport class SetObserver implements SetObserver {\n  public resetIndexMap: () => void;\n  public changeSet: IChangeSet;\n\n  public collection: IObservedSet;\n\n  constructor(changeSet: IChangeSet, set: IObservedSet) {\n    this.changeSet = changeSet;\n    set.$observer = this;\n    this.collection = set;\n    this.resetIndexMap();\n  }\n}\n\nexport function getSetObserver(changeSet: IChangeSet, set: IObservedSet): SetObserver {\n  return (set.$observer as SetObserver) || new SetObserver(changeSet, set);\n}\n","import { DI } from '@au-test/kernel';\nimport { IChangeTracker } from './observation';\nimport { nativeAdd } from './set-observer';\n\n/**\n * Represents a set of ChangeTrackers (typically observers) containing changes that can be flushed in some way (e.g. by calling subscribers).\n *\n * The ChangeSet itself also implements the IChangeTracker interface, allowing sets of changes to be grouped together and composed into a tree.\n */\nexport interface IChangeSet extends IChangeTracker {\n  /**\n   * A promise that resolves when the current set of changes has been flushed.\n   * This is the same promise that is returned from `add`\n   */\n  readonly flushed: Promise<void>;\n\n  /**\n   * Indicates whether this ChangeSet is currently flushing changes\n   */\n  readonly flushing: boolean;\n\n  /**\n   * The number of ChangeTrackers that this set contains\n   */\n  readonly size: number;\n\n  /**\n   * Flushes the changes for all ChangeTrackers currently present in this set.\n   */\n  flushChanges(): void;\n\n  /**\n   * Returns this set of ChangeTrackers as an array.\n   */\n  toArray(): IChangeTracker[];\n\n  /**\n   * Adds a ChangeTracker to the set. Similar to how a normal Set behaves, adding the same item multiple times has the same effect as adding it once.\n   *\n   * @returns A promise that resolves when the changes have been flushed.\n   */\n  add(changeTracker: IChangeTracker): Promise<void>;\n\n  /**\n   * Returns true if the specified ChangeTracker is present in the set.\n   */\n  has(changeTracker: IChangeTracker): boolean;\n}\n\nexport const IChangeSet = DI.createInterface<IChangeSet>()\n  .withDefault(x => x.singleton(<any>ChangeSet));\n\n/*@internal*/\nexport class ChangeSet extends Set<IChangeTracker> implements IChangeSet {\n  public flushed: Promise<void>;\n  public flushing: boolean = false;\n\n  /*@internal*/\n  public promise: Promise<void> = Promise.resolve();\n\n  public toArray(): IChangeTracker[] {\n    const items = new Array<IChangeTracker>(this.size);\n    let i = 0;\n    for (const item of this.keys()) {\n      items[i++] = item;\n    }\n    return items;\n  }\n\n  /**\n   * This particular implementation is recursive; any changes added as a side-effect of flushing changes, will be flushed during the same tick.\n   */\n  public flushChanges = (): void => {\n    this.flushing = true;\n    while (this.size > 0) {\n      const items = this.toArray();\n      this.clear();\n      const len = items.length;\n      let i = 0;\n      while (i < len) {\n        items[i++].flushChanges();\n      }\n    }\n    this.flushing = false;\n  }\n\n  public add(changeTracker: IChangeTracker): never; // this is a hack to keep intellisense/type checker from nagging about signature compatibility\n  public add(changeTracker: IChangeTracker): Promise<void> {\n    if (this.size === 0) {\n      this.flushed = this.promise.then(this.flushChanges);\n    }\n    nativeAdd.call(this, changeTracker);\n    return this.flushed;\n  }\n}\n","import { DI, IContainer, IResolver, PLATFORM } from '@au-test/kernel';\nimport { ICustomElement } from '.';\n\nexport interface INodeLike {\n  readonly firstChild: INode | null;\n  readonly lastChild: INode | null;\n  readonly childNodes: ArrayLike<INode>;\n}\n\nexport interface INode extends INodeLike {\n  readonly parentNode: INode | null;\n  readonly nextSibling: INode | null;\n  readonly previousSibling: INode | null;\n}\n\nexport interface ICustomElementHost extends INode {\n  $customElement?: ICustomElement;\n}\n\nexport const INode = DI.createInterface<INode>().noDefault();\n\nexport interface IRenderLocation extends ICustomElementHost { }\n\n\nexport const IRenderLocation = DI.createInterface<IRenderLocation>().noDefault();\n\n/**\n * Represents a DocumentFragment\n */\nexport interface INodeSequence extends INodeLike {\n  /**\n   * The nodes of this sequence.\n   */\n  childNodes: ReadonlyArray<INode>;\n\n  /**\n   * Find all instruction targets in this sequence.\n   */\n  findTargets(): ArrayLike<INode> | ReadonlyArray<INode>;\n\n  /**\n   * Insert this sequence as a sibling before refNode\n   */\n  insertBefore(refNode: INode): void;\n\n  /**\n   * Append this sequence as a child to parent\n   */\n  appendTo(parent: INode): void;\n\n  /**\n   * Remove this sequence from its parent.\n   */\n  remove(): void;\n}\n\nexport interface INodeObserver {\n  disconnect(): void;\n}\n\n/*@internal*/\nexport function createNodeSequenceFromFragment(fragment: DocumentFragment): INodeSequence {\n  return new FragmentNodeSequence(<DocumentFragment>fragment.cloneNode(true));\n}\n\n// pre-declare certain functions whose behavior depends on a once-checked global condition for better performance\nfunction returnTrue(): true {\n  return true;\n}\n\nfunction returnFalse(): false {\n  return false;\n}\n\nfunction removeNormal(node: Element): void {\n  node.remove();\n}\n\nfunction removePolyfilled(node: Element): void {\n  // not sure if we still actually need this, this used to be an IE9/10 thing\n  node.parentNode.removeChild(node);\n}\n\nexport const DOM = {\n  createFactoryFromMarkupOrNode(markupOrNode: string | INode): () => INodeSequence {\n    let template: HTMLTemplateElement;\n    if (markupOrNode instanceof Node) {\n      if ((<HTMLTemplateElement>markupOrNode).content) {\n        template = markupOrNode as any;\n      } else {\n        template = DOM.createTemplate() as any;\n        template.content.appendChild(<Node>markupOrNode);\n      }\n    } else {\n      template = DOM.createTemplate() as any;\n      template.innerHTML = <string>markupOrNode;\n    }\n\n    // bind performs a bit better and gives a cleaner closure than an arrow function\n    return createNodeSequenceFromFragment.bind(null, template.content);\n  },\n\n  createElement(name: string): INode {\n    return document.createElement(name);\n  },\n\n  createText(text: string): INode {\n    return document.createTextNode(text);\n  },\n\n  createNodeObserver(target: INode, callback: MutationCallback, options: MutationObserverInit) {\n    const observer = new MutationObserver(callback);\n    observer.observe(target as Node, options);\n    return observer;\n  },\n\n  attachShadow(host: INode, options: ShadowRootInit): INode {\n    return (host as Element).attachShadow(options);\n  },\n\n  /*@internal*/\n  createTemplate(): INode {\n    return document.createElement('template');\n  },\n\n  cloneNode(node: INode, deep?: boolean): INode {\n    return (<Node>node).cloneNode(deep !== false); // use true unless the caller explicitly passes in false\n  },\n\n  migrateChildNodes(currentParent: INode, newParent: INode): void {\n    const append = DOM.appendChild;\n    while (currentParent.firstChild) {\n      append(newParent, currentParent.firstChild);\n    }\n  },\n\n  isNodeInstance(potentialNode: any): potentialNode is INode {\n    return potentialNode instanceof Node;\n  },\n\n  isElementNodeType(node: INode): boolean {\n    return (<Node>node).nodeType === 1;\n  },\n\n  isTextNodeType(node: INode): boolean {\n    return (<Node>node).nodeType === 3;\n  },\n\n  remove(node: INodeLike): void {\n    // only check the prototype once and then permanently set a polyfilled or non-polyfilled call to save a few cycles\n    if (Element.prototype.remove === undefined) {\n      (DOM.remove = removePolyfilled)(<Element>node);\n    } else {\n      (DOM.remove = removeNormal)(<Element>node);\n    }\n  },\n\n  replaceNode(newChild: INode, oldChild: INode): void {\n    if (oldChild.parentNode) {\n      (<Node>oldChild.parentNode).replaceChild(<Node>newChild, <Node>oldChild);\n    }\n  },\n\n  appendChild(parent: INode, child: INode): void {\n    (<Node>parent).appendChild(<Node>child);\n  },\n\n  insertBefore(nodeToInsert: INode, referenceNode: INode): void {\n    (<Node>referenceNode.parentNode).insertBefore(<Node>nodeToInsert, <Node>referenceNode);\n  },\n\n  getAttribute(node: INode, name: string): any {\n    return (<Element>node).getAttribute(name);\n  },\n\n  setAttribute(node: INode, name: string, value: any): void {\n    (<Element>node).setAttribute(name, value);\n  },\n\n  removeAttribute(node: INode, name: string): void {\n    (<Element>node).removeAttribute(name);\n  },\n\n  hasClass(node: INode, className: string): boolean {\n    return (<Element>node).classList.contains(className);\n  },\n\n  addClass(node: INode, className: string): void {\n    (<Element>node).classList.add(className);\n  },\n\n  removeClass(node: INode, className: string): void {\n    (<Element>node).classList.remove(className);\n  },\n\n  addEventListener(eventName: string, subscriber: any, publisher?: INode, options?: any) {\n    (<Node>publisher || document).addEventListener(eventName, subscriber, options);\n  },\n\n  removeEventListener(eventName: string, subscriber: any, publisher?: INode, options?: any) {\n    (<Node>publisher || document).removeEventListener(eventName, subscriber, options);\n  },\n\n  isAllWhitespace(node: INode): boolean {\n    if ((<any>node).auInterpolationTarget === true) {\n      return false;\n    }\n    const text = (node as Node).textContent;\n    const len = text.length;\n    let i = 0;\n    // for perf benchmark of this compared to the regex method: http://jsben.ch/p70q2 (also a general case against using regex)\n    while (i < len) {\n      // charCodes 0-0x20(32) can all be considered whitespace (non-whitespace chars in this range don't have a visual representation anyway)\n      if (text.charCodeAt(i) > 0x20) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  },\n\n  treatAsNonWhitespace(node: INode): void {\n    // see isAllWhitespace above\n    (<any>node).auInterpolationTarget = true;\n  },\n\n  convertToRenderLocation(node: INode): IRenderLocation {\n    const location = document.createComment('au-loc');\n    // let this throw if node does not have a parent\n    (<Node>node.parentNode).replaceChild(location, <any>node);\n    return location;\n  },\n\n  registerElementResolver(container: IContainer, resolver: IResolver): void {\n    container.registerResolver(INode, resolver);\n    container.registerResolver(Element, resolver);\n    container.registerResolver(HTMLElement, resolver);\n    container.registerResolver(SVGElement, resolver);\n  }\n};\n\n// This is an implementation of INodeSequence that represents \"no DOM\" to render.\n// It's used in various places to avoid null and to encode\n// the explicit idea of \"no view\".\nconst emptySequence: INodeSequence = {\n  firstChild: null,\n  lastChild: null,\n  childNodes: PLATFORM.emptyArray,\n  findTargets() { return PLATFORM.emptyArray; },\n  insertBefore(refNode: INode): void {},\n  appendTo(parent: INode): void {},\n  remove(): void {}\n};\n\nexport const NodeSequence = {\n  empty: emptySequence\n};\n\n// This is the most common form of INodeSequence.\n// Every custom element or template controller whose node sequence is based on an HTML template\n// has an instance of this under the hood. Anyone who wants to create a node sequence from\n// a string of markup would also receive an instance of this.\n// CompiledTemplates create instances of FragmentNodeSequence.\n/*@internal*/\nexport class FragmentNodeSequence implements INodeSequence {\n  public firstChild: Node;\n  public lastChild: Node;\n  public childNodes: Node[];\n\n  private fragment: DocumentFragment;\n\n  constructor(fragment: DocumentFragment) {\n    this.fragment = fragment;\n    this.firstChild = fragment.firstChild;\n    this.lastChild = fragment.lastChild;\n    this.childNodes = PLATFORM.toArray(fragment.childNodes);\n  }\n\n  public findTargets(): ArrayLike<Node> {\n    return this.fragment.querySelectorAll('.au');\n  }\n\n  public insertBefore(refNode: Node): void {\n    refNode.parentNode.insertBefore(this.fragment, refNode);\n  }\n\n  public appendTo(parent: Node): void {\n    parent.appendChild(this.fragment);\n  }\n\n  public remove(): void {\n    const fragment = this.fragment;\n    let current = this.firstChild;\n\n    if (current.parentNode !== fragment) {\n      // this bind is a small perf tweak to minimize member accessors\n      const append = fragment.appendChild.bind(fragment);\n      const end = this.lastChild;\n      let next: Node;\n\n      while (current) {\n        next = current.nextSibling;\n        append(current);\n\n        if (current === end) {\n          break;\n        }\n\n        current = next;\n      }\n    }\n  }\n}\n","import { IIndexable, Primitive } from '@au-test/kernel';\nimport { DOM, INode } from '../dom';\nimport { IChangeSet } from './change-set';\nimport { IBindingTargetAccessor, MutationKind } from './observation';\nimport { targetObserver } from './target-observer';\nimport { subscriberCollection } from './subscriber-collection';\n\n// tslint:disable-next-line:no-http-string\nconst xlinkAttributeNS = 'http://www.w3.org/1999/xlink';\n\nexport interface XLinkAttributeAccessor extends IBindingTargetAccessor<Element, string, string> {}\n\n@targetObserver('')\nexport class XLinkAttributeAccessor implements XLinkAttributeAccessor {\n  public currentValue: string;\n  public oldValue: string;\n  public defaultValue: string;\n\n  // xlink namespaced attributes require getAttributeNS/setAttributeNS\n  // (even though the NS version doesn't work for other namespaces\n  // in html5 documents)\n\n  // Using very HTML-specific code here since this isn't likely to get\n  // called unless operating against a real HTML element.\n\n  constructor(\n    public changeSet: IChangeSet,\n    public obj: Element,\n    public propertyKey: string,\n    public attributeName: string) {\n\n    this.oldValue = this.currentValue = this.getValue();\n  }\n\n  public getValue(): string {\n    return this.obj.getAttributeNS(xlinkAttributeNS, this.attributeName);\n  }\n\n  public setValueCore(newValue: string): void {\n    this.obj.setAttributeNS(xlinkAttributeNS, this.attributeName, newValue);\n  }\n}\n\nXLinkAttributeAccessor.prototype.attributeName = '';\n\nexport interface DataAttributeAccessor extends IBindingTargetAccessor<INode, string, string> {}\n\n@targetObserver()\nexport class DataAttributeAccessor implements DataAttributeAccessor {\n  public currentValue: string;\n  public oldValue: string;\n  public defaultValue: string;\n\n  constructor(\n    public changeSet: IChangeSet,\n    public obj: INode,\n    public propertyKey: string) {\n\n    this.oldValue = this.currentValue = this.getValue();\n  }\n\n  public getValue(): string {\n    return DOM.getAttribute(this.obj, this.propertyKey);\n  }\n\n  public setValueCore(newValue: string): void {\n    if (newValue === null) {\n      DOM.removeAttribute(this.obj, this.propertyKey);\n    } else {\n      DOM.setAttribute(this.obj, this.propertyKey, newValue);\n    }\n  }\n}\n\nexport interface StyleAttributeAccessor extends IBindingTargetAccessor<HTMLElement, 'style', string | IIndexable> {}\n\n@targetObserver()\nexport class StyleAttributeAccessor implements StyleAttributeAccessor {\n  public currentValue: string | IIndexable;\n  public oldValue: string | IIndexable;\n  public defaultValue: string | IIndexable;\n\n  public propertyKey: 'style';\n\n  public styles: IIndexable;\n  public version: number;\n\n  constructor(\n    public changeSet: IChangeSet,\n    public obj: HTMLElement) {\n\n    this.oldValue = this.currentValue = obj.style.cssText;\n  }\n\n  public getValue(): string {\n    return this.obj.style.cssText;\n  }\n\n  // tslint:disable-next-line:function-name\n  public _setProperty(style: string, value: string): void {\n    let priority = '';\n\n    if (value !== null && value !== undefined && typeof value.indexOf === 'function' && value.indexOf('!important') !== -1) {\n      priority = 'important';\n      value = value.replace('!important', '');\n    }\n\n    this.obj.style.setProperty(style, value, priority);\n  }\n\n  public setValueCore(newValue: string | IIndexable): void {\n    const styles = this.styles || {};\n    let style;\n    let version = this.version;\n\n    if (newValue !== null) {\n      if (newValue instanceof Object) {\n        let value;\n        for (style in (<Object>newValue)) {\n          if (newValue.hasOwnProperty(style)) {\n            value = newValue[style];\n            style = style.replace(/([A-Z])/g, m => `-${m.toLowerCase()}`);\n            styles[style] = version;\n            this._setProperty(style, value);\n          }\n        }\n      } else if ((<string>newValue).length) {\n        const rx = /\\s*([\\w\\-]+)\\s*:\\s*((?:(?:[\\w\\-]+\\(\\s*(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[\\w\\-]+\\(\\s*(?:^\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^\\)]*)\\),?|[^\\)]*)\\),?|\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^;]*),?\\s*)+);?/g;\n        let pair;\n        while ((pair = rx.exec(newValue)) !== null) {\n          style = pair[1];\n          if (!style) { continue; }\n\n          styles[style] = version;\n          this._setProperty(style, pair[2]);\n        }\n      }\n    }\n\n    this.styles = styles;\n    this.version += 1;\n    if (version === 0) {\n      return;\n    }\n\n    version -= 1;\n    for (style in styles) {\n      if (!styles.hasOwnProperty(style) || styles[style] !== version) {\n        continue;\n      }\n      this.obj.style.removeProperty(style);\n    }\n  }\n}\n\nStyleAttributeAccessor.prototype.styles = null;\nStyleAttributeAccessor.prototype.version = 0;\nStyleAttributeAccessor.prototype.propertyKey = 'style';\n\nexport interface ClassAttributeAccessor extends IBindingTargetAccessor<INode, string, string> {}\n\n@targetObserver('')\nexport class ClassAttributeAccessor implements ClassAttributeAccessor {\n  public currentValue: string;\n  public oldValue: string;\n  public defaultValue: string;\n\n  public doNotCache: true;\n  public version: number;\n  public nameIndex: IIndexable;\n\n  constructor(public changeSet: IChangeSet, public obj: INode) { }\n\n  public getValue(): string {\n    return this.currentValue;\n  }\n\n  public setValueCore(newValue: string): void {\n    const addClass = DOM.addClass;\n    const removeClass = DOM.removeClass;\n    const nameIndex = this.nameIndex || {};\n    let version = this.version;\n    let names;\n    let name;\n\n    // Add the classes, tracking the version at which they were added.\n    if (newValue.length) {\n      const node = this.obj;\n      names = newValue.split(/\\s+/);\n      for (let i = 0, length = names.length; i < length; i++) {\n        name = names[i];\n        if (!name.length) {\n          continue;\n        }\n        nameIndex[name] = version;\n        addClass(node, name);\n      }\n    }\n\n    // Update state variables.\n    this.nameIndex = nameIndex;\n    this.version += 1;\n\n    // First call to setValue?  We're done.\n    if (version === 0) {\n      return;\n    }\n\n    // Remove classes from previous version.\n    version -= 1;\n    for (name in nameIndex) {\n      if (!nameIndex.hasOwnProperty(name) || nameIndex[name] !== version) {\n        continue;\n      }\n\n      // TODO: this has the side-effect that classes already present which are added again,\n      // will be removed if they're not present in the next update.\n      // Better would be do have some configurability for this behavior, allowing the user to\n      // decide whether initial classes always need to be kept, always removed, or something in between\n      removeClass(this.obj, name);\n    }\n  }\n}\n\nClassAttributeAccessor.prototype.doNotCache = true;\nClassAttributeAccessor.prototype.version = 0;\nClassAttributeAccessor.prototype.nameIndex = null;\n\nexport interface ElementPropertyAccessor extends IBindingTargetAccessor<IIndexable, string, Primitive | IIndexable> {}\n\n@targetObserver('')\nexport class ElementPropertyAccessor implements ElementPropertyAccessor {\n  constructor(public changeSet: IChangeSet, public obj: IIndexable, public propertyKey: string) { }\n\n  public getValue(): Primitive | IIndexable {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValueCore(value: Primitive | IIndexable): void {\n    this.obj[this.propertyKey] = value;\n  }\n}\n\nexport interface PropertyAccessor extends IBindingTargetAccessor<IIndexable, string, Primitive | IIndexable> {}\n\nexport class PropertyAccessor implements PropertyAccessor {\n  constructor(public obj: IIndexable, public propertyKey: string) { }\n\n  public getValue(): Primitive | IIndexable {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValue(value: Primitive | IIndexable): void {\n    this.obj[this.propertyKey] = value;\n  }\n}\n","import { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { IScope } from '../binding-context';\nimport { BindingFlags } from '../binding-flags';\nimport { IChangeSet } from '../change-set';\nimport { DataAttributeAccessor } from '../target-accessors';\n\n@bindingBehavior('attr')\nexport class AttrBindingBehavior {\n  public bind(flags: BindingFlags, scope: IScope, binding: Binding): void {\n    binding.targetObserver = new DataAttributeAccessor(binding.locator.get(IChangeSet), binding.target, binding.targetProperty);\n  }\n\n  // tslint:disable-next-line:no-empty\n  public unbind(flags: BindingFlags, scope: IScope, binding: Binding): void { }\n}\n","/*\n* Note: the oneTime binding now has a non-zero value for 2 reasons:\n*  - plays nicer with bitwise operations (more consistent code, more explicit settings)\n*  - allows for potentially having something like BindingMode.oneTime | BindingMode.fromView, where an initial value is set once to the view but updates from the view also propagate back to the view model\n*\n* Furthermore, the \"default\" mode would be for simple \".bind\" expressions to make it explicit for our logic that the default is being used.\n* This essentially adds extra information which binding could use to do smarter things and allows bindingBehaviors that add a mode instead of simply overwriting it\n*/\nexport enum BindingMode {\n  oneTime  = 0b0001,\n  toView   = 0b0010,\n  fromView = 0b0100,\n  twoWay   = 0b0110,\n  default  = 0b1000\n};\n","import { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { IScope } from '../binding-context';\nimport { BindingFlags } from '../binding-flags';\nimport { BindingMode } from '../binding-mode';\n\nconst { oneTime, toView, fromView, twoWay } = BindingMode;\n\nexport type WithMode = { mode: BindingMode, originalMode?: BindingMode };\n\nexport abstract class BindingModeBehavior {\n  constructor(private mode: BindingMode) {}\n\n  public bind(flags: BindingFlags, scope: IScope, binding: Binding & WithMode) {\n    binding.originalMode = binding.mode;\n    binding.mode = this.mode;\n  }\n\n  public unbind(flags: BindingFlags, scope: IScope, binding: Binding & WithMode) {\n    binding.mode = binding.originalMode;\n    binding.originalMode = null;\n  }\n}\n\n@bindingBehavior('oneTime')\nexport class OneTimeBindingBehavior extends BindingModeBehavior {\n  constructor() {\n    super(oneTime);\n  }\n}\n\n@bindingBehavior('toView')\nexport class ToViewBindingBehavior extends BindingModeBehavior {\n  constructor() {\n    super(toView);\n  }\n}\n\n@bindingBehavior('fromView')\nexport class FromViewBindingBehavior extends BindingModeBehavior {\n  constructor() {\n    super(fromView);\n  }\n}\n\n@bindingBehavior('twoWay')\nexport class TwoWayBindingBehavior extends BindingModeBehavior {\n  constructor() {\n    super(twoWay);\n  }\n}\n","import { Reporter } from '@au-test/kernel';\nimport { BindingFlags } from './binding-flags';\nimport { IPropertySubscriber, MutationKind, PropertyObserver } from './observation';\nimport { subscriberCollection } from './subscriber-collection';\n\nconst defineProperty = Reflect.defineProperty;\n// note: we're reusing the same object for setting all descriptors, just changing some properties as needed\n//   this works, because the properties are copied by defineProperty (so changing them afterwards doesn't affect existing descriptors)\n// see also: https://tc39.github.io/ecma262/#sec-topropertydescriptor\nconst observedPropertyDescriptor: PropertyDescriptor = {\n  get: undefined,\n  set: undefined,\n  enumerable: true,\n  configurable: true\n};\n\nfunction subscribe(this: PropertyObserver, subscriber: IPropertySubscriber): void {\n  if (this.observing === false) {\n    this.observing = true;\n    const { obj, propertyKey } = this;\n    this.currentValue = obj[propertyKey];\n    observedPropertyDescriptor.get = () => this.getValue();\n    observedPropertyDescriptor.set = value => this.setValue(value, BindingFlags.updateTargetInstance);\n    if (!defineProperty(obj, propertyKey, observedPropertyDescriptor)) {\n      Reporter.write(1, propertyKey, obj);\n    }\n  }\n  this.addSubscriber(subscriber);\n}\n\nfunction dispose(this: PropertyObserver): void {\n  delete this.obj[this.propertyKey];\n  this.obj = null;\n  this.propertyKey = null;\n  this.currentValue = null;\n}\n\nexport function propertyObserver(): ClassDecorator {\n  return function(target: Function): void {\n    subscriberCollection(MutationKind.instance)(target);\n    const proto = <PropertyObserver>target.prototype;\n\n    proto.observing = false;\n    proto.obj = null;\n    proto.propertyKey = null;\n    // Note: this will generate some \"false positive\" changes when setting a target undefined from a source undefined,\n    // but those aren't harmful because the changes won't be propagated through to subscribers during $bind anyway.\n    // It will, however, solve some \"false negative\" changes when the source value is undefined but the target value is not;\n    // in such cases, this.currentValue in the observer being undefined will block the change from propagating to the target.\n    // This is likely not working correctly in vCurrent either.\n    proto.currentValue = Symbol();\n\n    proto.subscribe = proto.subscribe || subscribe;\n    proto.unsubscribe = proto.unsubscribe || proto.removeSubscriber;\n\n    proto.dispose = proto.dispose || dispose;\n  };\n}\n","import { IIndexable, PLATFORM, Primitive } from '@au-test/kernel';\nimport { BindingFlags } from './binding-flags';\nimport { IAccessor, IPropertyObserver, IPropertySubscriber, ISubscribable, MutationKind } from './observation';\nimport { propertyObserver } from './property-observer';\n\nconst noop = PLATFORM.noop;\n\n// note: string.length is the only property of any primitive that is not a function,\n// so we can hardwire it to that and simply return undefined for anything else\n// note#2: a modified primitive constructor prototype would not work (and really, it shouldn't..)\nexport class PrimitiveObserver implements IAccessor, ISubscribable<MutationKind.instance> {\n  public getValue: () => undefined | number;\n  // removed the error reporter here because technically any primitive property that can get, can also set,\n  // but since that never serves any purpose (e.g. setting string.length doesn't throw but doesn't change the length either),\n  // we could best just leave this as a no-op and so don't need to store the propertyName\n  public setValue: () => void;\n  public subscribe: () => void;\n  public unsubscribe: () => void;\n  public dispose: () => void;\n\n  public doNotCache: boolean = true;\n  public obj: Primitive;\n\n  constructor(obj: Primitive, propertyKey: PropertyKey) {\n    // we don't need to store propertyName because only 'length' can return a useful value\n    if (propertyKey === 'length') {\n      // deliberately not checking for typeof string as users probably still want to know via an error that their string is undefined\n      this.obj = obj;\n      this.getValue = this.getStringLength;\n    } else {\n      this.getValue = this.returnUndefined;\n    }\n  }\n\n  private getStringLength(): number {\n    return (<string>this.obj).length;\n  }\n  private returnUndefined(): undefined {\n    return undefined;\n  }\n}\nPrimitiveObserver.prototype.setValue = noop;\nPrimitiveObserver.prototype.subscribe = noop;\nPrimitiveObserver.prototype.unsubscribe = noop;\nPrimitiveObserver.prototype.dispose = noop;\n\nexport interface SetterObserver extends IPropertyObserver<IIndexable, string> {}\n\n@propertyObserver()\nexport class SetterObserver implements SetterObserver {\n  public subscribe: (subscriber: IPropertySubscriber) => void;\n  public unsubscribe: (subscriber: IPropertySubscriber) => void;\n  public obj: IIndexable;\n  public propertyKey: string;\n\n  constructor(obj: IIndexable, propertyKey: string) {\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n  }\n\n  public getValue(): IIndexable | Primitive {\n    return this.currentValue;\n  }\n  public setValue(newValue: IIndexable | Primitive, flags: BindingFlags): void {\n    const currentValue = this.currentValue;\n    if (currentValue !== newValue) {\n      this.currentValue = newValue;\n      if (!(flags & BindingFlags.fromBind)) {\n        this.callSubscribers(newValue, currentValue, flags);\n      }\n      // If subscribe() has been called, the target property descriptor is replaced by these getter/setter methods,\n      // so calling obj[propertyKey] will actually return this.currentValue.\n      // However, if subscribe() was not yet called (indicated by !this.observing), the target descriptor\n      // is unmodified and we need to explicitly set the property value.\n      // This will happen in one-time, to-view and two-way bindings during $bind, meaning that the $bind will not actually update the target value.\n      // This wasn't visible in vCurrent due to connect-queue always doing a delayed update, so in many cases it didn't matter whether $bind updated the target or not.\n      if (!this.observing) {\n        this.obj[this.propertyKey] = newValue;\n      }\n    }\n  }\n}\n\nexport interface Observer extends IPropertyObserver<IIndexable, string> {}\n\n@propertyObserver()\nexport class Observer implements Observer {\n  public obj: IIndexable;\n  public propertyKey: string;\n  public currentValue: IIndexable | Primitive;\n\n  private callback: (newValue: IIndexable | Primitive, oldValue: IIndexable | Primitive) => IIndexable | Primitive;\n\n  constructor(\n    instance: object,\n    propertyName: string,\n    callbackName: string\n  ) {\n      this.obj = instance;\n      this.propertyKey = propertyName;\n      this.currentValue = instance[propertyName];\n      this.callback = callbackName in instance\n        ? instance[callbackName].bind(instance)\n        : noop;\n  }\n\n  public getValue(): IIndexable | Primitive {\n    return this.currentValue;\n  }\n\n  public setValue(newValue: IIndexable | Primitive, flags: BindingFlags): void {\n    const currentValue = this.currentValue;\n\n    if (currentValue !== newValue) {\n      this.currentValue = newValue;\n\n      if (!(flags & BindingFlags.fromBind)) {\n        const coercedValue = this.callback(newValue, currentValue);\n\n        if (coercedValue !== undefined) {\n          this.currentValue = newValue = coercedValue;\n        }\n\n        this.callSubscribers(newValue, currentValue, flags);\n      }\n    }\n  }\n}\n","import { IIndexable, Reporter } from '@au-test/kernel';\nimport { StrictPrimitive } from './ast';\nimport { IBindScope, ObservedCollection, PropertyObserver } from './observation';\nimport { SetterObserver } from './property-observation';\n\nconst enum RuntimeError {\n  UndefinedScope = 250, // trying to evaluate on something that's not a valid binding\n  NullScope = 251, // trying to evaluate on an unbound binding\n  NilOverrideContext = 252,\n  NilParentScope = 253\n}\n\nexport interface IObserversLookup<TObj extends IIndexable = IIndexable, TKey extends keyof TObj =\nExclude<keyof TObj, '$synthetic' | '$observers' | 'bindingContext' | 'overrideContext' | 'parentOverrideContext'>> {\n\n}\n\nexport type ObserversLookup<TObj extends IIndexable = IIndexable, TKey extends keyof TObj =\n  Exclude<keyof TObj, '$synthetic' | '$observers' | 'bindingContext' | 'overrideContext' | 'parentOverrideContext'>> =\n  { [P in TKey]: PropertyObserver; } & { getOrCreate(obj: IBindingContext | IOverrideContext, key: string): PropertyObserver };\n\n/*@internal*/\nexport class InternalObserversLookup {\n  public getOrCreate(obj: IBindingContext | IOverrideContext, key: string): PropertyObserver {\n    let observer = this[key];\n    if (observer === undefined) {\n      observer = this[key] = new SetterObserver(obj, key);\n    }\n    return observer;\n  }\n}\n\nexport interface IBindingContext {\n  [key: string]: ObservedCollection | StrictPrimitive | IIndexable;\n\n  readonly $synthetic?: true;\n  readonly $observers?: ObserversLookup<IOverrideContext>;\n  getObservers(): ObserversLookup<IOverrideContext>;\n}\n\nexport interface IOverrideContext {\n  [key: string]: ObservedCollection | StrictPrimitive | IIndexable;\n\n  readonly $synthetic?: true;\n  readonly $observers?: ObserversLookup<IOverrideContext>;\n  readonly bindingContext: IBindingContext | IBindScope;\n  readonly parentOverrideContext: IOverrideContext | null;\n  getObservers(): ObserversLookup<IOverrideContext>;\n}\n\nexport interface IScope {\n  readonly bindingContext: IBindingContext | IBindScope;\n  readonly overrideContext: IOverrideContext;\n}\n\nexport class BindingContext implements IBindingContext {\n  [key: string]: ObservedCollection | StrictPrimitive | IIndexable;\n\n  public readonly $synthetic: true = true;\n\n  public $observers: ObserversLookup<IOverrideContext>;\n\n  private constructor(keyOrObj?: string | IIndexable, value?: ObservedCollection | StrictPrimitive | IIndexable) {\n    if (keyOrObj !== undefined) {\n      if (value !== undefined) {\n        // if value is defined then it's just a property and a value to initialize with\n        // tslint:disable-next-line:no-any\n        this[<any>keyOrObj] = value;\n      } else {\n        // can either be some random object or another bindingContext to clone from\n        for (const prop in <IIndexable>keyOrObj) {\n          if (keyOrObj.hasOwnProperty(prop)) {\n            this[prop] = keyOrObj[prop];\n          }\n        }\n      }\n    }\n  }\n\n  public static create(obj?: IIndexable): BindingContext;\n  public static create(key: string, value: ObservedCollection | StrictPrimitive | IIndexable): BindingContext;\n  public static create(keyOrObj?: string | IIndexable, value?: ObservedCollection | StrictPrimitive | IIndexable): BindingContext {\n    return new BindingContext(keyOrObj, value);\n  }\n\n  // tslint:disable-next-line:no-reserved-keywords\n  public static get(scope: IScope, name: string, ancestor: number): IBindingContext | IOverrideContext | IBindScope {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope);\n    }\n    let overrideContext = scope.overrideContext;\n\n    if (ancestor > 0) {\n      // jump up the required number of ancestor contexts (eg $parent.$parent requires two jumps)\n      while (ancestor > 0) {\n        if (overrideContext.parentOverrideContext === null) {\n          return undefined;\n        }\n        ancestor--;\n        overrideContext = overrideContext.parentOverrideContext;\n      }\n\n      return name in overrideContext ? overrideContext : overrideContext.bindingContext;\n    }\n\n    // traverse the context and it's ancestors, searching for a context that has the name.\n    while (overrideContext && !(name in overrideContext) && !(overrideContext.bindingContext && name in overrideContext.bindingContext)) {\n      overrideContext = overrideContext.parentOverrideContext;\n    }\n\n    if (overrideContext) {\n      // we located a context with the property.  return it.\n      return name in overrideContext ? overrideContext : overrideContext.bindingContext;\n    }\n\n    // the name wasn't found.  return the root binding context.\n    return scope.bindingContext || scope.overrideContext;\n  }\n\n  public getObservers(): ObserversLookup<IOverrideContext> {\n    let observers = this.$observers;\n    if (observers === undefined) {\n      this.$observers = observers = new InternalObserversLookup() as ObserversLookup<this>;\n    }\n    return observers;\n  }\n}\n\nexport class Scope implements IScope {\n  private constructor(\n    public readonly bindingContext: IBindingContext | IBindScope,\n    public readonly overrideContext: IOverrideContext\n  ) { }\n\n  public static create(bc: IBindingContext | IBindScope, oc: IOverrideContext | null): Scope {\n    return new Scope(bc, oc === null || oc === undefined ? OverrideContext.create(bc, oc) : oc);\n  }\n\n  public static fromOverride(oc: IOverrideContext): Scope {\n    if (oc === null || oc === undefined) {\n      throw Reporter.error(RuntimeError.NilOverrideContext);\n    }\n    return new Scope(oc.bindingContext, oc);\n  }\n\n  public static fromParent(ps: IScope, bc: IBindingContext | IBindScope): Scope {\n    if (ps === null || ps === undefined) {\n      throw Reporter.error(RuntimeError.NilParentScope);\n    }\n    return new Scope(bc, OverrideContext.create(bc, ps.overrideContext));\n  }\n}\n\nexport class OverrideContext implements IOverrideContext {\n  [key: string]: ObservedCollection | StrictPrimitive | IIndexable;\n\n  public readonly $synthetic: true = true;\n\n  private constructor(\n    public readonly bindingContext: IBindingContext | IBindScope,\n    public readonly parentOverrideContext: IOverrideContext | null\n  ) { }\n\n  public static create(bc: IBindingContext | IBindScope, poc: IOverrideContext | null): OverrideContext {\n    return new OverrideContext(bc, poc === undefined ? null : poc);\n  }\n\n  public getObservers(): ObserversLookup<IOverrideContext> {\n    let observers = this.$observers;\n    if (observers === undefined) {\n      this.$observers = observers = new InternalObserversLookup();\n    }\n    return observers as ObserversLookup<IOverrideContext>;\n  }\n}\n","import { DI, Immutable } from '@au-test/kernel';\nimport { BindingFlags } from './binding-flags';\nimport { IPropertySubscriber } from './observation';\n\ntype Signal = string;\n\nexport interface ISignaler {\n  signals: Immutable<Record<string, Set<IPropertySubscriber>>>;\n  dispatchSignal(name: Signal, flags?: BindingFlags): void;\n  addSignalListener(name: Signal, listener: IPropertySubscriber): void;\n  removeSignalListener(name: Signal, listener: IPropertySubscriber): void;\n}\n\nexport const ISignaler = DI.createInterface<ISignaler>().withDefault(x => x.singleton(Signaler));\n\n/*@internal*/\nexport class Signaler implements ISignaler {\n  public signals: Record<string, Set<IPropertySubscriber>>;\n\n  constructor() {\n    this.signals = Object.create(null);\n  }\n\n  public dispatchSignal(name: Signal, flags?: BindingFlags): void {\n    const listeners = this.signals[name];\n    if (listeners === undefined) {\n      return;\n    }\n    for (const listener of listeners.keys()) {\n      listener.handleChange(undefined, undefined, flags | BindingFlags.updateTargetInstance);\n    }\n  }\n\n  public addSignalListener(name: Signal, listener: IPropertySubscriber): void {\n    const signals = this.signals;\n    const listeners = signals[name];\n    if (listeners === undefined) {\n      signals[name] = new Set([listener])\n    } else {\n      listeners.add(listener);\n    }\n  }\n\n  public removeSignalListener(name: Signal, listener: IPropertySubscriber): void {\n    const listeners = this.signals[name];\n    if (listeners) {\n      listeners.delete(listener);\n    }\n  }\n}\n","import { Constructable, IContainer, Registration, Writable } from '@au-test/kernel';\nimport { IResourceKind, IResourceType } from '../resource';\n\nexport interface IValueConverterSource {\n  name: string;\n}\n\nexport type IValueConverterType = IResourceType<IValueConverterSource>;\n\nexport function valueConverter(nameOrSource: string | IValueConverterSource) {\n  return function<T extends Constructable>(target: T) {\n    return ValueConverterResource.define(nameOrSource, target);\n  }\n}\n\nexport const ValueConverterResource: IResourceKind<IValueConverterSource, IValueConverterType> = {\n  name: 'value-converter',\n\n  keyFrom(name: string): string {\n    return `${this.name}:${name}`;\n  },\n\n  isType<T extends Constructable>(type: T): type is T & IValueConverterType {\n    return (type as any).kind === this;\n  },\n\n  define<T extends Constructable>(nameOrSource: string | IValueConverterSource, ctor: T): T & IValueConverterType {\n    const Type = ctor as T & IValueConverterType;\n    const description = typeof nameOrSource === 'string'\n      ? { name: nameOrSource }\n      : nameOrSource;\n\n    (Type as Writable<IValueConverterType>).kind = ValueConverterResource;\n    (Type as Writable<IValueConverterType>).description = description;\n    Type.register = register;\n\n    return Type;\n  }\n};\n\nfunction register(this: IValueConverterType, container: IContainer): void {\n  container.register(\n    Registration.singleton(\n      ValueConverterResource.keyFrom(this.description.name),\n      this\n    )\n  );\n}\n","import { IIndexable, IServiceLocator, PLATFORM, Reporter } from '@au-test/kernel';\nimport { IBinding } from './binding';\nimport { BindingBehaviorResource } from './binding-behavior';\nimport { BindingContext, IScope } from './binding-context';\nimport { BindingFlags } from './binding-flags';\nimport { IConnectableBinding } from './connectable';\nimport { Collection, ObservedCollection } from './observation';\nimport { ISignaler } from './signaler';\nimport { ValueConverterResource } from './value-converter';\n\n// tslint:disable:no-empty\n\nexport type StrictPrimitive = string | number | boolean | null | undefined;\n/**\n * StrictAny is a somewhat strongly typed alternative to 'any', in an effort to try to get rid of all 'any''s\n * It's not even remotely foolproof however, and this can largely be attributed to the fact that TypeScript imposes\n * far more constraints on what arithmic is allowed than vanilla JS does.\n * We don't necessarily want to impose the same constraints on users (e.g. by performing auto conversions or throwing),\n * because even though that behavior would technically be \"better\", it could also be experienced as unpredictable.\n * We'd generally not want to ask more of users than to simply understand how vanilla JS works, and let them account for its quirks themselves.\n * This gives end users less framework-specific things to learn.\n * Consequently, it's impossible to achieve any kind of strict type checking in the AST and generally in the observers.\n * We're trying to achieve some middle ground by applying some explicit type casts where TypeScript would otherwise not allow compilation.\n */\nexport type StrictAny = StrictPrimitive | IIndexable | Function;\nexport type IsPrimary = AccessThis | AccessScope | ArrayLiteral | ObjectLiteral | PrimitiveLiteral | Template;\nexport type IsLiteral = ArrayLiteral | ObjectLiteral | PrimitiveLiteral | Template;\nexport type IsLeftHandSide = IsPrimary | CallFunction | CallMember | CallScope | AccessMember | AccessKeyed | TaggedTemplate;\nexport type IsUnary = IsLeftHandSide | Unary;\nexport type IsBinary = IsUnary | Binary;\nexport type IsConditional = IsBinary | Conditional;\nexport type IsAssign = IsConditional | Assign;\nexport type IsValueConverter = IsAssign | ValueConverter;\nexport type IsBindingBehavior = IsValueConverter | BindingBehavior;\nexport type IsAssignable = AccessScope | AccessKeyed | AccessMember | Assign;\nexport type IsExpression = IsBindingBehavior | Interpolation;\nexport type IsExpressionOrStatement = IsExpression | ForOfStatement | BindingIdentifierOrPattern | HtmlLiteral;\nexport type Connects = AccessScope | ArrayLiteral | ObjectLiteral | Template | Unary | CallScope | AccessMember | AccessKeyed | TaggedTemplate | Binary | Conditional | ValueConverter | BindingBehavior | ForOfStatement;\nexport type Observes = AccessScope | AccessKeyed | AccessMember;\nexport type CallsFunction = CallFunction | CallScope | CallMember | TaggedTemplate;\nexport type IsResource = ValueConverter | BindingBehavior;\nexport type HasBind = BindingBehavior;\nexport type HasUnbind = ValueConverter | BindingBehavior;\nexport type HasAncestor = AccessThis | AccessScope | CallScope;\n\n// tslint:disable-next-line:no-any\nexport interface IVisitor<T = any> {\n  visitAccessKeyed(expr: AccessKeyed): T;\n  visitAccessMember(expr: AccessMember): T;\n  visitAccessScope(expr: AccessScope): T;\n  visitAccessThis(expr: AccessThis): T;\n  visitArrayBindingPattern(expr: ArrayBindingPattern): T;\n  visitArrayLiteral(expr: ArrayLiteral): T;\n  visitAssign(expr: Assign): T;\n  visitBinary(expr: Binary): T;\n  visitBindingBehavior(expr: BindingBehavior): T;\n  visitBindingIdentifier(expr: BindingIdentifier): T;\n  visitCallFunction(expr: CallFunction): T;\n  visitCallMember(expr: CallMember): T;\n  visitCallScope(expr: CallScope): T;\n  visitConditional(expr: Conditional): T;\n  visitForOfStatement(expr: ForOfStatement): T;\n  visitHtmlLiteral(expr: HtmlLiteral): T;\n  visitInterpolation(expr: Interpolation): T;\n  visitObjectBindingPattern(expr: ObjectBindingPattern): T;\n  visitObjectLiteral(expr: ObjectLiteral): T;\n  visitPrimitiveLiteral(expr: PrimitiveLiteral): T;\n  visitTaggedTemplate(expr: TaggedTemplate): T;\n  visitTemplate(expr: Template): T;\n  visitUnary(expr: Unary): T;\n  visitValueConverter(expr: ValueConverter): T;\n}\n\nexport interface IExpression {\n  readonly $kind: ExpressionKind;\n  evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator | null): StrictAny;\n  connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void;\n  accept<T>(visitor: IVisitor<T>): T;\n  assign?(flags: BindingFlags, scope: IScope, locator: IServiceLocator | null, value: StrictAny): StrictAny;\n  bind?(flags: BindingFlags, scope: IScope, binding: IBinding): void;\n  unbind?(flags: BindingFlags, scope: IScope, binding: IBinding): void;\n}\n\nexport const enum ExpressionKind {\n  Connects             = 0b000000000001_00000, // The expression's connect() function calls observeProperty and/or calls connect() on another expression that it wraps (all expressions except for AccessThis, PrimitiveLiteral, CallMember/Function and Assign)\n  Observes             = 0b000000000010_00000, // The expression's connect() function calls observeProperty (only AccessScope, AccessMember and AccessKeyed do this)\n  CallsFunction        = 0b000000000100_00000, // Calls a function (CallFunction, CallScope, CallMember, TaggedTemplate) -> needs a valid function object returning from its lefthandside's evaluate()\n  HasAncestor          = 0b000000001000_00000, // Has an \"ancestor\" property, meaning the expression could climb up the context (only AccessThis, AccessScope and CallScope)\n  IsPrimary            = 0b000000010000_00000, // Is a primary expression according to ES parsing rules\n  IsLeftHandSide       = 0b000000100000_00000, // Is a left-hand side expression according to ES parsing rules, includes IsPrimary\n  HasBind              = 0b000001000000_00000, // Has a bind() method (currently only BindingBehavior)\n  HasUnbind            = 0b000010000000_00000, // Has an unbind() method (currentl only BindingBehavior and ValueConverter)\n  IsAssignable         = 0b000100000000_00000, // Is an assignable expression according to ES parsing rules (only AccessScope, AccessMember, AccessKeyed ans Assign)\n  IsLiteral            = 0b001000000000_00000, // Is an Aurelia resource (ValueConverter or BindingBehavior)\n  IsResource           = 0b010000000000_00000, // Is literal expression (Primitive, Array, Object or Template)\n  IsForDeclaration     = 0b100000000000_00000, // Is a For declaration (for..of, for..in -> currently only ForOfStatement)\n  Type                 = 0b000000000000_11111, // Type mask to uniquely identify each AST class (concrete types start below)\n  // ---------------------------------------------------------------------------------------------------------------------------\n  AccessThis           = 0b000000111000_00001, //               HasAncestor\n  AccessScope          = 0b000100111011_00010, // IsAssignable  HasAncestor       Observes  Connects\n  ArrayLiteral         = 0b001000110001_00011, //                                           Connects\n  ObjectLiteral        = 0b001000110001_00100, //                                           Connects\n  PrimitiveLiteral     = 0b001000110000_00101, //\n  Template             = 0b001000110001_00110, //                                           Connects\n  Unary                = 0b000000000001_00111, //                                           Connects\n  CallScope            = 0b000000101101_01000, //               HasAncestor  CallsFunction  Connects\n  CallMember           = 0b000000100100_01001, //                            CallsFunction\n  CallFunction         = 0b000000100100_01010, //                            CallsFunction\n  AccessMember         = 0b000100100011_01011, // IsAssignable                    Observes  Connects\n  AccessKeyed          = 0b000100100011_01100, // IsAssignable                    Observes  Connects\n  TaggedTemplate       = 0b000000100101_01101, //                            CallsFunction  Connects\n  Binary               = 0b000000000001_01110, //                                           Connects\n  Conditional          = 0b000000000001_11111, //                                           Connects\n  Assign               = 0b000100000000_10000, // IsAssignable\n  ValueConverter       = 0b010010000001_10001, //                                           Connects\n  BindingBehavior      = 0b010011000001_10010, //                                           Connects\n  HtmlLiteral          = 0b000000000001_10011, //                                           Connects\n  ArrayBindingPattern  = 0b100000000000_10100, //\n  ObjectBindingPattern = 0b100000000000_10101, //\n  BindingIdentifier    = 0b100000000000_10110, //\n  ForOfStatement       = 0b000000000001_10111, //                                           Connects\n  Interpolation        = 0b000000000000_11000  //\n}\n\nexport function connects(expr: IsExpressionOrStatement): expr is Connects {\n  return (expr.$kind & ExpressionKind.Connects) === ExpressionKind.Connects;\n}\nexport function observes(expr: IsExpressionOrStatement): expr is Observes {\n  return (expr.$kind & ExpressionKind.Observes) === ExpressionKind.Observes;\n}\nexport function callsFunction(expr: IsExpressionOrStatement): expr is CallsFunction {\n  return (expr.$kind & ExpressionKind.CallsFunction) === ExpressionKind.CallsFunction;\n}\nexport function hasAncestor(expr: IsExpressionOrStatement): expr is HasAncestor {\n  return (expr.$kind & ExpressionKind.HasAncestor) === ExpressionKind.HasAncestor;\n}\nexport function isAssignable(expr: IsExpressionOrStatement): expr is IsAssignable {\n  return (expr.$kind & ExpressionKind.IsAssignable) === ExpressionKind.IsAssignable;\n}\nexport function isLeftHandSide(expr: IsExpressionOrStatement): expr is IsLeftHandSide {\n  return (expr.$kind & ExpressionKind.IsLeftHandSide) === ExpressionKind.IsLeftHandSide;\n}\nexport function isPrimary(expr: IsExpressionOrStatement): expr is IsPrimary {\n  return (expr.$kind & ExpressionKind.IsPrimary) === ExpressionKind.IsPrimary;\n}\nexport function isResource(expr: IsExpressionOrStatement): expr is IsResource {\n  return (expr.$kind & ExpressionKind.IsResource) === ExpressionKind.IsResource;\n}\nexport function hasBind(expr: IsExpressionOrStatement): expr is HasBind {\n  return (expr.$kind & ExpressionKind.HasBind) === ExpressionKind.HasBind;\n}\nexport function hasUnbind(expr: IsExpressionOrStatement): expr is HasUnbind {\n  return (expr.$kind & ExpressionKind.HasUnbind) === ExpressionKind.HasUnbind;\n}\nexport function isLiteral(expr: IsExpressionOrStatement): expr is IsLiteral {\n  return (expr.$kind & ExpressionKind.IsLiteral) === ExpressionKind.IsLiteral;\n}\nexport function arePureLiterals(expressions: ReadonlyArray<IsExpressionOrStatement>): expressions is IsLiteral[] {\n  const len = expressions && expressions.length || 0;\n  if (len === 0) {\n    return true;\n  }\n  for (let i = 0; i < len; ++i) {\n    if (!isPureLiteral(expressions[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isPureLiteral(expr: IsExpressionOrStatement): expr is IsLiteral {\n  if (isLiteral(expr)) {\n    switch (expr.$kind) {\n      case ExpressionKind.ArrayLiteral:\n        return arePureLiterals(expr.elements);\n      case ExpressionKind.ObjectLiteral:\n        return arePureLiterals(expr.values);\n      case ExpressionKind.Template:\n        return arePureLiterals(expr.expressions);\n      case ExpressionKind.PrimitiveLiteral:\n        return true;\n    }\n  }\n  return false;\n}\n\nconst enum RuntimeError {\n  NoLocator = 202,\n  NoBehaviorFound = 203,\n  BehaviorAlreadyApplied = 204,\n  NoConverterFound = 205,\n  NoBinding = 206,\n  NotAFunction = 207,\n  UnknownOperator = 208,\n  UndefinedScope = 250, // trying to evaluate on something that's not a valid binding\n  NullScope = 251, // trying to evaluate on an unbound binding\n}\n\nexport class BindingBehavior implements IExpression {\n  public $kind: ExpressionKind.BindingBehavior;\n  public readonly behaviorKey: string;\n  private readonly expressionHasBind: boolean;\n  private readonly expressionHasUnbind: boolean;\n  constructor(\n    public readonly expression: IsBindingBehavior,\n    public readonly name: string,\n    public readonly args: ReadonlyArray<IsAssign>) {\n    this.behaviorKey = BindingBehaviorResource.keyFrom(this.name);\n    this.expressionHasBind = hasBind(expression);\n    this.expressionHasUnbind = hasUnbind(expression);\n  }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return this.expression.evaluate(flags, scope, locator);\n  }\n\n  public assign(flags: BindingFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    return this.expression.assign(flags, scope, locator, value);\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    this.expression.connect(flags, scope, binding);\n  }\n\n  public bind(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope, this);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope, this);\n    }\n    if (!binding) {\n      throw Reporter.error(RuntimeError.NoBinding, this);\n    }\n    const locator = binding.locator;\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    if (this.expressionHasBind) {\n      (this.expression as BindingBehavior).bind(flags, scope, binding);\n    }\n    const behaviorKey = this.behaviorKey;\n    const behavior = locator.get<BindingBehavior>(behaviorKey);\n    if (!behavior) {\n      throw Reporter.error(RuntimeError.NoBehaviorFound, this);\n    }\n    if (binding[behaviorKey] !== undefined) {\n      throw Reporter.error(RuntimeError.BehaviorAlreadyApplied, this);\n    }\n    binding[behaviorKey] = behavior;\n    behavior.bind.apply(behavior, (<StrictAny[]>[flags, scope, binding]).concat(evalList(flags, scope, locator, this.args)));\n  }\n\n  public unbind(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const behaviorKey = this.behaviorKey;\n    binding[behaviorKey].unbind(flags, scope, binding);\n    binding[behaviorKey] = null;\n    if (this.expressionHasUnbind) {\n      (this.expression as BindingBehavior | ValueConverter).unbind(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitBindingBehavior(this);\n  }\n}\n\nexport class ValueConverter implements IExpression {\n  public $kind: ExpressionKind.ValueConverter;\n  public readonly converterKey: string;\n  constructor(\n    public readonly expression: IsValueConverter,\n    public readonly name: string,\n    public readonly args: ReadonlyArray<IsAssign>) {\n    this.converterKey = ValueConverterResource.keyFrom(this.name);\n  }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    const converter = locator.get<ValueConverter & { toView(...args: (StrictAny)[]): StrictAny }>(this.converterKey);\n    if (!converter) {\n      throw Reporter.error(RuntimeError.NoConverterFound, this);\n    }\n    if ('toView' in converter) {\n      const args = this.args;\n      const len = args.length;\n      const result = Array(len + 1);\n      result[0] = this.expression.evaluate(flags, scope, locator);\n      for (let i = 0; i < len; ++i) {\n        result[i + 1] = args[i].evaluate(flags, scope, locator);\n      }\n      return converter.toView.apply(converter, result);\n    }\n    return this.expression.evaluate(flags, scope, locator);\n  }\n\n  public assign(flags: BindingFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    const converter = locator.get<ValueConverter & { fromView(...args: (StrictAny)[]): StrictAny }>(this.converterKey);\n    if (!converter) {\n      throw Reporter.error(RuntimeError.NoConverterFound, this);\n    }\n    if ('fromView' in converter) {\n      value = converter.fromView.apply(converter, [value].concat(evalList(flags, scope, locator, this.args)));\n    }\n    return this.expression.assign(flags, scope, locator, value);\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope, this);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope, this);\n    }\n    if (!binding) {\n      throw Reporter.error(RuntimeError.NoBinding, this);\n    }\n    const locator = binding.locator;\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    this.expression.connect(flags, scope, binding);\n    const args = this.args;\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      args[i].connect(flags, scope, binding);\n    }\n    const converter = locator.get(this.converterKey) as { signals?: string[] };\n    if (!converter) {\n      throw Reporter.error(RuntimeError.NoConverterFound, this);\n    }\n    const signals = converter.signals;\n    if (signals === undefined) {\n      return;\n    }\n    const signaler = locator.get(ISignaler) as ISignaler;\n    for (let i = 0, ii = signals.length; i < ii; ++i) {\n      signaler.addSignalListener(signals[i], binding);\n    }\n  }\n\n  public unbind(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const locator = binding.locator;\n    const converter = locator.get(this.converterKey) as { signals?: string[] };\n    const signals = converter.signals;\n    if (signals === undefined) {\n      return;\n    }\n    const signaler = locator.get(ISignaler) as ISignaler;\n    for (let i = 0, ii = signals.length; i < ii; ++i) {\n      signaler.removeSignalListener(signals[i], binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitValueConverter(this);\n  }\n}\n\nexport class Assign implements IExpression {\n  public $kind: ExpressionKind.Assign;\n  constructor(\n    public readonly target: IsAssignable,\n    public readonly value: IsAssign) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return this.target.assign(flags, scope, locator, this.value.evaluate(flags, scope, locator));\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void { }\n\n  public assign(flags: BindingFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    this.value.assign(flags, scope, locator, value);\n    return this.target.assign(flags, scope, locator, value);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAssign(this);\n  }\n}\n\nexport class Conditional implements IExpression {\n  public $kind: ExpressionKind.Conditional;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly condition: IsBinary,\n    public readonly yes: IsAssign,\n    public readonly no: IsAssign) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return (!!this.condition.evaluate(flags, scope, locator))\n      ? this.yes.evaluate(flags, scope, locator)\n      : this.no.evaluate(flags, scope, locator);\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const condition = this.condition;\n    if (condition.evaluate(flags, scope, null)) {\n      this.condition.connect(flags, scope, binding);\n      this.yes.connect(flags, scope, binding);\n    } else {\n      this.condition.connect(flags, scope, binding);\n      this.no.connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitConditional(this);\n  }\n}\n\nexport class AccessThis implements IExpression {\n  public static readonly $this: AccessThis = new AccessThis(0);\n  public static readonly $parent: AccessThis = new AccessThis(1);\n  public $kind: ExpressionKind.AccessThis;\n  public assign: IExpression['assign'];\n  public connect: IExpression['connect'];\n  constructor(\n    public readonly ancestor: number = 0) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope, this);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope, this);\n    }\n    let oc = scope.overrideContext;\n    let i = this.ancestor;\n    while (i-- && oc) {\n      oc = oc.parentOverrideContext;\n    }\n    return i < 1 && oc ? oc.bindingContext : undefined;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessThis(this);\n  }\n}\n\nexport class AccessScope implements IExpression {\n  public $kind: ExpressionKind.AccessScope;\n  constructor(\n    public readonly name: string,\n    public readonly ancestor: number = 0) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const name = this.name;\n    return BindingContext.get(scope, name, this.ancestor)[name];\n  }\n\n  public assign(flags: BindingFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    const name = this.name;\n    const context = BindingContext.get(scope, name, this.ancestor);\n    return context ? (context[name] = value) : undefined;\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const name = this.name;\n    const context = BindingContext.get(scope, name, this.ancestor);\n    binding.observeProperty(context, name);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessScope(this);\n  }\n}\n\nexport class AccessMember implements IExpression {\n  public $kind: ExpressionKind.AccessMember;\n  constructor(\n    public readonly object: IsLeftHandSide,\n    public readonly name: string) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const instance = this.object.evaluate(flags, scope, locator);\n    return instance === null || instance === undefined ? instance : instance[this.name];\n  }\n\n  public assign(flags: BindingFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    let instance = this.object.evaluate(flags, scope, locator);\n    if (instance === null || typeof instance !== 'object') {\n      instance = {};\n      this.object.assign(flags, scope, locator, instance);\n    }\n    instance[this.name] = value;\n    return value;\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const obj = this.object.evaluate(flags, scope, null);\n    this.object.connect(flags, scope, binding);\n    if (obj) {\n      binding.observeProperty(obj, this.name);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessMember(this);\n  }\n}\n\nexport class AccessKeyed implements IExpression {\n  public $kind: ExpressionKind.AccessKeyed;\n  constructor(\n    public readonly object: IsLeftHandSide,\n    public readonly key: IsAssign) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const instance = this.object.evaluate(flags, scope, locator);\n    if (instance === null || instance === undefined) {\n      return undefined;\n    }\n    const key = this.key.evaluate(flags, scope, locator);\n    // note: getKeyed and setKeyed are removed because they are identical to the default spec behavior\n    // and the runtime does this this faster\n    // tslint:disable-next-line:no-any\n    return instance[<any>key];\n  }\n\n  public assign(flags: BindingFlags, scope: IScope, locator: IServiceLocator, value: StrictAny): StrictAny {\n    const instance = this.object.evaluate(flags, scope, locator);\n    const key = this.key.evaluate(flags, scope, locator);\n    // tslint:disable-next-line:no-any\n    return instance[<any>key] = value;\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const obj = this.object.evaluate(flags, scope, null);\n    this.object.connect(flags, scope, binding);\n    if (typeof obj === 'object' && obj !== null) {\n      this.key.connect(flags, scope, binding);\n      const key = this.key.evaluate(flags, scope, null);\n      // observe the property represented by the key as long as it's not an array indexer\n      // (note: string indexers behave the same way as numeric indexers as long as they represent numbers)\n      if (!(Array.isArray(obj) && isNumeric(key))) {\n        binding.observeProperty(obj, key);\n      }\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessKeyed(this);\n  }\n}\n\nexport class CallScope implements IExpression {\n  public $kind: ExpressionKind.CallScope;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly name: string,\n    public readonly args: ReadonlyArray<IsAssign>,\n    public readonly ancestor: number = 0) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator | null): StrictAny {\n    const args = evalList(flags, scope, locator, this.args);\n    const context = BindingContext.get(scope, this.name, this.ancestor);\n    const func = getFunction(flags, context, this.name);\n    if (func) {\n      return func.apply(context, args);\n    }\n    return undefined;\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const args = this.args;\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      args[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitCallScope(this);\n  }\n}\n\nexport class CallMember implements IExpression {\n  public $kind: ExpressionKind.CallMember;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly object: IsLeftHandSide,\n    public readonly name: string,\n    public readonly args: ReadonlyArray<IsAssign>) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const instance = this.object.evaluate(flags, scope, locator);\n    const args = evalList(flags, scope, locator, this.args);\n    const func = getFunction(flags, instance, this.name);\n    if (func) {\n      return func.apply(instance, args);\n    }\n    return undefined;\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const obj = this.object.evaluate(flags, scope, null);\n    this.object.connect(flags, scope, binding);\n    if (getFunction(flags & ~BindingFlags.mustEvaluate, obj, this.name)) {\n      const args = this.args;\n      for (let i = 0, ii = args.length; i < ii; ++i) {\n        args[i].connect(flags, scope, binding);\n      }\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitCallMember(this);\n  }\n}\n\nexport class CallFunction implements IExpression {\n  public $kind: ExpressionKind.CallFunction;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly func: IsLeftHandSide,\n    public readonly args: ReadonlyArray<IsAssign>) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    const func = this.func.evaluate(flags, scope, locator) as StrictAny; // not sure why this cast is needed..\n    if (typeof func === 'function') {\n      return func.apply(null, evalList(flags, scope, locator, this.args));\n    }\n    if (!(flags & BindingFlags.mustEvaluate) && (func === null || func === undefined)) {\n      return undefined;\n    }\n    throw Reporter.error(RuntimeError.NotAFunction, this);\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const func = this.func.evaluate(flags, scope, null);\n    this.func.connect(flags, scope, binding);\n    if (typeof func === 'function') {\n      const args = this.args;\n      for (let i = 0, ii = args.length; i < ii; ++i) {\n        args[i].connect(flags, scope, binding);\n      }\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitCallFunction(this);\n  }\n}\n\nexport type BinaryOperator = '&&' | '||' |  '==' |  '===' |  '!=' |  '!==' |  'instanceof' |  'in' |  '+' |  '-' |  '*' |  '/' |  '%' |  '<' |  '>' |  '<=' |  '>=';\n\nexport class Binary implements IExpression {\n  public $kind: ExpressionKind.Binary;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly operation: BinaryOperator,\n    public readonly left: IsBinary,\n    public readonly right: IsBinary) {\n    // what we're doing here is effectively moving the large switch statement from evaluate to the constructor\n    // so that the check only needs to be done once, and evaluate (which is called many times) will have a lot less\n    // work to do; we can do this because the operation can't change after it's parsed\n    this.evaluate = this[operation];\n  }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    throw Reporter.error(RuntimeError.UnknownOperator, this);\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const left = this.left.evaluate(flags, scope, null);\n    this.left.connect(flags, scope, binding);\n    if (this.operation === '&&' && !left || this.operation === '||' && left) {\n      return;\n    }\n    this.right.connect(flags, scope, binding);\n  }\n\n  private ['&&'](f: BindingFlags, s: IScope, l: IServiceLocator): StrictAny {\n    return this.left.evaluate(f, s, l) && this.right.evaluate(f, s, l);\n  }\n  private ['||'](f: BindingFlags, s: IScope, l: IServiceLocator): StrictAny {\n    return this.left.evaluate(f, s, l) || this.right.evaluate(f, s, l);\n  }\n  private ['=='](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    // tslint:disable-next-line:triple-equals\n    return this.left.evaluate(f, s, l) == this.right.evaluate(f, s, l);\n  }\n  private ['==='](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) === this.right.evaluate(f, s, l);\n  }\n  private ['!='](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    // tslint:disable-next-line:triple-equals\n    return this.left.evaluate(f, s, l) != this.right.evaluate(f, s, l);\n  }\n  private ['!=='](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) !== this.right.evaluate(f, s, l);\n  }\n  private ['instanceof'](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    const right = this.right.evaluate(f, s, l);\n    if (typeof right === 'function') {\n      return this.left.evaluate(f, s, l) instanceof right;\n    }\n    return false;\n  }\n  private ['in'](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    const right = this.right.evaluate(f, s, l);\n    if (right !== null && typeof right === 'object') {\n      return this.left.evaluate(f, s, l) in right;\n    }\n    return false;\n  }\n  // note: autoConvertAdd (and the null check) is removed because the default spec behavior is already largely similar\n  // and where it isn't, you kind of want it to behave like the spec anyway (e.g. return NaN when adding a number to undefined)\n  // this makes bugs in user code easier to track down for end users\n  // also, skipping these checks and leaving it to the runtime is a nice little perf boost and simplifies our code\n  private ['+'](f: BindingFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) + (<any>this.right.evaluate(f, s, l));\n  }\n  private ['-'](f: BindingFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) - (<any>this.right.evaluate(f, s, l));\n  }\n  private ['*'](f: BindingFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) * (<any>this.right.evaluate(f, s, l));\n  }\n  private ['/'](f: BindingFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) / (<any>this.right.evaluate(f, s, l));\n  }\n  private ['%'](f: BindingFlags, s: IScope, l: IServiceLocator): StrictAny {\n    // tslint:disable-next-line:no-any\n    return (<any>this.left.evaluate(f, s, l)) % (<any>this.right.evaluate(f, s, l));\n  }\n  private ['<'](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) < this.right.evaluate(f, s, l);\n  }\n  private ['>'](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) > this.right.evaluate(f, s, l);\n  }\n  private ['<='](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) <= this.right.evaluate(f, s, l);\n  }\n  private ['>='](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) >= this.right.evaluate(f, s, l);\n  }\n\n  // tslint:disable-next-line:member-ordering\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitBinary(this);\n  }\n}\n\nexport type UnaryOperator = 'void' | 'typeof' | '!' | '-' | '+';\n\nexport class Unary implements IExpression {\n  public $kind: ExpressionKind.Unary;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly operation: UnaryOperator,\n    public readonly expression: IsLeftHandSide) {\n    // see Binary (we're doing the same thing here)\n    // tslint:disable-next-line:no-any\n    this.evaluate = this[operation];\n  }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    throw Reporter.error(RuntimeError.UnknownOperator, this);\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    this.expression.connect(flags, scope, binding);\n  }\n\n  public ['void'](f: BindingFlags, s: IScope, l: IServiceLocator): undefined {\n    return void this.expression.evaluate(f, s, l);\n  }\n  public ['typeof'](f: BindingFlags, s: IScope, l: IServiceLocator): string {\n    return typeof this.expression.evaluate(f, s, l);\n  }\n  public ['!'](f: BindingFlags, s: IScope, l: IServiceLocator): boolean {\n    return !this.expression.evaluate(f, s, l);\n  }\n  public ['-'](f: BindingFlags, s: IScope, l: IServiceLocator): number {\n    return -this.expression.evaluate(f, s, l);\n  }\n  public ['+'](f: BindingFlags, s: IScope, l: IServiceLocator): number {\n    return +this.expression.evaluate(f, s, l);\n  }\n\n  // tslint:disable-next-line:member-ordering\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitUnary(this);\n  }\n}\nexport class PrimitiveLiteral<TValue extends StrictPrimitive = StrictPrimitive> implements IExpression {\n  public static readonly $undefined: PrimitiveLiteral<undefined> = new PrimitiveLiteral<undefined>(undefined);\n  public static readonly $null: PrimitiveLiteral<null> = new PrimitiveLiteral<null>(null);\n  public static readonly $true: PrimitiveLiteral<true> = new PrimitiveLiteral<true>(true);\n  public static readonly $false: PrimitiveLiteral<false> = new PrimitiveLiteral<false>(false);\n  public static readonly $empty: PrimitiveLiteral<string> = new PrimitiveLiteral<''>('');\n  public $kind: ExpressionKind.PrimitiveLiteral;\n  public connect: IExpression['connect'];\n  public assign: IExpression['assign'];\n  constructor(public readonly value: TValue) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): TValue {\n    return this.value;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitPrimitiveLiteral(this);\n  }\n}\n\nexport class HtmlLiteral implements IExpression {\n  public $kind: ExpressionKind.HtmlLiteral;\n  public assign: IExpression['assign'];\n  constructor(public readonly parts: ReadonlyArray<HtmlLiteral>) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): string {\n    const elements = this.parts;\n    let result = '';\n    for (let i = 0, ii = elements.length; i < ii; ++i) {\n      const value = elements[i].evaluate(flags, scope, locator);\n      if (value === undefined || value === null) {\n        continue;\n      }\n      result += value;\n    }\n    return result;\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    for (let i = 0, ii = this.parts.length; i < ii; ++i) {\n      this.parts[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitHtmlLiteral(this);\n  }\n}\n\nexport class ArrayLiteral implements IExpression {\n  public static readonly $empty: ArrayLiteral = new ArrayLiteral(PLATFORM.emptyArray);\n  public $kind: ExpressionKind.ArrayLiteral;\n  public assign: IExpression['assign'];\n  constructor(public readonly elements: ReadonlyArray<IsAssign>) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): ReadonlyArray<StrictAny> {\n    const elements = this.elements;\n    const length = elements.length;\n    const result = Array(length);\n    for (let i = 0; i < length; ++i) {\n      result[i] = elements[i].evaluate(flags, scope, locator);\n    }\n    return result;\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const elements = this.elements;\n    for (let i = 0, ii = elements.length; i < ii; ++i) {\n      elements[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitArrayLiteral(this);\n  }\n}\n\nexport class ObjectLiteral implements IExpression {\n  public static readonly $empty: ObjectLiteral = new ObjectLiteral(PLATFORM.emptyArray, PLATFORM.emptyArray);\n  public $kind: ExpressionKind.ObjectLiteral;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly keys: ReadonlyArray<number | string>,\n    public readonly values: ReadonlyArray<IsAssign>) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): Record<string, StrictAny> {\n    const instance: Record<string, StrictAny> = {};\n    const keys = this.keys;\n    const values = this.values;\n    for (let i = 0, ii = keys.length; i < ii; ++i) {\n      instance[keys[i]] = values[i].evaluate(flags, scope, locator);\n    }\n    return instance;\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const keys = this.keys;\n    const values = this.values;\n    for (let i = 0, ii = keys.length; i < ii; ++i) {\n      values[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitObjectLiteral(this);\n  }\n}\n\nexport class Template implements IExpression {\n  public static readonly $empty: Template = new Template(['']);\n  public $kind: ExpressionKind.Template;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly cooked: ReadonlyArray<string>,\n    public readonly expressions?: ReadonlyArray<IsAssign>) {\n    this.expressions = expressions || PLATFORM.emptyArray;\n  }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): string {\n    const expressions = this.expressions;\n    const cooked = this.cooked;\n    let result = cooked[0];\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      result += expressions[i].evaluate(flags, scope, locator);\n      result += cooked[i + 1];\n    }\n    return result;\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const expressions = this.expressions;\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      expressions[i].connect(flags, scope, binding);\n      i++;\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitTemplate(this);\n  }\n}\n\nexport class TaggedTemplate implements IExpression {\n  public $kind: ExpressionKind.TaggedTemplate;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly cooked: ReadonlyArray<string> & { raw?: ReadonlyArray<string> },\n    raw: ReadonlyArray<string>,\n    public readonly func: IsLeftHandSide,\n    public readonly expressions?: ReadonlyArray<IsAssign>) {\n    cooked.raw = raw;\n    this.expressions = expressions || PLATFORM.emptyArray;\n  }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): string {\n    const expressions = this.expressions;\n    const len = expressions.length;\n    const results = Array(len);\n    for (let i = 0, ii = len; i < ii; ++i) {\n      results[i] = expressions[i].evaluate(flags, scope, locator);\n    }\n    const func = this.func.evaluate(flags, scope, locator) as StrictAny; // not sure why this cast is needed..\n    if (typeof func !== 'function') {\n      throw Reporter.error(RuntimeError.NotAFunction, this);\n    }\n    return func.apply(null, [this.cooked].concat(results));\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    const expressions = this.expressions;\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      expressions[i].connect(flags, scope, binding);\n    }\n    this.func.connect(flags, scope, binding);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitTaggedTemplate(this);\n  }\n}\n\nexport class ArrayBindingPattern implements IExpression {\n  public $kind: ExpressionKind.ArrayBindingPattern;\n  // We'll either have elements, or keys+values, but never all 3\n  constructor(\n    public readonly elements: ReadonlyArray<IsAssign>\n  ) { }\n\n  // tslint:disable-next-line:no-any\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): any {\n    // TODO\n  }\n\n  // tslint:disable-next-line:no-any\n  public assign(flags: BindingFlags, scope: IScope, locator: IServiceLocator, obj: IIndexable): any {\n    // TODO\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void { }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitArrayBindingPattern(this);\n  }\n}\n\nexport class ObjectBindingPattern implements IExpression {\n  public $kind: ExpressionKind.ObjectBindingPattern;\n  // We'll either have elements, or keys+values, but never all 3\n  constructor(\n    public readonly keys: ReadonlyArray<string | number>,\n    public readonly values: ReadonlyArray<IsAssign>\n  ) { }\n\n  // tslint:disable-next-line:no-any\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): any {\n    // TODO\n  }\n\n  // tslint:disable-next-line:no-any\n  public assign(flags: BindingFlags, scope: IScope, locator: IServiceLocator, obj: IIndexable): any {\n    // TODO\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void { }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitObjectBindingPattern(this);\n  }\n}\n\nexport class BindingIdentifier implements IExpression {\n  public $kind: ExpressionKind.BindingIdentifier;\n  constructor(public readonly name: string) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return this.name;\n  }\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void { }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitBindingIdentifier(this);\n  }\n}\n\nexport type BindingIdentifierOrPattern = BindingIdentifier | ArrayBindingPattern | ObjectBindingPattern;\n\nconst toStringTag = Object.prototype.toString;\n\n// https://tc39.github.io/ecma262/#sec-iteration-statements\n// https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\nexport class ForOfStatement implements IExpression {\n  public $kind: ExpressionKind.ForOfStatement;\n  public assign: IExpression['assign'];\n  constructor(\n    public readonly declaration: BindingIdentifierOrPattern,\n    public readonly iterable: IsBindingBehavior) { }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): StrictAny {\n    return this.iterable.evaluate(flags, scope, locator);\n  }\n\n  public count(result: ObservedCollection | number | null | undefined): number {\n    return CountForOfStatement[toStringTag.call(result)](result);\n  }\n\n  // tslint:disable-next-line:no-any\n  public iterate(result: ObservedCollection | number | null | undefined, func: (arr: Collection, index: number, item: any) => void): void {\n    IterateForOfStatement[toStringTag.call(result)](result, func);\n  }\n\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void {\n    this.declaration.connect(flags, scope, binding);\n    this.iterable.connect(flags, scope, binding);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitForOfStatement(this);\n  }\n}\n\n/*\n* Note: this implementation is far simpler than the one in vCurrent and might be missing important stuff (not sure yet)\n* so while this implementation is identical to Template and we could reuse that one, we don't want to lock outselves in to potentially the wrong abstraction\n* but this class might be a candidate for removal if it turns out it does provide all we need\n*/\nexport class Interpolation implements IExpression {\n  public $kind: ExpressionKind.Interpolation;\n  public assign: IExpression['assign'];\n  public readonly isMulti: boolean;\n  public readonly firstExpression: IsBindingBehavior;\n  constructor(\n    public readonly parts: ReadonlyArray<string>,\n    public readonly expressions: ReadonlyArray<IsBindingBehavior>) {\n      this.isMulti = expressions.length > 1;\n      this.firstExpression = expressions[0];\n    }\n\n  public evaluate(flags: BindingFlags, scope: IScope, locator: IServiceLocator): string {\n    if (this.isMulti) {\n      const expressions = this.expressions;\n      const parts = this.parts;\n      let result = parts[0];\n      for (let i = 0, ii = expressions.length; i < ii; ++i) {\n        result += expressions[i].evaluate(flags, scope, locator);\n        result += parts[i + 1];\n      }\n      return result;\n    } else {\n      const parts = this.parts;\n      return parts[0] + this.firstExpression.evaluate(flags, scope, locator) + parts[1];\n    }\n  }\n  public connect(flags: BindingFlags, scope: IScope, binding: IConnectableBinding): void { }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitInterpolation(this);\n  }\n}\n\n/*\n* Note: for a property that is always the same, directly assigning it to the prototype is more efficient CPU wise\n* (gets assigned once, instead of per constructor call) as well as memory wise (stored once, instead of per instance)\n*\n* This gives us a cheap way to add some extra information to the AST for the runtime to do things more efficiently.\n*/\nBindingBehavior.prototype.$kind = ExpressionKind.BindingBehavior;\nValueConverter.prototype.$kind = ExpressionKind.ValueConverter;\nAssign.prototype.$kind = ExpressionKind.Assign;\nConditional.prototype.$kind = ExpressionKind.Conditional;\nAccessThis.prototype.$kind = ExpressionKind.AccessThis;\nAccessScope.prototype.$kind = ExpressionKind.AccessScope;\nAccessMember.prototype.$kind = ExpressionKind.AccessMember;\nAccessKeyed.prototype.$kind = ExpressionKind.AccessKeyed;\nCallScope.prototype.$kind = ExpressionKind.CallScope;\nCallMember.prototype.$kind = ExpressionKind.CallMember;\nCallFunction.prototype.$kind = ExpressionKind.CallFunction;\nBinary.prototype.$kind = ExpressionKind.Binary;\nUnary.prototype.$kind = ExpressionKind.Unary;\nPrimitiveLiteral.prototype.$kind = ExpressionKind.PrimitiveLiteral;\nHtmlLiteral.prototype.$kind = ExpressionKind.HtmlLiteral;\nArrayLiteral.prototype.$kind = ExpressionKind.ArrayLiteral;\nObjectLiteral.prototype.$kind = ExpressionKind.ObjectLiteral;\nTemplate.prototype.$kind = ExpressionKind.Template;\nTaggedTemplate.prototype.$kind = ExpressionKind.TaggedTemplate;\nArrayBindingPattern.prototype.$kind = ExpressionKind.ArrayBindingPattern;\nObjectBindingPattern.prototype.$kind = ExpressionKind.ObjectBindingPattern;\nBindingIdentifier.prototype.$kind = ExpressionKind.BindingIdentifier;\nForOfStatement.prototype.$kind = ExpressionKind.ForOfStatement;\nInterpolation.prototype.$kind = ExpressionKind.Interpolation;\n\n/// Evaluate the [list] in context of the [scope].\nfunction evalList(flags: BindingFlags, scope: IScope, locator: IServiceLocator, list: ReadonlyArray<IExpression>): StrictAny[] {\n  const len = list.length;\n  const result = Array(len);\n  for (let i = 0; i < len; ++i) {\n    result[i] = list[i].evaluate(flags, scope, locator);\n  }\n  return result;\n}\n\nfunction getFunction(flags: BindingFlags, obj: StrictAny, name: string): Function | null {\n  const func = obj === null || obj === undefined ? null : obj[name];\n  if (typeof func === 'function') {\n    return func;\n  }\n  if (!(flags & BindingFlags.mustEvaluate) && (func === null || func === undefined)) {\n    return null;\n  }\n  throw Reporter.error(RuntimeError.NotAFunction, obj, name, func);\n}\n\nfunction isNumeric(value: StrictAny): value is number {\n  // tslint:disable-next-line:no-reserved-keywords\n  const type = typeof value;\n  if (type === 'number') return true;\n  if (type !== 'string') return false;\n  const len = (<string>value).length;\n  if (len === 0) return false;\n  for (let i = 0; i < len; ++i) {\n    const char = (<string>value).charCodeAt(i);\n    if (char < 0x30 /*0*/ || char > 0x39/*9*/) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*@internal*/\nexport const IterateForOfStatement = {\n  ['[object Array]'](result: StrictAny[], func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    for (let i = 0, ii = result.length; i < ii; ++i) {\n      func(result, i, result[i]);\n    }\n  },\n  ['[object Map]'](result: Map<StrictAny, StrictAny>, func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    const arr = Array(result.size);\n    let i = -1;\n    for (const entry of result.entries()) {\n      arr[++i] = entry;\n    }\n    IterateForOfStatement['[object Array]'](arr, func);\n  },\n  ['[object Set]'](result: Set<StrictAny>, func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    const arr = Array(result.size);\n    let i = -1;\n    for (const key of result.keys()) {\n      arr[++i] = key;\n    }\n    IterateForOfStatement['[object Array]'](arr, func);\n  },\n  ['[object Number]'](result: number, func: (arr: Collection, index: number, item: StrictAny) => void): void {\n    const arr = Array(result);\n    for (let i = 0; i < result; ++i) {\n      arr[i] = i;\n    }\n    IterateForOfStatement['[object Array]'](arr, func);\n  },\n  ['[object Null]'](result: null, func: (arr: Collection, index: number, item: StrictAny) => void): void { },\n  ['[object Undefined]'](result: null, func: (arr: Collection, index: number, item: StrictAny) => void): void { }\n};\n\n/*@internal*/\nexport const CountForOfStatement = {\n  ['[object Array]'](result: StrictAny[]): number { return result.length; },\n  ['[object Map]'](result: Map<StrictAny, StrictAny>): number { return result.size; },\n  ['[object Set]'](result: Set<StrictAny>): number { return result.size; },\n  ['[object Number]'](result: number): number { return result; },\n  ['[object Null]'](result: null): number { return 0; },\n  ['[object Undefined]'](result: null): number { return 0; }\n};\n\n// Give each AST class a noop for each interface method if and only if it's not already defined\n// This accomplishes the following:\n//   1) no runtime error due to bad AST structure (it's the parser's job to guard against that)\n//   2) no runtime error due to a bad binding such as two-way on a literal (no need, since it doesn't threaten the integrity of the app's state)\n//   3) should we decide something else, we can easily change the global behavior of 1) and 2) by simply assigning a different method here (either in the source or via AOT)\nconst ast = [AccessThis, AccessScope, ArrayLiteral, ObjectLiteral, PrimitiveLiteral, Template, Unary, CallFunction, CallMember, CallScope, AccessMember, AccessKeyed, TaggedTemplate, Binary, Conditional, Assign, ForOfStatement];\nfor (let i = 0, ii = ast.length; i < ii; ++i) {\n  const proto = ast[i].prototype;\n  // tslint:disable-next-line:no-any\n  proto.assign = proto.assign || <any>PLATFORM.noop;\n  proto.connect = proto.connect || PLATFORM.noop;\n}\n","import { Decoratable, Decorated, IIndexable, Writable } from '@au-test/kernel';\nimport { IBinding, IBindingTargetObserver, IObserverLocator, IPropertySubscriber, StrictAny } from '.';\n\n// TODO: add connect-queue (or something similar) back in when everything else is working, to improve startup time\n\nconst slotNames: string[] = [];\nconst versionSlotNames: string[] = [];\nlet lastSlot = -1;\nfunction ensureEnoughSlotNames(currentSlot: number): void {\n  if (currentSlot === lastSlot) {\n    lastSlot += 5;\n    const ii = slotNames.length = versionSlotNames.length = lastSlot + 1;\n    for (let i = currentSlot + 1; i < ii; ++i) {\n      slotNames[i] = `_observer${i}`;\n      versionSlotNames[i] = `_observerVersion${i}`;\n    }\n  }\n}\nensureEnoughSlotNames(-1);\n\nexport interface IPartialConnectableBinding extends IBinding, IPropertySubscriber {\n  observerLocator: IObserverLocator;\n}\n\nexport interface IConnectableBinding extends IPartialConnectableBinding {\n  observerSlots: number;\n  version: number;\n  observeProperty(obj: StrictAny, propertyName: StrictAny): void;\n  addObserver(observer: IBindingTargetObserver): void;\n  unobserve(all?: boolean): void;\n}\n\n/*@internal*/\nexport function addObserver(this: IConnectableBinding, observer: IBindingTargetObserver): void {\n  // find the observer.\n  const observerSlots = this.observerSlots === undefined ? 0 : this.observerSlots;\n  let i = observerSlots;\n\n  while (i-- && this[slotNames[i]] !== observer);\n\n  // if we are not already observing, put the observer in an open slot and subscribe.\n  if (i === -1) {\n    i = 0;\n    while (this[slotNames[i]]) {\n      i++;\n    }\n    this[slotNames[i]] = observer;\n    observer.subscribe(this);\n    // increment the slot count.\n    if (i === observerSlots) {\n      this.observerSlots = i + 1;\n    }\n  }\n  // set the \"version\" when the observer was used.\n  if (this.version === undefined) {\n    this.version = 0;\n  }\n  this[versionSlotNames[i]] = this.version;\n  ensureEnoughSlotNames(i);\n}\n\n/*@internal*/\nexport function observeProperty(this: IConnectableBinding, obj: IIndexable, propertyName: string): void {\n  const observer = this.observerLocator.getObserver(obj, propertyName) as IBindingTargetObserver;\n  /* Note: we need to cast here because we can indeed get an accessor instead of an observer,\n   *  in which case the call to observer.subscribe will throw. It's not very clean and we can solve this in 2 ways:\n   *  1. Fail earlier: only let the locator resolve observers from .getObserver, and throw if no branches are left (e.g. it would otherwise return an accessor)\n   *  2. Fail silently (without throwing): give all accessors a no-op subscribe method\n   *\n   * We'll probably want to implement some global configuration (like a \"strict\" toggle) so users can pick between enforced correctness vs. ease-of-use\n   */\n  this.addObserver(observer);\n}\n\n/*@internal*/\nexport function unobserve(this: IConnectableBinding, all?: boolean): void {\n  const slots = this.observerSlots;\n  let slotName: string;\n  let observer: IBindingTargetObserver;\n  if (all === true) {\n    for (let i = 0; i < slots; ++i) {\n      slotName = slotNames[i];\n      observer = this[slotName];\n      if (observer !== null && observer !== undefined) {\n        this[slotName] = null;\n        observer.unsubscribe(this);\n      }\n    }\n  } else {\n    const version = this.version;\n    for (let i = 0; i < slots; ++i) {\n      if (this[versionSlotNames[i]] !== version) {\n        slotName = slotNames[i];\n        observer = this[slotName];\n        if (observer !== null && observer !== undefined) {\n          this[slotName] = null;\n          observer.unsubscribe(this);\n        }\n      }\n    }\n  }\n}\n\ntype DecoratableConnectable = Decoratable<IConnectableBinding, IPartialConnectableBinding>;\ntype DecoratedConnectable = Decorated<IConnectableBinding, IPartialConnectableBinding>;\n\nfunction connectableDecorator(target: DecoratableConnectable): DecoratedConnectable {\n  const proto = target.prototype;\n  if (!proto.hasOwnProperty('observeProperty')) proto.observeProperty = observeProperty;\n  if (!proto.hasOwnProperty('unobserve')) proto.unobserve = unobserve;\n  if (!proto.hasOwnProperty('addObserver')) proto.addObserver = addObserver;\n  return target as DecoratedConnectable;\n}\n\nexport function connectable(): typeof connectableDecorator;\nexport function connectable(target: DecoratableConnectable): DecoratedConnectable;\nexport function connectable(target?: DecoratableConnectable): DecoratedConnectable | typeof connectableDecorator {\n  return target === undefined ? connectableDecorator : connectableDecorator(target);\n}\n","import { IServiceLocator, Reporter } from '@au-test/kernel';\nimport { ExpressionKind, ForOfStatement, hasBind, hasUnbind, IsBindingBehavior } from './ast';\nimport { IScope } from './binding-context';\nimport { BindingFlags } from './binding-flags';\nimport { BindingMode } from './binding-mode';\nimport { connectable, IConnectableBinding, IPartialConnectableBinding } from './connectable';\nimport { AccessorOrObserver, IBindingTargetObserver, IBindScope } from './observation';\nimport { IObserverLocator } from './observer-locator';\n\n// tslint:disable:no-any\n\nexport interface IBinding extends IBindScope {\n  readonly locator: IServiceLocator;\n  readonly $scope: IScope;\n}\n\nexport type IBindingTarget = any; // Node | CSSStyleDeclaration | IObservable;\n\n// BindingMode is not a const enum (and therefore not inlined), so assigning them to a variable to save a member accessor is a minor perf tweak\nconst { oneTime, toView, fromView } = BindingMode;\n\n// pre-combining flags for bitwise checks is a minor perf tweak\nconst toViewOrOneTime = toView | oneTime;\n\nexport interface Binding extends IConnectableBinding {}\n\n@connectable()\nexport class Binding implements IPartialConnectableBinding {\n  public $isBound: boolean = false;\n  public $scope: IScope = null;\n\n  public targetObserver: AccessorOrObserver;\n\n  constructor(\n    public sourceExpression: IsBindingBehavior | ForOfStatement,\n    public target: IBindingTarget,\n    public targetProperty: string,\n    public mode: BindingMode,\n    public observerLocator: IObserverLocator,\n    public locator: IServiceLocator) { }\n\n  public updateTarget(value: any, flags: BindingFlags): void {\n    this.targetObserver.setValue(value, flags | BindingFlags.updateTargetInstance);\n  }\n\n  public updateSource(value: any, flags: BindingFlags): void {\n    this.sourceExpression.assign(flags | BindingFlags.updateSourceExpression, this.$scope, this.locator, value);\n  }\n\n  public handleChange(newValue: any, previousValue: any, flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n\n    const sourceExpression = this.sourceExpression;\n    const $scope = this.$scope;\n    const locator = this.locator;\n\n    if (flags & BindingFlags.updateTargetInstance) {\n      const targetObserver = this.targetObserver;\n      const mode = this.mode;\n\n      previousValue = targetObserver.getValue();\n      // if the only observable is an AccessScope then we can assume the passed-in newValue is the correct and latest value\n      if (sourceExpression.$kind !== ExpressionKind.AccessScope || this.observerSlots > 1) {\n        newValue = sourceExpression.evaluate(flags, $scope, locator);\n      }\n      if (newValue !== previousValue) {\n        this.updateTarget(newValue, flags);\n      }\n      if ((mode & oneTime) === 0) {\n        this.version++;\n        sourceExpression.connect(flags, $scope, this);\n        this.unobserve(false);\n      }\n      return;\n    }\n\n    if (flags & BindingFlags.updateSourceExpression) {\n      if (newValue !== sourceExpression.evaluate(flags, $scope, locator)) {\n        this.updateSource(newValue, flags);\n      }\n      return;\n    }\n\n    throw Reporter.error(15, BindingFlags[flags]);\n  }\n\n  public $bind(flags: BindingFlags, scope: IScope): void {\n    if (this.$isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags);\n    }\n\n    this.$isBound = true;\n    this.$scope = scope;\n\n    let sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    const mode = this.mode;\n    let targetObserver = this.targetObserver as IBindingTargetObserver;\n    if (!targetObserver) {\n      if (mode & fromView) {\n        targetObserver = this.targetObserver = this.observerLocator.getObserver(this.target, this.targetProperty) as IBindingTargetObserver;\n      } else {\n        targetObserver = this.targetObserver = this.observerLocator.getAccessor(this.target, this.targetProperty) as IBindingTargetObserver;\n      }\n    }\n    if (targetObserver.bind) {\n      targetObserver.bind(flags);\n    }\n\n    // during bind, binding behavior might have changed sourceExpression\n    sourceExpression = this.sourceExpression;\n    if (mode & toViewOrOneTime) {\n      targetObserver.setValue(sourceExpression.evaluate(flags, scope, this.locator), flags);\n    }\n    if (mode & toView) {\n      sourceExpression.connect(flags, scope, this);\n    }\n    if (mode & fromView) {\n      targetObserver.subscribe(this);\n    }\n  }\n\n  public $unbind(flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n    this.$isBound = false;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n    this.$scope = null;\n\n    const targetObserver = this.targetObserver as IBindingTargetObserver;\n    if (targetObserver.unbind) {\n      targetObserver.unbind(flags);\n    }\n    if (targetObserver.unsubscribe) {\n      targetObserver.unsubscribe(this);\n    }\n    this.unobserve(true);\n  }\n}\n","import { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { IScope } from '../binding-context';\nimport { BindingFlags } from '../binding-flags';\nimport { BindingMode } from '../binding-mode';\nimport { Call } from '../call';\nimport { Listener } from '../listener';\n\nexport type DebounceableBinding = (Binding | Call | Listener) & {\n  debouncedMethod: ((newValue: any, oldValue: any, flags: BindingFlags) => void) & { originalName: string };\n  debounceState: {\n    callContextToDebounce: BindingFlags,\n    delay: number,\n    timeoutId: any,\n    oldValue: any\n  }\n};\n\nconst unset = {};\n\n/*@internal*/\nexport function debounceCallSource(event: Event) {\n  const state = this.debounceState;\n  clearTimeout(state.timeoutId);\n  state.timeoutId = setTimeout(() => this.debouncedMethod(event), state.delay);\n}\n\n/*@internal*/\nexport function debounceCall(this: DebounceableBinding, newValue: any, oldValue: any, flags: BindingFlags) {\n  const state = this.debounceState;\n  clearTimeout(state.timeoutId);\n  if (!(flags & state.callContextToDebounce)) {\n    state.oldValue = unset;\n    this.debouncedMethod(newValue, oldValue, flags);\n    return;\n  }\n  if (state.oldValue === unset) {\n    state.oldValue = oldValue;\n  }\n  state.timeoutId = setTimeout(() => {\n    const ov = state.oldValue;\n    state.oldValue = unset;\n    this.debouncedMethod(newValue, ov, flags);\n  }, state.delay);\n}\n\nconst fromView = BindingMode.fromView;\n\n@bindingBehavior('debounce')\nexport class DebounceBindingBehavior {\n  public bind(flags: BindingFlags, scope: IScope, binding: DebounceableBinding, delay = 200) {\n    let methodToDebounce;\n    let callContextToDebounce;\n    let debouncer;\n\n    if (binding instanceof Binding) {\n      methodToDebounce = 'handleChange';\n      debouncer = debounceCall;\n      callContextToDebounce = binding.mode & fromView ? BindingFlags.updateSourceExpression : BindingFlags.updateTargetInstance;\n    } else {\n      methodToDebounce = 'callSource';\n      debouncer = debounceCallSource;\n      callContextToDebounce = BindingFlags.updateTargetInstance;\n    }\n\n    // stash the original method and it's name.\n    // note: a generic name like \"originalMethod\" is not used to avoid collisions\n    // with other binding behavior types.\n    binding.debouncedMethod = binding[methodToDebounce];\n    binding.debouncedMethod.originalName = methodToDebounce;\n\n    // replace the original method with the debouncing version.\n    binding[methodToDebounce] = debouncer;\n\n    // create the debounce state.\n    binding.debounceState = {\n      callContextToDebounce,\n      delay,\n      timeoutId: 0,\n      oldValue: unset\n    };\n  }\n\n  public unbind(flags: BindingFlags, scope: IScope, binding: DebounceableBinding) {\n    // restore the state of the binding.\n    const methodToRestore = binding.debouncedMethod.originalName;\n    binding[methodToRestore] = binding.debouncedMethod;\n    binding.debouncedMethod = null;\n    clearTimeout(binding.debounceState.timeoutId);\n    binding.debounceState = null;\n  }\n}\n","import { DI, inject } from '@au-test/kernel';\nimport { valueConverter } from '../value-converter';\n\nconst SCRIPT_REGEX = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\n\nexport interface ISanitizer {\n /**\n  * Sanitizes the provided input.\n  * @param input The input to be sanitized.\n  */\n  sanitize(input: string): string;\n}\n\nexport const ISanitizer = DI.createInterface<ISanitizer>()\n  .withDefault(x => x.singleton(class {\n    public sanitize(input: string): string {\n      return input.replace(SCRIPT_REGEX, '');\n    }\n  })\n);\n\n/**\n * Simple html sanitization converter to preserve whitelisted elements and attributes on a bound property containing html.\n */\n@valueConverter('sanitize')\n@inject(ISanitizer)\nexport class SanitizeValueConverter {\n  constructor(private sanitizer: ISanitizer) {\n    this.sanitizer = sanitizer;\n  }\n\n /**\n  * Process the provided markup that flows to the view.\n  * @param untrustedMarkup The untrusted markup to be sanitized.\n  */\n  public toView(untrustedMarkup: string) {\n    if (untrustedMarkup === null || untrustedMarkup === undefined) {\n      return null;\n    }\n\n    return this.sanitizer.sanitize(untrustedMarkup);\n  }\n}\n","import { Reporter } from '@au-test/kernel';\nimport { bindingBehavior } from '../binding-behavior';\nimport { IScope } from '../binding-context';\nimport { BindingFlags } from '../binding-flags';\nimport { Listener } from '../listener';\n\ntype CompatibleEvent = {\n  target?: EventTarget;\n\n  // legacy\n  path?: EventTarget[];\n\n  // old composedPath\n  deepPath?(): EventTarget[];\n\n  // current spec\n  composedPath?(): EventTarget[];\n};\n\n/*@internal*/\nexport function findOriginalEventTarget(event: Event & CompatibleEvent): EventTarget {\n  return (event.composedPath && event.composedPath()[0]) || (event.deepPath && event.deepPath()[0]) || (event.path && event.path[0]) || event.target;\n}\n\n/*@internal*/\nexport function handleSelfEvent(event: Event): ReturnType<Listener['callSource']> {\n  const target = findOriginalEventTarget(event);\n\n  if (this.target !== target) {\n    return;\n  }\n\n  return this.selfEventCallSource(event);\n}\n\nexport type SelfableBinding = Listener & {\n  selfEventCallSource: Listener['callSource'];\n};\n\n@bindingBehavior('self')\nexport class SelfBindingBehavior {\n  public bind(flags: BindingFlags, scope: IScope, binding: SelfableBinding): void {\n    if (!binding.callSource || !binding.targetEvent) {\n      throw Reporter.error(8);\n    }\n\n    binding.selfEventCallSource = binding.callSource;\n    binding.callSource = handleSelfEvent;\n  }\n\n  public unbind(flags: BindingFlags, scope: IScope, binding: SelfableBinding): void {\n    binding.callSource = binding.selfEventCallSource;\n    binding.selfEventCallSource = null;\n  }\n}\n","import { inject, Reporter } from '@au-test/kernel';\nimport { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { IScope } from '../binding-context';\nimport { BindingFlags } from '../binding-flags';\nimport { ISignaler } from '../signaler';\n\nexport type SignalableBinding = Binding & {\n  signal: string | string[];\n};\n\n@bindingBehavior('signal')\n@inject(ISignaler)\nexport class SignalBindingBehavior {\n  constructor(private signaler: ISignaler) {}\n\n  public bind(flags: BindingFlags, scope: IScope, binding: SignalableBinding) {\n    if (!binding.updateTarget) {\n      throw Reporter.error(11);\n    }\n\n    if (arguments.length === 4) {\n      let name = arguments[3];\n      this.signaler.addSignalListener(name, binding);\n      binding.signal = name;\n    } else if (arguments.length > 4) {\n      let names = Array.prototype.slice.call(arguments, 3);\n      let i = names.length;\n\n      while (i--) {\n        let name = names[i];\n        this.signaler.addSignalListener(name, binding);\n      }\n\n      binding.signal = names;\n    } else {\n      throw Reporter.error(12);\n    }\n  }\n\n  public unbind(flags: BindingFlags, scope: IScope, binding: SignalableBinding) {\n    let name = binding.signal;\n    binding.signal = null;\n\n    if (Array.isArray(name)) {\n      let names = name;\n      let i = names.length;\n\n      while (i--) {\n        this.signaler.removeSignalListener(names[i], binding);\n      }\n    } else {\n      this.signaler.removeSignalListener(name, binding);\n    }\n  }\n}\n","import { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { IScope } from '../binding-context';\nimport { BindingFlags } from '../binding-flags';\nimport { BindingMode } from '../binding-mode';\nimport { Call } from '../call';\nimport { Listener } from '../listener';\n\nexport type ThrottleableBinding = (Binding | Call | Listener) & {\n  throttledMethod: ((value) => any) & { originalName: string };\n  throttleState: {\n    delay: number,\n    timeoutId: any,\n    last: any,\n    newValue?: any\n  }\n};\n\n/*@internal*/\nexport function throttle(this: ThrottleableBinding, newValue: any) {\n  let state = this.throttleState;\n  let elapsed = +new Date() - state.last;\n\n  if (elapsed >= state.delay) {\n    clearTimeout(state.timeoutId);\n    state.timeoutId = null;\n    state.last = +new Date();\n    this.throttledMethod(newValue);\n    return;\n  }\n\n  state.newValue = newValue;\n\n  if (state.timeoutId === null) {\n    state.timeoutId = setTimeout(() => {\n        state.timeoutId = null;\n        state.last = +new Date();\n        this.throttledMethod(state.newValue);\n      }, state.delay - elapsed);\n  }\n}\n\n@bindingBehavior('throttle')\nexport class ThrottleBindingBehavior {\n  public bind(flags: BindingFlags, scope: IScope, binding: ThrottleableBinding, delay = 200) {\n    let methodToThrottle: string;\n\n    if (binding instanceof Binding) {\n      if (binding.mode === BindingMode.twoWay) {\n        methodToThrottle = 'updateSource';\n      } else {\n        methodToThrottle = 'updateTarget';\n      }\n    } else {\n      methodToThrottle = 'callSource';\n    }\n\n    // stash the original method and it's name.\n    // note: a generic name like \"originalMethod\" is not used to avoid collisions\n    // with other binding behavior types.\n    binding.throttledMethod = binding[methodToThrottle];\n    binding.throttledMethod.originalName = methodToThrottle;\n\n    // replace the original method with the throttling version.\n    binding[methodToThrottle] = throttle;\n\n    // create the throttle state.\n    binding.throttleState = {\n      delay: delay,\n      last: 0,\n      timeoutId: null\n    };\n  }\n\n  public unbind(flags: BindingFlags, scope: IScope, binding: ThrottleableBinding) {\n    // restore the state of the binding.\n    let methodToRestore = binding.throttledMethod.originalName;\n    binding[methodToRestore] = binding.throttledMethod;\n    binding.throttledMethod = null;\n    clearTimeout(binding.throttleState.timeoutId);\n    binding.throttleState = null;\n  }\n}\n","import { DI, IDisposable } from '@au-test/kernel';\nimport { DOM, INode } from '../dom';\n\nexport interface IEventWithStandardPropagation extends Event {\n  propagationStopped?: boolean;\n  standardStopPropagation?: Event['stopPropagation'];\n}\n\n//Note: path and deepPath are designed to handle v0 and v1 shadow dom specs respectively\nfunction findOriginalEventTarget(event: any): IEventTargetWithLookups {\n  return (event.composedPath && event.composedPath()[0]) || (event.path && event.path[0]) || (event.deepPath && event.deepPath[0]) || event.target;\n}\n\nfunction stopPropagation(this: IEventWithStandardPropagation): void {\n  this.standardStopPropagation();\n  this.propagationStopped = true;\n}\n\nfunction handleCapturedEvent(event: IEventWithStandardPropagation): void {\n  event.propagationStopped = false;\n  let target = findOriginalEventTarget(event);\n  const orderedCallbacks = [];\n  /**\n   * During capturing phase, event 'bubbles' down from parent. Needs to reorder callback from root down to target\n   */\n  while (target) {\n    if (target.capturedCallbacks) {\n      const callback = target.capturedCallbacks[event.type];\n      if (callback) {\n        if (event.stopPropagation !== stopPropagation) {\n          event.standardStopPropagation = event.stopPropagation;\n          event.stopPropagation = stopPropagation;\n        }\n        orderedCallbacks.push(callback);\n      }\n    }\n    target = target.parentNode;\n  }\n\n  for (let i = orderedCallbacks.length - 1; i >= 0 && !event.propagationStopped; i--) {\n    const orderedCallback = orderedCallbacks[i];\n    if ('handleEvent' in orderedCallback) {\n      orderedCallback.handleEvent(event);\n    } else {\n      orderedCallback(event);\n    }\n  }\n}\n\nfunction handleDelegatedEvent(event: IEventWithStandardPropagation): void {\n  event.propagationStopped = false;\n  let target = findOriginalEventTarget(event);\n  while (target && !event.propagationStopped) {\n    if (target.delegatedCallbacks) {\n      const callback = target.delegatedCallbacks[event.type];\n      if (callback) {\n        if (event.stopPropagation !== stopPropagation) {\n          event.standardStopPropagation = event.stopPropagation;\n          event.stopPropagation = stopPropagation;\n        }\n        if ('handleEvent' in callback) {\n          callback.handleEvent(event);\n        } else {\n          callback(event);\n        }\n      }\n    }\n    target = target.parentNode;\n  }\n}\n\nexport class ListenerTracker {\n  private count: number = 0;\n\n  constructor(\n    private eventName: string,\n    private listener: EventListenerOrEventListenerObject,\n    private capture: boolean\n  ) { }\n\n  public increment(): void {\n    this.count++;\n    if (this.count === 1) {\n      DOM.addEventListener(this.eventName, this.listener, null, this.capture);\n    }\n  }\n\n  public decrement(): void {\n    this.count--;\n    if (this.count === 0) {\n      DOM.removeEventListener(this.eventName, this.listener, null, this.capture);\n    }\n  }\n}\n\n/**\n * Enable dispose() pattern for `delegate` & `capture` commands\n */\nexport class DelegateOrCaptureSubscription {\n  constructor(\n    public entry: ListenerTracker,\n    public lookup: Record<string, EventListenerOrEventListenerObject>,\n    public targetEvent: string,\n    callback: EventListenerOrEventListenerObject\n  ) {\n    lookup[targetEvent] = callback;\n  }\n\n  public dispose(): void {\n    this.entry.decrement();\n    this.lookup[this.targetEvent] = null;\n  }\n}\n\n/**\n * Enable dispose() pattern for addEventListener for `trigger`\n */\nexport class TriggerSubscription {\n  constructor(\n    public target: INode,\n    public targetEvent: string,\n    public callback: EventListenerOrEventListenerObject\n  ) {\n    DOM.addEventListener(targetEvent, callback, target);\n  }\n\n  public dispose(): void {\n    DOM.removeEventListener(this.targetEvent, this.callback, this.target);\n  }\n}\n\nexport interface  IEventTargetWithLookups extends INode {\n  delegatedCallbacks?: Record<string, EventListenerOrEventListenerObject>;\n  capturedCallbacks?: Record<string, EventListenerOrEventListenerObject>;\n}\n\nexport enum DelegationStrategy {\n  none = 0,\n  capturing = 1,\n  bubbling = 2\n}\n\nexport interface IElementConfiguration {\n  tagName: string;\n  properties: Record<string, string[]>;\n}\n\nexport interface IEventSubscriber extends IDisposable {\n  subscribe(node: INode, callbackOrListener: EventListenerOrEventListenerObject): void;\n}\n\nexport class EventSubscriber implements IEventSubscriber {\n  private target: INode;\n  private handler: EventListenerOrEventListenerObject;\n\n  constructor(private readonly events: string[]) {\n    this.events = events;\n    this.target = null;\n    this.handler = null;\n  }\n\n  public subscribe(node: INode, callbackOrListener: EventListenerOrEventListenerObject): void {\n    this.target = node;\n    this.handler = callbackOrListener;\n\n    const add = DOM.addEventListener;\n    const events = this.events;\n\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      add(events[i], callbackOrListener, node);\n    }\n  }\n\n  public dispose(): void {\n    const node = this.target;\n    const callbackOrListener = this.handler;\n    const events = this.events;\n    const remove = DOM.removeEventListener;\n\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      remove(events[i], callbackOrListener, node);\n    }\n\n    this.target = this.handler = null;\n  }\n}\n\nexport type EventSubscription = DelegateOrCaptureSubscription | TriggerSubscription;\n\nexport interface IEventManager {\n  registerElementConfiguration(config: IElementConfiguration): void;\n  getElementHandler(target: INode, propertyName: string): IEventSubscriber | null;\n  addEventListener(target: INode, targetEvent: string, callbackOrListener: EventListenerOrEventListenerObject, delegate: DelegationStrategy): IDisposable;\n}\n\nexport const IEventManager = DI.createInterface<IEventManager>()\n  .withDefault(x => x.singleton(EventManager));\n\n/*@internal*/\nexport class EventManager implements IEventManager {\n  public elementHandlerLookup: Record<string, Record<string, string[]>> = {};\n  public delegatedHandlers: Record<string, ListenerTracker> = {};\n  public capturedHandlers: Record<string, ListenerTracker> = {};\n\n  constructor() {\n    this.registerElementConfiguration({\n      tagName: 'INPUT',\n      properties: {\n        value: ['change', 'input'],\n        checked: ['change', 'input'],\n        files: ['change', 'input']\n      }\n    });\n    this.registerElementConfiguration({\n      tagName: 'TEXTAREA',\n      properties: {\n        value: ['change', 'input']\n      }\n    });\n    this.registerElementConfiguration({\n      tagName: 'SELECT',\n      properties: {\n        value: ['change']\n      }\n    });\n    this.registerElementConfiguration({\n      tagName: 'content editable',\n      properties: {\n        value: ['change', 'input', 'blur', 'keyup', 'paste']\n      }\n    });\n    this.registerElementConfiguration({\n      tagName: 'scrollable element',\n      properties: {\n        scrollTop: ['scroll'],\n        scrollLeft: ['scroll']\n      }\n    });\n  }\n\n  public registerElementConfiguration(config: IElementConfiguration): void {\n    const properties = config.properties;\n    const lookup: Record<string, string[]> = this.elementHandlerLookup[config.tagName] = {};\n\n    for (const propertyName in properties) {\n      if (properties.hasOwnProperty(propertyName)) {\n        lookup[propertyName] = properties[propertyName];\n      }\n    }\n  }\n\n  public getElementHandler(target: INode, propertyName: string): IEventSubscriber | null {\n    const tagName = target['tagName'];\n    const lookup = this.elementHandlerLookup;\n\n    if (tagName) {\n      if (lookup[tagName] && lookup[tagName][propertyName]) {\n        return new EventSubscriber(lookup[tagName][propertyName]);\n      }\n      if (propertyName === 'textContent' || propertyName === 'innerHTML') {\n        return new EventSubscriber(lookup['content editable'].value);\n      }\n      if (propertyName === 'scrollTop' || propertyName === 'scrollLeft') {\n        return new EventSubscriber(lookup['scrollable element'][propertyName]);\n      }\n    }\n    return null;\n  }\n\n  public addEventListener(\n    target: IEventTargetWithLookups,\n    targetEvent: string,\n    callbackOrListener: EventListenerOrEventListenerObject,\n    strategy: DelegationStrategy\n  ): EventSubscription {\n    let delegatedHandlers: Record<string, ListenerTracker> | undefined;\n    let capturedHandlers: Record<string, ListenerTracker> | undefined;\n    let handlerEntry: ListenerTracker | ListenerTracker | undefined;\n\n    if (strategy === DelegationStrategy.bubbling) {\n      delegatedHandlers = this.delegatedHandlers;\n      handlerEntry = delegatedHandlers[targetEvent] || (delegatedHandlers[targetEvent] = new ListenerTracker(targetEvent, handleDelegatedEvent, false));\n      handlerEntry.increment();\n      const delegatedCallbacks = target.delegatedCallbacks || (target.delegatedCallbacks = {});\n      return new DelegateOrCaptureSubscription(handlerEntry, delegatedCallbacks, targetEvent, callbackOrListener);\n    }\n    if (strategy === DelegationStrategy.capturing) {\n      capturedHandlers = this.capturedHandlers;\n      handlerEntry = capturedHandlers[targetEvent] || (capturedHandlers[targetEvent] = new ListenerTracker(targetEvent, handleCapturedEvent, true));\n      handlerEntry.increment();\n      const capturedCallbacks = target.capturedCallbacks || (target.capturedCallbacks = {});\n      return new DelegateOrCaptureSubscription(handlerEntry, capturedCallbacks, targetEvent, callbackOrListener);\n    }\n    return new TriggerSubscription(target, targetEvent, callbackOrListener);\n  }\n}\n","import { IIndexable, PLATFORM, Primitive, Reporter } from '@au-test/kernel';\nimport { BindingFlags } from './binding-flags';\nimport { IChangeSet } from './change-set';\nimport { IDirtyChecker } from './dirty-checker';\nimport { IBindingTargetAccessor, IBindingTargetObserver, IObservable, IPropertySubscriber, ISubscribable, MutationKind } from './observation';\nimport { IObserverLocator } from './observer-locator';\nimport { subscriberCollection } from './subscriber-collection';\n\nexport interface ComputedOverrides {\n  // Indicates that a getter doesn't need to re-calculate its dependencies after the first observation.\n  // tslint:disable-next-line:no-reserved-keywords\n  static?: boolean;\n\n  // Indicates that the getter of a getter/setter pair can change its value based on side-effects outside the setter.\n  volatile?: boolean;\n}\n\nexport type ComputedLookup = { computed?: Record<string, ComputedOverrides> };\n\nexport function computed(config: ComputedOverrides): PropertyDecorator {\n  return function(target: Object & ComputedLookup, key: string): void {\n    const computed = target.computed || (target.computed = {});\n    computed[key] = config;\n  };\n}\n\nconst noProxy = !(typeof Proxy !== undefined);\nconst computedOverrideDefaults: ComputedOverrides = { static: false, volatile: false };\n\n/* @internal */\nexport function createComputedObserver(\n  observerLocator: IObserverLocator,\n  dirtyChecker: IDirtyChecker,\n  changeSet: IChangeSet,\n  // tslint:disable-next-line:no-reserved-keywords\n  instance: IObservable & { constructor: Function & ComputedLookup },\n  propertyName: string,\n  descriptor: PropertyDescriptor): IBindingTargetAccessor {\n\n  if (descriptor.configurable === false) {\n    return dirtyChecker.createProperty(instance, propertyName);\n  }\n\n  if (descriptor.get) {\n    const overrides: ComputedOverrides = instance.constructor.computed\n      ? instance.constructor.computed[propertyName] || computedOverrideDefaults\n      : computedOverrideDefaults;\n\n    if (descriptor.set) {\n      if (overrides.volatile) {\n        return noProxy\n          ? dirtyChecker.createProperty(instance, propertyName)\n          : new GetterObserver(overrides, instance, propertyName, descriptor, observerLocator, changeSet);\n      }\n\n      return new CustomSetterObserver(instance, propertyName, descriptor, changeSet);\n    }\n\n    return noProxy\n      ? dirtyChecker.createProperty(instance, propertyName)\n      : new GetterObserver(overrides, instance, propertyName, descriptor, observerLocator, changeSet);\n  }\n\n  throw Reporter.error(18, propertyName);\n}\n\nexport interface CustomSetterObserver extends IBindingTargetObserver { }\n\n// Used when the getter is dependent solely on changes that happen within the setter.\n@subscriberCollection(MutationKind.instance)\nexport class CustomSetterObserver implements CustomSetterObserver {\n  public dispose: () => void;\n  public observing: boolean = false;\n  public currentValue: IIndexable | Primitive;\n  public oldValue: IIndexable | Primitive;\n\n  constructor(public obj: IObservable, public propertyKey: string, private descriptor: PropertyDescriptor, private changeSet: IChangeSet) { }\n\n  public getValue(): IIndexable | Primitive {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValue(newValue: IIndexable | Primitive): void {\n    this.obj[this.propertyKey] = newValue;\n  }\n\n  public flushChanges(): void {\n    const oldValue = this.oldValue;\n    const newValue = this.currentValue;\n\n    this.callSubscribers(newValue, oldValue, BindingFlags.updateTargetInstance | BindingFlags.fromFlushChanges);\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.observing) {\n      this.convertProperty();\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n  }\n\n  public convertProperty(): void {\n    const setter = this.descriptor.set;\n    const that = this;\n\n    this.observing = true;\n    this.currentValue = this.obj[this.propertyKey];\n\n    Reflect.defineProperty(this.obj, this.propertyKey, {\n      set: function(newValue: IIndexable | Primitive): void {\n        setter.call(that.obj, newValue);\n\n        const oldValue = this.currentValue;\n\n        if (oldValue !== newValue) {\n          that.oldValue = oldValue;\n          that.changeSet.add(that);\n\n          that.currentValue = newValue;\n        }\n      }\n    });\n  }\n}\n\nCustomSetterObserver.prototype.dispose = PLATFORM.noop;\n\nexport interface GetterObserver extends IBindingTargetObserver { }\n\n// Used when there is no setter, and the getter is dependent on other properties of the object;\n// Used when there is a setter but the value of the getter can change based on properties set outside of the setter.\n/*@internal*/\n@subscriberCollection(MutationKind.instance)\nexport class GetterObserver implements GetterObserver {\n  public dispose: () => void;\n  private controller: GetterController;\n\n  constructor(private overrides: ComputedOverrides, public obj: IObservable, public propertyKey: string, private descriptor: PropertyDescriptor, private observerLocator: IObserverLocator, private changeSet: IChangeSet) {\n    this.controller = new GetterController(\n      overrides,\n      obj,\n      propertyKey,\n      descriptor,\n      this,\n      observerLocator,\n      changeSet\n    );\n  }\n\n  public getValue(): IIndexable | Primitive {\n    return this.controller.value;\n  }\n\n  // tslint:disable-next-line:no-empty\n  public setValue(newValue: IIndexable | Primitive): void { }\n\n  public flushChanges(): void {\n    const oldValue = this.controller.value;\n    const newValue = this.controller.getValueAndCollectDependencies();\n\n    if (oldValue !== newValue) {\n      this.callSubscribers(newValue, oldValue, BindingFlags.updateTargetInstance);\n    }\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    this.addSubscriber(subscriber);\n    this.controller.onSubscriberAdded();\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n    this.controller.onSubscriberRemoved();\n  }\n}\n\nGetterObserver.prototype.dispose = PLATFORM.noop;\n\n/*@internal*/\nexport class GetterController {\n  public value: IIndexable | Primitive;\n  public isCollecting: boolean = false;\n\n  private dependencies: ISubscribable<MutationKind.instance>[] = [];\n  private subscriberCount: number = 0;\n\n  constructor(\n    private overrides: ComputedOverrides,\n    private instance: IObservable,\n    private propertyName: string,\n    descriptor: PropertyDescriptor,\n    private owner: GetterObserver,\n    observerLocator: IObserverLocator,\n    private changeSet: IChangeSet\n  ) {\n    const proxy = new Proxy(instance, createGetterTraps(observerLocator, this));\n    const getter = descriptor.get;\n    const ctrl = this;\n\n    Reflect.defineProperty(instance, propertyName, {\n      get: function(): IIndexable | Primitive {\n        if (ctrl.subscriberCount < 1 || ctrl.isCollecting) {\n          ctrl.value = getter.apply(proxy);\n        }\n\n        return ctrl.value;\n      }\n    });\n  }\n\n  public addDependency(subscribable: ISubscribable<MutationKind.instance>): void {\n    if (this.dependencies.includes(subscribable)) {\n      return;\n    }\n\n    this.dependencies.push(subscribable);\n  }\n\n  public onSubscriberAdded(): void {\n    this.subscriberCount++;\n\n    if (this.subscriberCount > 1) {\n      return;\n    }\n\n    this.getValueAndCollectDependencies(true);\n  }\n\n  public getValueAndCollectDependencies(requireCollect: boolean = false): IIndexable | Primitive {\n    const dynamicDependencies = !this.overrides.static || requireCollect;\n\n    if (dynamicDependencies) {\n      this.unsubscribeAllDependencies();\n      this.isCollecting = true;\n    }\n\n    this.value = this.instance[this.propertyName]; // triggers observer collection\n\n    if (dynamicDependencies) {\n      this.isCollecting = false;\n      this.dependencies.forEach(x => x.subscribe(this));\n    }\n\n    return this.value;\n  }\n\n  public onSubscriberRemoved(): void {\n    this.subscriberCount--;\n\n    if (this.subscriberCount === 0) {\n      this.unsubscribeAllDependencies();\n    }\n  }\n\n  public handleChange(): void {\n    this.changeSet.add(this.owner);\n  }\n\n  private unsubscribeAllDependencies(): void {\n    this.dependencies.forEach(x => x.unsubscribe(this));\n    this.dependencies.length = 0;\n  }\n}\n\nfunction createGetterTraps(observerLocator: IObserverLocator, controller: GetterController): ReturnType<typeof proxyOrValue> {\n  return {\n    get: function(instance: IIndexable, key: string): IIndexable | Primitive {\n      const value = instance[key];\n\n      if (key === '$observers' || typeof value === 'function' || !controller.isCollecting) {\n        return value;\n      }\n\n      // TODO: fix this\n      if (instance instanceof Array) {\n        controller.addDependency(observerLocator.getArrayObserver(instance));\n\n        if (key === 'length') {\n          controller.addDependency(observerLocator.getArrayObserver(instance).getLengthObserver());\n        }\n      } else if (instance instanceof Map) {\n        controller.addDependency(observerLocator.getMapObserver(instance));\n\n        if (key === 'size') {\n          controller.addDependency(observerLocator.getMapObserver(instance).getLengthObserver());\n        }\n      } else if (instance instanceof Set) {\n        controller.addDependency(observerLocator.getSetObserver(instance));\n\n        if (key === 'size') {\n          return observerLocator.getSetObserver(instance).getLengthObserver();\n        }\n      } else {\n        controller.addDependency(observerLocator.getObserver(instance, key) as IBindingTargetObserver);\n      }\n\n      return proxyOrValue(observerLocator, controller, value);\n    }\n  };\n}\n\nfunction proxyOrValue(observerLocator: IObserverLocator, controller: GetterController, value: IIndexable): ProxyHandler<IIndexable> {\n  if (!(value instanceof Object)) {\n    return value;\n  }\n\n  return new Proxy(value, createGetterTraps(observerLocator, controller));\n}\n","import { DI, IIndexable, Primitive } from '@au-test/kernel';\nimport { BindingFlags } from './binding-flags';\nimport { IBindingTargetAccessor, IBindingTargetObserver, IObservable, IPropertySubscriber } from './observation';\nimport { propertyObserver } from './property-observer';\n\nexport interface IDirtyChecker {\n  createProperty(obj: IObservable, propertyName: string): IBindingTargetAccessor;\n}\n\nexport const IDirtyChecker = DI.createInterface<IDirtyChecker>()\n  .withDefault(x => x.singleton(DirtyChecker));\n\n/*@internal*/\nexport class DirtyChecker {\n  private tracked: DirtyCheckProperty[] = [];\n  private checkDelay: number = 120;\n\n  public createProperty(obj: IObservable, propertyName: string): DirtyCheckProperty {\n    return new DirtyCheckProperty(this, obj, propertyName);\n  }\n\n  public addProperty(property: DirtyCheckProperty): void {\n    const tracked = this.tracked;\n\n    tracked.push(property);\n\n    if (tracked.length === 1) {\n      this.scheduleDirtyCheck();\n    }\n  }\n\n  public removeProperty(property: DirtyCheckProperty): void {\n    const tracked = this.tracked;\n    tracked.splice(tracked.indexOf(property), 1);\n  }\n\n  public scheduleDirtyCheck(): void {\n    setTimeout(() => this.check(), this.checkDelay);\n  }\n\n  public check(): void {\n    const tracked = this.tracked;\n    let i = tracked.length;\n\n    while (i--) {\n      const current = tracked[i];\n\n      if (current.isDirty()) {\n        current.flushChanges();\n      }\n    }\n\n    if (tracked.length) {\n      this.scheduleDirtyCheck();\n    }\n  }\n}\n\nexport interface DirtyCheckProperty extends IBindingTargetObserver { }\n\n/*@internal*/\n@propertyObserver()\nexport class DirtyCheckProperty implements DirtyCheckProperty {\n  public oldValue: IIndexable | Primitive;\n\n  constructor(\n    private dirtyChecker: DirtyChecker,\n    public obj: IObservable,\n    public propertyKey: string) {\n\n    }\n\n  public isDirty(): boolean {\n    return this.oldValue !== this.obj[this.propertyKey];\n  }\n\n  public getValue(): IIndexable | Primitive {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValue(newValue: IIndexable | Primitive): void {\n    this.obj[this.propertyKey] = newValue;\n  }\n\n  public flushChanges(): void {\n    const oldValue = this.oldValue;\n    const newValue = this.getValue();\n\n    this.callSubscribers(newValue, oldValue, BindingFlags.updateTargetInstance | BindingFlags.fromFlushChanges);\n\n    this.oldValue = newValue;\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.getValue();\n      this.dirtyChecker.addProperty(this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.dirtyChecker.removeProperty(this);\n    }\n  }\n}\n","import { IIndexable, Primitive } from '@au-test/kernel';\nimport { DOM, INode, INodeObserver } from '../dom';\nimport { BindingFlags } from './binding-flags';\nimport { IChangeSet } from './change-set';\nimport { IEventSubscriber } from './event-manager';\nimport { CollectionKind, IBatchedCollectionSubscriber, IBindingTargetObserver, ICollectionObserver, IndexMap, IPropertySubscriber } from './observation';\nimport { IObserverLocator } from './observer-locator';\nimport { targetObserver } from './target-observer';\n\nconst inputValueDefaults = {\n  ['button']: '',\n  ['checkbox']: 'on',\n  ['color']: '#000000',\n  ['date']: '',\n  ['datetime-local']: '',\n  ['email']: '',\n  ['file']: '',\n  ['hidden']: '',\n  ['image']: '',\n  ['month']: '',\n  ['number']: '',\n  ['password']: '',\n  ['radio']: 'on',\n  ['range']: '50',\n  ['reset']: '',\n  ['search']: '',\n  ['submit']: '',\n  ['tel']: '',\n  ['text']: '',\n  ['time']: '',\n  ['url']: '',\n  ['week']: ''\n};\n\nconst handleEventFlags = BindingFlags.fromDOMEvent | BindingFlags.updateSourceExpression;\n\nexport interface ValueAttributeObserver extends\n  IBindingTargetObserver<INode, string, Primitive | IIndexable> { }\n\n@targetObserver('')\nexport class ValueAttributeObserver implements ValueAttributeObserver {\n  public currentValue: Primitive | IIndexable;\n  public currentFlags: BindingFlags;\n  public oldValue: Primitive | IIndexable;\n  public defaultValue: Primitive | IIndexable;\n\n  public flushChanges: () => void;\n\n  constructor(\n    public changeSet: IChangeSet,\n    public obj: INode,\n    public propertyKey: string,\n    public handler: IEventSubscriber\n  ) {\n    // note: input.files can be assigned and this was fixed in Firefox 57:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1384030\n\n    // input.value (for type='file') however, can only be assigned an empty string\n    if (propertyKey === 'value') {\n      const nodeType = obj['type'];\n      this.defaultValue = inputValueDefaults[nodeType || 'text'];\n      if (nodeType === 'file') {\n        this.flushChanges = this.flushFileChanges;\n      }\n    } else {\n      this.defaultValue = '';\n    }\n    this.oldValue = this.currentValue = obj[propertyKey];\n  }\n\n  public getValue(): Primitive | IIndexable {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValueCore(newValue: Primitive | IIndexable, flags: BindingFlags): void {\n    this.obj[this.propertyKey] = newValue;\n    if (flags & BindingFlags.fromBind) {\n      return;\n    }\n    this.callSubscribers(this.currentValue, this.oldValue, flags);\n  }\n\n  public handleEvent(): void {\n    const oldValue = this.oldValue = this.currentValue;\n    const newValue = this.currentValue = this.getValue();\n    if (oldValue !== newValue) {\n      this.callSubscribers(newValue, oldValue, handleEventFlags);\n      this.oldValue = newValue;\n    }\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.getValue();\n      this.handler.subscribe(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  private flushFileChanges(): void {\n    const currentValue = this.currentValue;\n    if (this.oldValue !== currentValue) {\n      if (currentValue === '') {\n        this.setValueCore(currentValue, this.currentFlags);\n        this.oldValue = this.currentValue;\n      }\n    }\n  }\n}\n\nValueAttributeObserver.prototype.propertyKey = '';\nValueAttributeObserver.prototype.handler = null;\n\nconst defaultHandleBatchedChangeFlags = BindingFlags.fromFlushChanges | BindingFlags.updateTargetInstance;\n\nexport interface CheckedObserver extends\n  IBindingTargetObserver<HTMLInputElement, string, Primitive | IIndexable>,\n  IBatchedCollectionSubscriber,\n  IPropertySubscriber { }\n\n@targetObserver()\nexport class CheckedObserver implements CheckedObserver {\n  public currentValue: Primitive | IIndexable;\n  public currentFlags: BindingFlags;\n  public oldValue: Primitive | IIndexable;\n  public defaultValue: Primitive | IIndexable;\n\n  public flushChanges: () => void;\n\n  private arrayObserver: ICollectionObserver<CollectionKind.array>;\n  private valueObserver: ValueAttributeObserver;\n\n  constructor(\n    public changeSet: IChangeSet,\n    public obj: HTMLInputElement & { $observers?: any; matcher?: any; model?: any },\n    public handler: IEventSubscriber,\n    public observerLocator: IObserverLocator\n  ) { }\n\n  public getValue(): Primitive | IIndexable {\n    return this.currentValue;\n  }\n\n  public setValueCore(newValue: Primitive | IIndexable, flags: BindingFlags): void {\n    if (!this.valueObserver) {\n      this.valueObserver = this.obj['$observers'] && (this.obj['$observers'].model || this.obj['$observers'].value);\n      if (this.valueObserver) {\n        this.valueObserver.subscribe(this);\n      }\n    }\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n    if (this.obj.type === 'checkbox' && Array.isArray(newValue)) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(newValue);\n      this.arrayObserver.subscribeBatched(this);\n    }\n    this.synchronizeElement();\n  }\n\n  // handleBatchedCollectionChange (todo: rename to make this explicit?)\n  public handleBatchedChange(): void {\n    this.synchronizeElement();\n    this.notify(defaultHandleBatchedChangeFlags);\n  }\n\n  // handlePropertyChange (todo: rename normal subscribe methods in target observers to batched, since that's what they really are)\n  public handleChange(newValue: Primitive | IIndexable, previousValue: Primitive | IIndexable, flags: BindingFlags): void {\n    this.synchronizeElement();\n    this.notify(flags);\n  }\n\n  public synchronizeElement(): void {\n    const value = this.currentValue;\n    const element = this.obj;\n    const elementValue = element.hasOwnProperty('model') ? element['model'] : element.value;\n    const isRadio = element.type === 'radio';\n    const matcher = element['matcher'] || ((a: Primitive | IIndexable, b: Primitive | IIndexable) => a === b);\n\n    if (isRadio) {\n      element.checked = !!matcher(value, elementValue);\n    } else if (value === true) {\n      element.checked = true;\n    } else if (Array.isArray(value)) {\n      element.checked = value.findIndex(item => !!matcher(item, elementValue)) !== -1;\n    } else {\n      element.checked = false;\n    }\n  }\n\n  public notify(flags: BindingFlags): void {\n    if (flags & BindingFlags.fromBind) {\n      return;\n    }\n    const oldValue = this.oldValue;\n    const newValue = this.currentValue;\n    if (newValue === oldValue) {\n      return;\n    }\n    this.callSubscribers(this.currentValue, this.oldValue, flags);\n  }\n\n  public handleEvent(): void {\n    let value = this.currentValue;\n    const element = this.obj;\n    const elementValue = element.hasOwnProperty('model') ? element['model'] : element.value;\n    let index;\n    const matcher = element['matcher'] || defaultMatcher;\n\n    if (element.type === 'checkbox') {\n      if (Array.isArray(value)) {\n        index = value.findIndex(item => !!matcher(item, elementValue));\n        if (element.checked && index === -1) {\n          value.push(elementValue);\n        } else if (!element.checked && index !== -1) {\n          value.splice(index, 1);\n        }\n        // when existing value is array, do not invoke callback as only the array element has changed\n        return;\n      }\n      value = element.checked;\n    } else if (element.checked) {\n      value = elementValue;\n    } else {\n      return;\n    }\n    this.oldValue = this.currentValue;\n    this.currentValue = value;\n    this.notify(handleEventFlags);\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  public unbind(): void {\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n    if (this.valueObserver) {\n      this.valueObserver.unsubscribe(this);\n    }\n  }\n}\n\nCheckedObserver.prototype.handler = null;\nCheckedObserver.prototype.observerLocator = null;\n\nconst childObserverOptions = {\n  childList: true,\n  subtree: true,\n  characterData: true\n};\n\ntype UntypedArray = (Primitive | IIndexable)[];\ntype HTMLOptionElementWithModel = HTMLOptionElement & { model?: Primitive | IIndexable };\n\nfunction defaultMatcher(a: Primitive | IIndexable, b: Primitive | IIndexable): boolean {\n  return a === b;\n}\n\nexport interface SelectValueObserver extends\n  IBindingTargetObserver<HTMLSelectElement & { matcher?: typeof defaultMatcher }, string, Primitive | IIndexable | UntypedArray>,\n  IBatchedCollectionSubscriber,\n  IPropertySubscriber { }\n\n@targetObserver()\nexport class SelectValueObserver implements SelectValueObserver {\n  public currentValue: Primitive | IIndexable | UntypedArray;\n  public currentFlags: BindingFlags;\n  public oldValue: Primitive | IIndexable | UntypedArray;\n  public defaultValue: Primitive | UntypedArray;\n\n  public flushChanges: () => void;\n\n  private arrayObserver: ICollectionObserver<CollectionKind.array>;\n  private nodeObserver: INodeObserver;\n\n  constructor(\n    public changeSet: IChangeSet,\n    public obj: HTMLSelectElement & { matcher?: typeof defaultMatcher },\n    public handler: IEventSubscriber,\n    public observerLocator: IObserverLocator\n  ) { }\n\n  public getValue(): Primitive | IIndexable | UntypedArray {\n    return this.currentValue;\n  }\n\n  public setValueCore(newValue: Primitive | UntypedArray, flags: BindingFlags): void {\n    const isArray = Array.isArray(newValue);\n    if (!isArray && newValue !== null && newValue !== undefined && this.obj.multiple) {\n      throw new Error('Only null or Array instances can be bound to a multi-select.');\n    }\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n    if (isArray) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(<(Primitive | IIndexable)[]>newValue);\n      this.arrayObserver.subscribeBatched(this);\n    }\n    this.synchronizeOptions();\n    this.notify(flags);\n  }\n\n  // called when the array mutated (items sorted/added/removed, etc)\n  public handleBatchedChange(indexMap: number[]): void {\n    // we don't need to go through the normal setValue logic and can directly call synchronizeOptions here,\n    // because the change already waited one tick (batched) and there's no point in calling notify when the instance didn't change\n    this.synchronizeOptions(indexMap);\n  }\n\n  // called when a different value was assigned\n  public handleChange(newValue: Primitive | UntypedArray, previousValue: Primitive | UntypedArray, flags: BindingFlags): void {\n    this.setValue(newValue, flags);\n  }\n\n  public notify(flags: BindingFlags): void {\n    if (flags & BindingFlags.fromBind) {\n      return;\n    }\n    const oldValue = this.oldValue;\n    const newValue = this.currentValue;\n    if (newValue === oldValue) {\n      return;\n    }\n    this.callSubscribers(newValue, oldValue, flags);\n  }\n\n  public handleEvent(): void {\n    // \"from-view\" changes are always synchronous now, so immediately sync the value and notify subscribers\n    const shouldNotify = this.synchronizeValue();\n    if (shouldNotify) {\n      this.notify(handleEventFlags);\n    }\n  }\n\n  public synchronizeOptions(indexMap?: IndexMap): void {\n    const currentValue = this.currentValue;\n    const isArray = Array.isArray(currentValue);\n    const obj = this.obj;\n    const matcher = obj.matcher || defaultMatcher;\n    const options = obj.options;\n    let i = options.length;\n\n    while (i--) {\n      const option = options.item(i) as HTMLOptionElement & { model?: Primitive | IIndexable };\n      const optionValue = option.hasOwnProperty('model') ? option.model : option.value;\n      if (isArray) {\n        option.selected = (<UntypedArray>currentValue).findIndex(item => !!matcher(optionValue, item)) !== -1;\n        continue;\n      }\n      option.selected = !!matcher(optionValue, currentValue);\n    }\n  }\n\n  public synchronizeValue(): boolean {\n    // Spec for synchronizing value from `SelectObserver` to `<select/>`\n    // When synchronizing value to observed <select/> element, do the following steps:\n    // A. If `<select/>` is multiple\n    //    1. Check if current value, called `currentValue` is an array\n    //      a. If not an array, return true to signal value has changed\n    //      b. If is an array:\n    //        i. gather all current selected <option/>, in to array called `values`\n    //        ii. loop through the `currentValue` array and remove items that are nolonger selected based on matcher\n    //        iii. loop through the `values` array and add items that are selected based on matcher\n    //        iv. Return false to signal value hasn't changed\n    // B. If the select is single\n    //    1. Let `value` equal the first selected option, if no option selected, then `value` is `null`\n    //    2. assign `this.currentValue` to `this.oldValue`\n    //    3. assign `value` to `this.currentValue`\n    //    4. return `true` to signal value has changed\n    const obj = this.obj;\n    const options = obj.options;\n    const len = options.length;\n    const currentValue = this.currentValue;\n    let i = 0;\n\n    if (obj.multiple) {\n      // A.\n      if (!Array.isArray(currentValue)) {\n        // A.1.a\n        return true;\n      }\n      // A.1.b\n      // multi select\n      let option: HTMLOptionElementWithModel;\n      const matcher = obj.matcher || defaultMatcher;\n      // A.1.b.i\n      const values: UntypedArray = [];\n      while (i < len) {\n        option = options.item(i);\n        if (option.selected) {\n          values.push(option.hasOwnProperty('model')\n            ? option.model\n            : option.value\n          );\n        }\n        ++i;\n      }\n      // A.1.b.ii\n      i = 0;\n      while (i < currentValue.length) {\n        const a = currentValue[i];\n        // Todo: remove arrow fn\n        if (values.findIndex(b => !!matcher(a, b)) === -1) {\n          currentValue.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n      // A.1.b.iii\n      i = 0;\n      while (i < values.length) {\n        const a = values[i];\n        // Todo: remove arrow fn\n        if (currentValue.findIndex(b => !!matcher(a, b)) === -1) {\n          currentValue.push(a);\n        }\n        ++i;\n      }\n      // A.1.b.iv\n      return false;\n    }\n    // B. single select\n    // B.1\n    let value: Primitive | IIndexable | UntypedArray = null;\n    while (i < len) {\n      const option = options.item(i) as HTMLOptionElementWithModel;\n      if (option.selected) {\n        value = option.hasOwnProperty('model')\n          ? option.model\n          : option.value;\n        break;\n      }\n      ++i;\n    }\n    // B.2\n    this.oldValue = this.currentValue;\n    // B.3\n    this.currentValue = value;\n    // B.4\n    return true;\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  public bind(): void {\n    this.nodeObserver = DOM.createNodeObserver(\n      this.obj,\n      this.handleNodeChange.bind(this),\n      childObserverOptions\n    );\n  }\n\n  public unbind(): void {\n    this.nodeObserver.disconnect();\n    this.nodeObserver = null;\n\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n  }\n\n  public handleNodeChange(): void {\n    this.synchronizeOptions();\n    const shouldNotify = this.synchronizeValue();\n    if (shouldNotify) {\n      this.notify(handleEventFlags);\n    }\n  }\n}\n\nSelectValueObserver.prototype.handler = null;\nSelectValueObserver.prototype.observerLocator = null;\n","import { IIndexable, Primitive } from '@au-test/kernel';\n// tslint:disable:no-reserved-keywords\nimport { nativePush, nativeSplice } from './array-observer';\nimport { BindingFlags } from './binding-flags';\nimport { IChangeSet } from './change-set';\nimport { collectionObserver } from './collection-observer';\nimport { CollectionKind, ICollectionObserver, IObservedMap } from './observation';\n\nconst proto = Map.prototype;\nexport const nativeSet = proto.set; // TODO: probably want to make these internal again\nexport const nativeClear = proto.clear;\nexport const nativeDelete = proto.delete;\n\n// note: we can't really do much with Map due to the internal data structure not being accessible so we're just using the native calls\n// fortunately, map/delete/clear are easy to reconstruct for the indexMap\n\n// https://tc39.github.io/ecma262/#sec-map.prototype.map\nfunction observeSet(this: IObservedMap, key: IIndexable | Primitive, value: IIndexable | Primitive): ReturnType<typeof nativeSet> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeSet.call(this, key, value);\n  }\n  const oldSize = this.size;\n  nativeSet.call(this, key, value);\n  const newSize = this.size;\n  if (newSize === oldSize) {\n    let i = 0;\n    for (const entry of this.entries()) {\n      if (entry[0] === key) {\n        if (entry[1] !== value) {\n          o.indexMap[i] = -2;\n        }\n        return this;\n      }\n      i++;\n    }\n    return this;\n  }\n  o.indexMap[oldSize] = -2;\n  o.callSubscribers('set', arguments, BindingFlags.isCollectionMutation);\n  return this;\n}\n\n// https://tc39.github.io/ecma262/#sec-map.prototype.clear\nfunction observeClear(this: IObservedMap): ReturnType<typeof nativeClear>  {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeClear.call(this);\n  }\n  const size = this.size;\n  if (size > 0) {\n    const indexMap = o.indexMap;\n    let i = 0;\n    for (const entry of this.keys()) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, entry);\n      }\n      i++;\n    }\n    nativeClear.call(this);\n    indexMap.length = 0;\n    o.callSubscribers('clear', arguments, BindingFlags.isCollectionMutation);\n  }\n  return undefined;\n}\n\n// https://tc39.github.io/ecma262/#sec-map.prototype.delete\nfunction observeDelete(this: IObservedMap, value: IIndexable | Primitive): ReturnType<typeof nativeDelete> {\n  const o = this.$observer;\n  if (o === undefined) {\n    return nativeDelete.call(this, value);\n  }\n  const size = this.size;\n  if (size === 0) {\n    return false;\n  }\n  let i = 0;\n  const indexMap = o.indexMap;\n  for (const entry of this.keys()) {\n    if (entry === value) {\n      if (indexMap[i] > -1) {\n        nativePush.call(indexMap.deletedItems, entry);\n      }\n      nativeSplice.call(indexMap, i, 1);\n      return nativeDelete.call(this, value);\n    }\n    i++;\n  }\n  o.callSubscribers('delete', arguments, BindingFlags.isCollectionMutation);\n  return false;\n}\n\nfor (const observe of [observeSet, observeClear, observeDelete]) {\n  Object.defineProperty(observe, 'observing', { value: true, writable: false, configurable: false, enumerable: false });\n}\n\nexport function enableMapObservation(): void {\n  if (proto.set['observing'] !== true) proto.set = observeSet;\n  if (proto.clear['observing'] !== true) proto.clear = observeClear;\n  if (proto.delete['observing'] !== true) proto.delete = observeDelete;\n}\n\nenableMapObservation();\n\nexport function disableMapObservation(): void {\n  if (proto.set['observing'] === true) proto.set = nativeSet;\n  if (proto.clear['observing'] === true) proto.clear = nativeClear;\n  if (proto.delete['observing'] === true) proto.delete = nativeDelete;\n}\n\nexport interface MapObserver extends ICollectionObserver<CollectionKind.map> {}\n\n@collectionObserver(CollectionKind.map)\nexport class MapObserver implements MapObserver {\n  public resetIndexMap: () => void;\n  public changeSet: IChangeSet;\n\n  public collection: IObservedMap;\n\n  constructor(changeSet: IChangeSet, map: IObservedMap) {\n    this.changeSet = changeSet;\n    map.$observer = this;\n    this.collection = map;\n    this.resetIndexMap();\n  }\n}\n\nexport function getMapObserver(changeSet: IChangeSet, map: IObservedMap): MapObserver {\n  return (map.$observer as MapObserver) || new MapObserver(changeSet, map);\n}\n","import { DI } from '@au-test/kernel';\nimport { INode } from '../dom';\n\nexport interface ISVGAnalyzer {\n  isStandardSvgAttribute(node: INode, attributeName: string): boolean;\n}\n\nexport const ISVGAnalyzer = DI.createInterface<ISVGAnalyzer>()\n  .withDefault(x => x.singleton(class {\n    isStandardSvgAttribute(node: INode, attributeName: string): boolean {\n      return false;\n    }\n  })\n);\n","import { DI, IIndexable, inject, Primitive, Reporter } from '@au-test/kernel';\nimport { DOM } from '../dom';\nimport { getArrayObserver } from './array-observer';\nimport { IBindingContext, IOverrideContext } from './binding-context';\nimport { IChangeSet } from './change-set';\nimport { createComputedObserver } from './computed-observer';\nimport { IDirtyChecker } from './dirty-checker';\nimport { CheckedObserver, SelectValueObserver, ValueAttributeObserver } from './element-observation';\nimport { IEventManager } from './event-manager';\nimport { getMapObserver } from './map-observer';\nimport { AccessorOrObserver, CollectionKind, CollectionObserver, IBindingTargetAccessor, IBindingTargetObserver, ICollectionObserver, IObservable, IObservedArray, IObservedMap, IObservedSet } from './observation';\nimport { PrimitiveObserver, SetterObserver } from './property-observation';\nimport { getSetObserver } from './set-observer';\nimport { ISVGAnalyzer } from './svg-analyzer';\nimport { ClassAttributeAccessor, DataAttributeAccessor, ElementPropertyAccessor, PropertyAccessor, StyleAttributeAccessor, XLinkAttributeAccessor } from './target-accessors';\n\nconst toStringTag = Object.prototype.toString;\n\nexport interface IObjectObservationAdapter {\n  getObserver(object: IObservable, propertyName: string, descriptor: PropertyDescriptor): IBindingTargetObserver;\n}\n\nexport interface IObserverLocator {\n  getObserver(obj: IObservable, propertyName: string): AccessorOrObserver;\n  getAccessor(obj: IObservable, propertyName: string): IBindingTargetAccessor;\n  addAdapter(adapter: IObjectObservationAdapter): void;\n  getArrayObserver(array: (IIndexable | Primitive)[]): ICollectionObserver<CollectionKind.array>;\n  getMapObserver(map: Map<IIndexable | Primitive, IIndexable | Primitive>): ICollectionObserver<CollectionKind.map>;\n  // tslint:disable-next-line:no-reserved-keywords\n  getSetObserver(set: Set<IIndexable | Primitive>): ICollectionObserver<CollectionKind.set>;\n}\n\nexport const IObserverLocator = DI.createInterface<IObserverLocator>()\n  .withDefault(x => x.singleton(ObserverLocator));\n\nfunction getPropertyDescriptor(subject: object, name: string): PropertyDescriptor {\n  let pd = Object.getOwnPropertyDescriptor(subject, name);\n  let proto = Object.getPrototypeOf(subject);\n\n  while (pd === undefined && proto !== null) {\n    pd = Object.getOwnPropertyDescriptor(proto, name);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return pd;\n}\n\n@inject(IChangeSet, IEventManager, IDirtyChecker, ISVGAnalyzer)\n/*@internal*/\nexport class ObserverLocator implements IObserverLocator {\n  private adapters: IObjectObservationAdapter[] = [];\n\n  constructor(\n    private changeSet: IChangeSet,\n    private eventManager: IEventManager,\n    private dirtyChecker: IDirtyChecker,\n    private svgAnalyzer: ISVGAnalyzer\n  ) {}\n\n  public getObserver(obj: IObservable | IBindingContext | IOverrideContext, propertyName: string): AccessorOrObserver {\n    if (obj.$synthetic === true) {\n      return obj.getObservers().getOrCreate(obj, propertyName);\n    }\n    let observersLookup = obj.$observers;\n    let observer;\n\n    if (observersLookup && propertyName in observersLookup) {\n      return observersLookup[propertyName];\n    }\n\n    observer = this.createPropertyObserver(obj, propertyName);\n\n    if (!observer.doNotCache) {\n      if (observersLookup === undefined) {\n        observersLookup = this.getOrCreateObserversLookup(obj);\n      }\n\n      observersLookup[propertyName] = observer;\n    }\n\n    return observer;\n  }\n\n  public addAdapter(adapter: IObjectObservationAdapter): void {\n    this.adapters.push(adapter);\n  }\n\n  public getAccessor(obj: IObservable, propertyName: string): IBindingTargetAccessor {\n    if (DOM.isNodeInstance(obj)) {\n      const tagName = obj['tagName'];\n      // this check comes first for hot path optimization\n      if (propertyName === 'textContent') {\n        return new ElementPropertyAccessor(this.changeSet, obj, propertyName);\n      }\n\n      // TODO: optimize and make pluggable\n      if (propertyName === 'class' || propertyName === 'style' || propertyName === 'css'\n        || propertyName === 'value' && (tagName === 'INPUT' || tagName === 'SELECT')\n        || propertyName === 'checked' && tagName === 'INPUT'\n        || propertyName === 'model' && tagName === 'INPUT'\n        || /^xlink:.+$/.exec(propertyName)) {\n        return this.getObserver(obj, propertyName);\n      }\n\n      if (/^\\w+:|^data-|^aria-/.test(propertyName)\n        || this.svgAnalyzer.isStandardSvgAttribute(obj, propertyName)\n        || tagName === 'IMG' && propertyName === 'src'\n        || tagName === 'A' && propertyName === 'href'\n      ) {\n        return new DataAttributeAccessor(this.changeSet, obj, propertyName);\n      }\n      return new ElementPropertyAccessor(this.changeSet, obj, propertyName);\n    }\n\n    return new PropertyAccessor(obj, propertyName);\n  }\n\n  public getArrayObserver(array: IObservedArray): ICollectionObserver<CollectionKind.array> {\n    return getArrayObserver(this.changeSet, array);\n  }\n\n  public getMapObserver(map: IObservedMap): ICollectionObserver<CollectionKind.map>  {\n    return getMapObserver(this.changeSet, map);\n  }\n\n  // tslint:disable-next-line:no-reserved-keywords\n  public getSetObserver(set: IObservedSet): ICollectionObserver<CollectionKind.set>  {\n    return getSetObserver(this.changeSet, set);\n  }\n\n  private getOrCreateObserversLookup(obj: IObservable): Record<string, AccessorOrObserver | IBindingTargetObserver> {\n    return obj.$observers || this.createObserversLookup(obj);\n  }\n\n  private createObserversLookup(obj: IObservable): Record<string, IBindingTargetObserver> {\n    const value: Record<string, IBindingTargetObserver> = {};\n    if (!Reflect.defineProperty(obj, '$observers', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    })) {\n      Reporter.write(0, obj);\n    }\n    return value;\n  }\n\n  private getAdapterObserver(obj: IObservable, propertyName: string, descriptor: PropertyDescriptor): IBindingTargetObserver | null {\n    for (let i = 0, ii = this.adapters.length; i < ii; i++) {\n      const adapter = this.adapters[i];\n      const observer = adapter.getObserver(obj, propertyName, descriptor);\n      if (observer) {\n        return observer;\n      }\n    }\n    return null;\n  }\n\n  private createPropertyObserver(obj: IObservable, propertyName: string): AccessorOrObserver {\n    if (!(obj instanceof Object)) {\n      return new PrimitiveObserver(obj, propertyName) as IBindingTargetAccessor;\n    }\n\n    let isNode: boolean;\n    if (DOM.isNodeInstance(obj)) {\n      if (propertyName === 'class') {\n        return new ClassAttributeAccessor(this.changeSet, obj);\n      }\n\n      if (propertyName === 'style' || propertyName === 'css') {\n        return new StyleAttributeAccessor(this.changeSet, <HTMLElement>obj);\n      }\n\n      const tagName = obj['tagName'];\n      const handler = this.eventManager.getElementHandler(obj, propertyName);\n      if (propertyName === 'value' && tagName === 'SELECT') {\n        return new SelectValueObserver(this.changeSet, <HTMLSelectElement>obj, handler, this);\n      }\n\n      if (propertyName === 'checked' && tagName === 'INPUT') {\n        return new CheckedObserver(this.changeSet, <HTMLInputElement>obj, handler, this);\n      }\n\n      if (handler) {\n        return new ValueAttributeObserver(this.changeSet, obj, propertyName, handler);\n      }\n\n      const xlinkResult = /^xlink:(.+)$/.exec(propertyName);\n      if (xlinkResult) {\n        return new XLinkAttributeAccessor(this.changeSet, <Element>obj, propertyName, xlinkResult[1]);\n      }\n\n      if (propertyName === 'role'\n        || /^\\w+:|^data-|^aria-/.test(propertyName)\n        || this.svgAnalyzer.isStandardSvgAttribute(obj, propertyName)) {\n        return new DataAttributeAccessor(this.changeSet, obj, propertyName);\n      }\n      isNode = true;\n    }\n\n    const tag = toStringTag.call(obj);\n    switch (tag) {\n      case '[object Array]':\n        if (propertyName === 'length') {\n          return this.getArrayObserver(<IObservedArray>obj).getLengthObserver();\n        }\n        return this.dirtyChecker.createProperty(obj, propertyName);\n      case '[object Map]':\n        if (propertyName === 'size') {\n          return this.getMapObserver(<IObservedMap>obj).getLengthObserver();\n        }\n        return this.dirtyChecker.createProperty(obj, propertyName);\n      case '[object Set]':\n        if (propertyName === 'size') {\n          return this.getSetObserver(<IObservedSet>obj).getLengthObserver();\n        }\n        return this.dirtyChecker.createProperty(obj, propertyName);\n    }\n\n    const descriptor = getPropertyDescriptor(obj, propertyName) as PropertyDescriptor & {\n      // tslint:disable-next-line:no-reserved-keywords\n      get: PropertyDescriptor['get'] & { getObserver(obj: IObservable): IBindingTargetObserver };\n    };\n\n    if (descriptor) {\n      if (descriptor.get || descriptor.set) {\n        if (descriptor.get && descriptor.get.getObserver) {\n          return descriptor.get.getObserver(obj);\n        }\n\n        // attempt to use an adapter before resorting to dirty checking.\n        const adapterObserver = this.getAdapterObserver(obj, propertyName, descriptor);\n        if (adapterObserver) {\n          return adapterObserver;\n        }\n        if (isNode) {\n          // TODO: use MutationObserver\n          return this.dirtyChecker.createProperty(obj, propertyName);\n        }\n\n        return createComputedObserver(this, this.dirtyChecker, this.changeSet, obj, propertyName, descriptor);\n      }\n    }\n    return new SetterObserver(obj, propertyName);\n  }\n}\n\nexport function getCollectionObserver(changeSet: IChangeSet, collection: IObservedMap | IObservedSet | IObservedArray): CollectionObserver {\n  switch (toStringTag.call(collection)) {\n    case '[object Array]':\n      return getArrayObserver(changeSet, <IObservedArray>collection);\n    case '[object Map]':\n      return getMapObserver(changeSet, <IObservedMap>collection);\n    case '[object Set]':\n      return getSetObserver(changeSet, <IObservedSet>collection);\n  }\n  return null;\n}\n","import { inject, Reporter } from '@au-test/kernel';\nimport { Binding } from '../binding';\nimport { bindingBehavior } from '../binding-behavior';\nimport { IScope } from '../binding-context';\nimport { BindingFlags } from '../binding-flags';\nimport { BindingMode } from '../binding-mode';\nimport { CheckedObserver, SelectValueObserver, ValueAttributeObserver } from '../element-observation';\nimport { EventSubscriber, IEventSubscriber } from '../event-manager';\nimport { IObserverLocator } from '../observer-locator';\n\nexport type UpdateTriggerableObserver = ((ValueAttributeObserver & Required<ValueAttributeObserver>) | (CheckedObserver & Required<CheckedObserver>) | (SelectValueObserver & Required<SelectValueObserver>)) & {\n  originalHandler?: IEventSubscriber;\n};\n\nexport type UpdateTriggerableBinding = Binding & {\n  targetObserver: UpdateTriggerableObserver;\n};\n\n@bindingBehavior('updateTrigger')\n@inject(IObserverLocator)\nexport class UpdateTriggerBindingBehavior {\n  constructor(private observerLocator: IObserverLocator) {}\n\n  public bind(flags: BindingFlags, scope: IScope, binding: UpdateTriggerableBinding, ...events: string[]) {\n    if (events.length === 0) {\n      throw Reporter.error(9);\n    }\n\n    if (binding.mode !== BindingMode.twoWay && binding.mode !== BindingMode.fromView) {\n      throw Reporter.error(10);\n    }\n\n    // ensure the binding's target observer has been set.\n    const targetObserver = <UpdateTriggerableObserver>this.observerLocator.getObserver(binding.target, binding.targetProperty);\n    if (!targetObserver.handler) {\n      throw Reporter.error(10);\n    }\n\n    binding.targetObserver = targetObserver;\n\n    // stash the original element subscribe function.\n    targetObserver.originalHandler = binding.targetObserver.handler;\n\n    // replace the element subscribe function with one that uses the correct events.\n    targetObserver.handler = new EventSubscriber(events);\n  }\n\n  public unbind(flags: BindingFlags, scope: IScope, binding: UpdateTriggerableBinding) {\n    // restore the state of the binding.\n    binding.targetObserver.handler.dispose();\n    binding.targetObserver.handler = binding.targetObserver.originalHandler;\n    binding.targetObserver.originalHandler = null;\n  }\n}\n","import { IIndexable, IServiceLocator, Primitive } from '@au-test/kernel';\nimport { INode } from '../dom';\nimport { hasBind, hasUnbind, IsBindingBehavior, StrictAny } from './ast';\nimport { IScope } from './binding-context';\nimport { BindingFlags } from './binding-flags';\nimport { IConnectableBinding } from './connectable';\nimport { IAccessor } from './observation';\nimport { IObserverLocator } from './observer-locator';\n\nexport interface Call extends IConnectableBinding {}\nexport class Call {\n  public $isBound: boolean = false;\n  public $scope: IScope;\n\n  public targetObserver: IAccessor;\n\n  constructor(\n    public sourceExpression: IsBindingBehavior,\n    target: INode,\n    targetProperty: string,\n    observerLocator: IObserverLocator,\n    public locator: IServiceLocator) {\n    this.targetObserver = observerLocator.getObserver(target, targetProperty);\n  }\n\n  public callSource(args: IIndexable): Primitive | IIndexable {\n    const overrideContext = this.$scope.overrideContext;\n    Object.assign(overrideContext, args);\n    const result = this.sourceExpression.evaluate(BindingFlags.mustEvaluate, this.$scope, this.locator);\n\n    for (const prop in args) {\n      delete overrideContext[prop];\n    }\n\n    return result;\n  }\n\n  public $bind(flags: BindingFlags, scope: IScope): void {\n    if (this.$isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n\n      this.$unbind(flags);\n    }\n\n    this.$isBound = true;\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    this.targetObserver.setValue($args => this.callSource($args), flags);\n  }\n\n  public $unbind(flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n\n    this.$isBound = false;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n    this.targetObserver.setValue(null, flags);\n  }\n  // tslint:disable:no-empty no-any\n  public observeProperty(obj: StrictAny, propertyName: StrictAny): void { }\n  public handleChange(newValue: any, previousValue: any, flags: BindingFlags): void { }\n  // tslint:enable:no-empty no-any\n}\n","import { DI, PLATFORM, Reporter } from '@au-test/kernel';\nimport { AccessMember, AccessScope, CallMember, CallScope, ExpressionKind, ForOfStatement, Interpolation, IsBindingBehavior, PrimitiveLiteral } from './ast';\n\nexport interface IExpressionParser {\n  cache(expressions: Record<string, Interpolation | ForOfStatement | IsBindingBehavior>): void;\n  parse(expression: string, bindingType: BindingType.ForCommand): ForOfStatement;\n  parse(expression: string, bindingType: BindingType.Interpolation): Interpolation;\n  parse(expression: string, bindingType: Exclude<BindingType, BindingType.ForCommand | BindingType.Interpolation>): IsBindingBehavior;\n  parse(expression: string, bindingType: BindingType): Interpolation | ForOfStatement | IsBindingBehavior;\n}\n\nexport const IExpressionParser = DI.createInterface<IExpressionParser>()\n  .withDefault(x => x.singleton(ExpressionParser));\n\n/*@internal*/\nexport class ExpressionParser implements IExpressionParser {\n  private expressionLookup: Record<string, IsBindingBehavior>;\n  private interpolationLookup: Record<string, Interpolation>;\n  private forOfLookup: Record<string, ForOfStatement>;\n  constructor() {\n    this.expressionLookup = Object.create(null);\n    this.interpolationLookup = Object.create(null);\n    this.forOfLookup = Object.create(null);\n  }\n\n  public parse(expression: string, bindingType: BindingType.ForCommand): ForOfStatement;\n  public parse(expression: string, bindingType: BindingType.Interpolation): Interpolation;\n  public parse(expression: string, bindingType: Exclude<BindingType, BindingType.ForCommand | BindingType.Interpolation>): IsBindingBehavior;\n  public parse(expression: string, bindingType: BindingType): Interpolation | ForOfStatement | IsBindingBehavior {\n    switch (bindingType) {\n      case BindingType.Interpolation:\n      {\n        let found = this.interpolationLookup[expression];\n        if (found === undefined) {\n          found = this.interpolationLookup[expression] = this.parseCore(expression, bindingType);\n        }\n        return found;\n      }\n      case BindingType.ForCommand:\n      {\n        let found = this.forOfLookup[expression];\n        if (found === undefined) {\n          found = this.forOfLookup[expression] = this.parseCore(expression, bindingType);\n        }\n        return found;\n      }\n      default:\n      {\n        // Allow empty strings for normal bindings and those that are empty by default (such as a custom attribute without an equals sign)\n        // But don't cache it, because empty strings are always invalid for any other type of binding\n        if (expression.length === 0 && (bindingType & (BindingType.BindCommand | BindingType.OneTimeCommand | BindingType.ToViewCommand))) {\n          return PrimitiveLiteral.$empty;\n        }\n        let found = this.expressionLookup[expression];\n        if (found === undefined) {\n          found = this.expressionLookup[expression] = this.parseCore(expression, bindingType);\n        }\n        return found;\n      }\n    }\n  }\n\n  public cache(expressions: Record<string, Interpolation | ForOfStatement | IsBindingBehavior>): void {\n    const { forOfLookup, expressionLookup, interpolationLookup } = this;\n    for (const expression in expressions) {\n      const expr = expressions[expression];\n      switch (expr.$kind) {\n        case ExpressionKind.Interpolation:\n          interpolationLookup[expression] = expr;\n          break;\n        case ExpressionKind.ForOfStatement:\n          forOfLookup[expression] = expr;\n          break;\n        default:\n          expressionLookup[expression] = expr;\n      }\n    }\n  }\n\n  private parseCore(expression: string, bindingType: BindingType.ForCommand): ForOfStatement;\n  private parseCore(expression: string, bindingType: BindingType.Interpolation): Interpolation;\n  private parseCore(expression: string, bindingType: Exclude<BindingType, BindingType.ForCommand | BindingType.Interpolation>): IsBindingBehavior;\n  private parseCore(expression: string, bindingType: BindingType): Interpolation | ForOfStatement | IsBindingBehavior {\n    try {\n      const parts = expression.split('.');\n      const firstPart = parts[0];\n      let current: Interpolation | ForOfStatement | IsBindingBehavior;\n\n      if (firstPart.endsWith('()')) {\n        current = new CallScope(firstPart.replace('()', ''), PLATFORM.emptyArray);\n      } else {\n        current = new AccessScope(parts[0]);\n      }\n\n      let index = 1;\n\n      while (index < parts.length) {\n        const currentPart = parts[index];\n\n        if (currentPart.endsWith('()')) {\n          current = new CallMember(current, currentPart.replace('()', ''), PLATFORM.emptyArray);\n        } else {\n          current = new AccessMember(current, parts[index]);\n        }\n\n        index++;\n      }\n\n      return current;\n    } catch (e) {\n      throw Reporter.error(3, e);\n    }\n  }\n}\n\nexport const enum BindingType {\n              None = 0,\n     Interpolation = 0b10000000_0000,\n        IsRef      = 0b01010000_0000,\n        IsIterator = 0b00100000_0000,\n        IsCustom   = 0b00010000_0000,\n        IsFunction = 0b00001000_0000,\n        IsEvent    = 0b00000100_0000,\n        IsProperty = 0b00000010_0000,\n        IsCommand  = 0b00000001_0000,\nIsPropertyCommand  = 0b00000011_0000,\n   IsEventCommand  = 0b00000101_0000,\nDelegationStrategyDelta =     0b0110,\n           Command =          0b1111,\n    OneTimeCommand = 0b00000011_0001,\n     ToViewCommand = 0b00000011_0010,\n   FromViewCommand = 0b00000011_0011,\n     TwoWayCommand = 0b00000011_0100,\n       BindCommand = 0b00000011_0101,\n    TriggerCommand = 0b00000101_0110,\n    CaptureCommand = 0b00000101_0111,\n   DelegateCommand = 0b00000101_1000,\n       CallCommand = 0b00001001_1001,\n    OptionsCommand = 0b00000001_1010,\n        ForCommand = 0b00100001_1011,\n     CustomCommand = 0b00010001_1100\n}\n","import { IDisposable, IServiceLocator } from '@au-test/kernel';\nimport { INode } from '../dom';\nimport { hasBind, hasUnbind, IsBindingBehavior, StrictAny } from './ast';\nimport { IBinding } from './binding';\nimport { IScope } from './binding-context';\nimport { BindingFlags } from './binding-flags';\nimport { IConnectableBinding } from './connectable';\nimport { DelegationStrategy, IEventManager } from './event-manager';\n\nexport interface Listener extends IConnectableBinding {}\nexport class Listener implements IBinding {\n  public $isBound: boolean = false;\n  public $scope: IScope;\n\n  private handler: IDisposable;\n\n  constructor(\n    public targetEvent: string,\n    public delegationStrategy: DelegationStrategy,\n    public sourceExpression: IsBindingBehavior,\n    public target: INode,\n    public preventDefault: boolean,\n    private eventManager: IEventManager,\n    public locator: IServiceLocator\n  ) { }\n\n  public callSource(event: Event): ReturnType<IsBindingBehavior['evaluate']> {\n    const overrideContext = this.$scope.overrideContext;\n    overrideContext['$event'] = event;\n\n    const result = this.sourceExpression.evaluate(BindingFlags.mustEvaluate, this.$scope, this.locator);\n\n    delete overrideContext['$event'];\n\n    if (result !== true && this.preventDefault) {\n      event.preventDefault();\n    }\n\n    return result;\n  }\n\n  public handleEvent(event: Event): void {\n    this.callSource(event);\n  }\n\n  public $bind(flags: BindingFlags, scope: IScope): void {\n    if (this.$isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n\n      this.$unbind(flags);\n    }\n\n    this.$isBound = true;\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    this.handler = this.eventManager.addEventListener(\n      this.target,\n      this.targetEvent,\n      this,\n      this.delegationStrategy\n    );\n  }\n\n  public $unbind(flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n\n    this.$isBound = false;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n    this.handler.dispose();\n    this.handler = null;\n  }\n  // tslint:disable:no-empty no-any\n  public observeProperty(obj: StrictAny, propertyName: StrictAny): void { }\n  public handleChange(newValue: any, previousValue: any, flags: BindingFlags): void { }\n  // tslint:enable:no-empty no-any\n}\n","import { IServiceLocator } from '@au-test/kernel';\nimport { hasBind, hasUnbind, IsBindingBehavior, StrictAny } from './ast';\nimport { IBinding, IBindingTarget } from './binding';\nimport { IScope } from './binding-context';\nimport { BindingFlags } from './binding-flags';\nimport { IConnectableBinding } from './connectable';\n\nexport interface Ref extends IConnectableBinding {}\nexport class Ref implements IBinding {\n  public $isBound: boolean = false;\n  public $scope: IScope;\n\n  constructor(\n    public sourceExpression: IsBindingBehavior,\n    public target: IBindingTarget,\n    public locator: IServiceLocator) {\n  }\n\n  public $bind(flags: BindingFlags, scope: IScope): void {\n    if (this.$isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n\n      this.$unbind(flags);\n    }\n\n    this.$isBound = true;\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    this.sourceExpression.assign(flags, this.$scope, this.locator, this.target);\n  }\n\n  public $unbind(flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n\n    this.$isBound = false;\n\n    if (this.sourceExpression.evaluate(flags, this.$scope, this.locator) === this.target) {\n      this.sourceExpression.assign(flags, this.$scope, this.locator, null);\n    }\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n  }\n  // tslint:disable:no-empty no-any\n  public observeProperty(obj: StrictAny, propertyName: StrictAny): void { }\n  public handleChange(newValue: any, previousValue: any, flags: BindingFlags): void { }\n  // tslint:enable:no-empty no-any\n}\n","import { Omit, PLATFORM } from '@au-test/kernel';\nimport { BindingMode } from '../binding/binding-mode';\n\nexport type BindableSource = Omit<IBindableDescription, 'property'>;\n\nexport interface IBindableDescription {\n  mode?: BindingMode;\n  callback?: string;\n  attribute?: string;\n  property?: string;\n}\n\n/**\n * Decorator: Specifies custom behavior for a bindable property.\n * @param configOrTarget The overrides.\n */\nexport function bindable(configOrTarget?: BindableSource | Object, key?, descriptor?): any {\n  let deco = function(target, key2, descriptor2) {\n    target = target.constructor;\n\n    let bindables: Record<string, IBindableDescription> = target.bindables || (target.bindables = {});\n    let config: IBindableDescription = configOrTarget || {};\n\n    if (!config.attribute) {\n      config.attribute = PLATFORM.kebabCase(key2);\n    }\n\n    if (!config.callback) {\n      config.callback = `${key2}Changed`;\n    }\n\n    if (!config.mode) {\n      config.mode = BindingMode.toView;\n    }\n\n    config.property = key2;\n    bindables[key2] = config;\n  };\n\n  if (key) { //placed on a property without parens\n    var target = configOrTarget;\n    configOrTarget = null; //ensure that the closure captures the fact that there's actually no config\n    return deco(target, key, descriptor);\n  }\n\n  return deco;\n}\n","// tslint:disable:no-reserved-keywords\nimport { DI, Immutable } from '@au-test/kernel';\nimport { ForOfStatement, Interpolation, IsBindingBehavior } from '../binding/ast';\nimport { BindingMode } from '../binding/binding-mode';\nimport { DelegationStrategy } from '../binding/event-manager';\nimport { INode } from '../dom';\nimport { ResourceDescription } from '../resource';\nimport { IBindableDescription } from './bindable';\n\nexport const enum TargetedInstructionType {\n  textBinding = 'a',\n  interpolation = 'b',\n  propertyBinding = 'c',\n  iteratorBinding = 'd',\n  listenerBinding = 'e',\n  callBinding = 'f',\n  refBinding = 'g',\n  stylePropertyBinding = 'h',\n  setProperty = 'i',\n  setAttribute = 'j',\n  hydrateElement = 'k',\n  hydrateAttribute = 'l',\n  hydrateTemplateController = 'm',\n  letElement = 'n',\n  letBinding = 'o',\n  renderStrategy = 'z',\n}\n\nconst instructionTypeValues = 'abcdefghijkl';\n\nexport interface IBuildInstruction {\n  required: boolean;\n  compiler?: string;\n}\n\nexport interface ITemplateSource {\n  name?: string;\n  cache?: '*' | number;\n  templateOrNode?: string | INode;\n  instructions?: TargetedInstruction[][];\n  dependencies?: any[];\n  build?: IBuildInstruction;\n  surrogates?: TargetedInstruction[];\n  bindables?: Record<string, IBindableDescription>;\n  containerless?: boolean;\n  shadowOptions?: ShadowRootInit;\n  hasSlots?: boolean;\n}\n\nexport type TemplateDefinition = ResourceDescription<ITemplateSource>;\nexport type TemplatePartDefinitions = Record<string, Immutable<ITemplateSource>>;\nexport type BindableDefinitions = Record<string, Immutable<IBindableDescription>>;\n\nexport const ITargetedInstruction = DI.createInterface<ITargetedInstruction>();\nexport interface ITargetedInstruction {\n  type: TargetedInstructionType;\n}\n\nexport type TargetedInstruction =\n  ITextBindingInstruction |\n  IInterpolationInstruction |\n  IPropertyBindingInstruction |\n  IIteratorBindingInstruction |\n  IListenerBindingInstruction |\n  ICallBindingInstruction |\n  IRefBindingInstruction |\n  IStylePropertyBindingInstruction |\n  ISetPropertyInstruction |\n  ISetAttributeInstruction |\n  IHydrateElementInstruction |\n  IHydrateAttributeInstruction |\n  IHydrateTemplateController |\n  IRenderStrategyInstruction |\n  ILetElementInstruction;\n\nexport function isTargetedInstruction(value: any): value is TargetedInstruction {\n  const type = value.type;\n  return typeof type === 'string' && instructionTypeValues.indexOf(type) !== -1;\n}\n\nexport interface ITextBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.textBinding;\n  srcOrExpr: string | Interpolation;\n}\n\nexport interface IInterpolationInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.interpolation;\n  srcOrExpr: string | Interpolation;\n  dest: string;\n}\n\nexport interface IInterpolationInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.interpolation;\n  srcOrExpr: string | Interpolation;\n  dest: string;\n}\n\nexport interface IPropertyBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.propertyBinding;\n  mode: BindingMode;\n  srcOrExpr: string | IsBindingBehavior;\n  dest: string;\n  oneTime?: boolean;\n}\n\nexport interface IIteratorBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.iteratorBinding;\n  srcOrExpr: string | ForOfStatement;\n  dest: string;\n}\n\nexport interface IListenerBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.listenerBinding;\n  srcOrExpr: string | IsBindingBehavior;\n  dest: string;\n  strategy: DelegationStrategy;\n  preventDefault: boolean;\n}\n\nexport interface ICallBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.callBinding;\n  srcOrExpr: string | IsBindingBehavior;\n  dest: string;\n}\n\nexport interface IRefBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.refBinding;\n  srcOrExpr: string | IsBindingBehavior;\n}\n\nexport interface IStylePropertyBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.stylePropertyBinding;\n  srcOrExpr: string | IsBindingBehavior;\n  dest: string;\n}\n\nexport interface ISetPropertyInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.setProperty;\n  value: any;\n  dest: string;\n}\n\nexport interface ISetAttributeInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.setAttribute;\n  value: any;\n  dest: string;\n}\n\nexport interface IHydrateElementInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateElement;\n  res: any;\n  instructions: TargetedInstruction[];\n  parts?: Record<string, ITemplateSource>;\n}\n\nexport interface IHydrateAttributeInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateAttribute;\n  res: any;\n  instructions: TargetedInstruction[];\n}\n\nexport interface IHydrateTemplateController extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateTemplateController;\n  res: any;\n  instructions: TargetedInstruction[];\n  src: ITemplateSource;\n  link?: boolean;\n}\n\nexport interface IRenderStrategyInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.renderStrategy;\n  name: string;\n}\n\nexport interface ILetElementInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.letElement;\n  instructions: ILetBindingInstruction[];\n  toViewModel: boolean;\n}\n\nexport interface ILetBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.letBinding;\n  srcOrExpr: string | IsBindingBehavior | Interpolation;\n  dest: string;\n}\n","import { Constructable, PLATFORM } from '@au-test/kernel';\nimport { DOM, INode } from '../dom';\nimport { ICustomElementType } from './custom-element';\nimport {\n  isTargetedInstruction,\n  TargetedInstruction,\n  TargetedInstructionType,\n  TemplateDefinition\n} from './instructions';\nimport { IRenderContext } from './render-context';\nimport { IRenderingEngine } from './rendering-engine';\nimport { ITemplate } from './template';\nimport { IView, IViewFactory } from './view';\n\ntype ChildType = PotentialRenderable | string | INode;\n\nexport function createElement(tagOrType: string | Constructable, props?: any, children?: ArrayLike<ChildType>): PotentialRenderable {\n  if (typeof tagOrType === 'string') {\n    return createElementForTag(tagOrType, props, children);\n  } else {\n    return createElementForType(tagOrType as ICustomElementType, props, children);\n  }\n}\n\nexport class PotentialRenderable {\n  private lazyDefinition: TemplateDefinition;\n\n  constructor(\n    private readonly node: INode,\n    private readonly instructions: TargetedInstruction[][],\n    private readonly dependencies: ReadonlyArray<any>\n  ) {}\n\n  public get definition(): TemplateDefinition {\n    return this.lazyDefinition || (this.lazyDefinition = {\n      name: 'unnamed',\n      templateOrNode: this.node,\n      cache: 0,\n      build: typeof this.node === 'string' ? {\n        required: true,\n        compiler: 'default'\n      } : {\n        required: false\n      },\n      dependencies: this.dependencies,\n      instructions: this.instructions,\n      bindables: {},\n      containerless: false,\n      hasSlots: false,\n      shadowOptions: null,\n      surrogates: PLATFORM.emptyArray\n    });\n  }\n\n  public getElementTemplate(engine: IRenderingEngine, type?: ICustomElementType): ITemplate {\n    return engine.getElementTemplate(this.definition, type);\n  }\n\n  public createView(engine: IRenderingEngine, parentContext?: IRenderContext): IView {\n    return this.getViewFactory(engine, parentContext).create();\n  }\n\n  public getViewFactory(engine: IRenderingEngine, parentContext?: IRenderContext): IViewFactory {\n    return engine.getViewFactory(this.definition, parentContext);\n  }\n\n  /*@internal*/\n  public mergeInto(parent: INode, instructions: TargetedInstruction[][], dependencies: any[]): void {\n    DOM.appendChild(parent, this.node);\n    instructions.push(...this.instructions);\n    dependencies.push(...this.dependencies);\n  }\n}\n\nfunction createElementForTag(tagName: string, props?: any, children?: ArrayLike<ChildType>): PotentialRenderable {\n  const instructions: TargetedInstruction[] = [];\n  const allInstructions = [];\n  const dependencies = [];\n  const element = DOM.createElement(tagName);\n  let hasInstructions = false;\n\n  if (props) {\n    Object.keys(props)\n      .forEach(dest => {\n        const value = props[dest];\n\n        if (isTargetedInstruction(value)) {\n          hasInstructions = true;\n          instructions.push(value);\n        } else {\n          DOM.setAttribute(element, dest, value);\n        }\n      });\n  }\n\n  if (hasInstructions) {\n    DOM.setAttribute(element, 'class', 'au');\n    allInstructions.push(instructions);\n  }\n\n  if (children) {\n    addChildren(element, children, allInstructions, dependencies);\n  }\n\n  return new PotentialRenderable(element, allInstructions, dependencies);\n}\n\nfunction createElementForType(Type: ICustomElementType, props?: any, children?: ArrayLike<ChildType>): PotentialRenderable {\n  const tagName = Type.description.name;\n  const instructions: TargetedInstruction[] = [];\n  const allInstructions = [instructions];\n  const dependencies = [];\n  const childInstructions = [];\n  const bindables = Type.description.bindables;\n  const element = DOM.createElement(tagName);\n\n  DOM.setAttribute(element, 'class', 'au');\n\n  if (!dependencies.includes(Type)) {\n    dependencies.push(Type);\n  }\n\n  instructions.push({\n    type: TargetedInstructionType.hydrateElement,\n    res: tagName,\n    instructions: childInstructions\n  });\n\n  if (props) {\n    Object.keys(props)\n      .forEach(dest => {\n        const value = props[dest];\n\n        if (isTargetedInstruction(value)) {\n          childInstructions.push(value);\n        } else {\n          const bindable = bindables[dest];\n\n          if (bindable) {\n            childInstructions.push({\n              type: TargetedInstructionType.setProperty,\n              dest,\n              value\n            });\n          } else {\n            childInstructions.push({\n              type: TargetedInstructionType.setAttribute,\n              dest,\n              value\n            });\n          }\n        }\n      });\n  }\n\n  if (children) {\n    addChildren(element, children, allInstructions, dependencies);\n  }\n\n  return new PotentialRenderable(element, allInstructions, dependencies);\n}\n\nfunction addChildren(parent: INode, children: ArrayLike<ChildType>, allInstructions: TargetedInstruction[][], dependencies: any[]): void {\n  for (let i = 0, ii = children.length; i < ii; ++i) {\n    const current = children[i];\n\n    if (typeof current === 'string') {\n      DOM.appendChild(parent, DOM.createText(current));\n    } else if (DOM.isNodeInstance(current)) {\n      DOM.appendChild(parent, current);\n    } else {\n      current.mergeInto(parent, allInstructions, dependencies);\n    }\n  }\n}\n","import {\n  Constructable,\n  IContainer,\n  Immutable,\n  Omit,\n  PLATFORM,\n  Registration,\n  Reporter,\n  Writable\n} from '@au-test/kernel';\nimport { BindingContext, Scope } from '../binding/binding-context';\nimport { BindingFlags } from '../binding/binding-flags';\nimport { DOM, ICustomElementHost, INode, INodeSequence, IRenderLocation } from '../dom';\nimport { IResourceKind, IResourceType } from '../resource';\nimport { IHydrateElementInstruction, ITemplateSource, TemplateDefinition } from './instructions';\nimport { IAttach, IAttachLifecycle, IDetachLifecycle, ILifecycleHooks } from './lifecycle';\nimport { IRenderable } from './renderable';\nimport { IRenderingEngine } from './rendering-engine';\nimport { IRuntimeBehavior } from './runtime-behavior';\nimport { ITemplate } from './template';\n\nexport interface ICustomElementType extends IResourceType<ITemplateSource, ICustomElement>, Immutable<Pick<Partial<ITemplateSource>, 'containerless' | 'shadowOptions' | 'bindables'>> { }\n\nexport type IElementHydrationOptions = Immutable<Pick<IHydrateElementInstruction, 'parts'>>;\n\nexport interface IBindSelf {\n  readonly $isBound: boolean;\n  $bind(flags: BindingFlags): void;\n  $unbind(flags: BindingFlags): void;\n}\n\nexport interface ICustomElement extends IBindSelf, IAttach, Omit<ILifecycleHooks, Exclude<keyof IRenderable, '$addNodes' | '$removeNodes'>>, Readonly<IRenderable> {\n  readonly $projector: IElementProjector;\n  $hydrate(renderingEngine: IRenderingEngine, host: INode, options?: IElementHydrationOptions): void;\n}\n\nexport type ElementDefinition = Immutable<Required<ITemplateSource>> | null;\n\n/*@internal*/\nexport interface IInternalCustomElementImplementation extends Writable<ICustomElement> {\n  $behavior: IRuntimeBehavior;\n}\n\n/**\n * Decorator: Indicates that the decorated class is a custom element.\n */\n// tslint:disable-next-line:no-any\nexport function customElement(nameOrSource: string | ITemplateSource): any {\n  return function<T extends Constructable>(target: T): T {\n    return CustomElementResource.define(nameOrSource, target);\n  };\n}\n\nconst defaultShadowOptions = {\n  mode: 'open' as 'open' | 'closed'\n};\n\n/**\n * Decorator: Indicates that the custom element should render its view in Shadow\n * DOM.\n */\n// tslint:disable-next-line:no-any\nexport function useShadowDOM(targetOrOptions?: any): any {\n  const options = typeof targetOrOptions === 'function' || !targetOrOptions\n    ? defaultShadowOptions\n    : targetOrOptions;\n\n  const deco = function<T extends Constructable>(target: T): T {\n    (target as Writable<Partial<ICustomElementType>>).shadowOptions = options;\n    return target;\n  };\n\n  return typeof targetOrOptions === 'function' ? deco(targetOrOptions) : deco;\n}\n\n/**\n * Decorator: Indicates that the custom element should be rendered without its\n * element container.\n */\n// tslint:disable-next-line:no-any\nexport function containerless(maybeTarget?: any): any {\n  const deco = function<T extends Constructable>(target: T): T {\n    (target as Writable<Partial<ICustomElementType>>).containerless = true;\n    return target;\n  };\n\n  return maybeTarget ? deco(maybeTarget) : deco;\n}\n\nexport interface ICustomElementResource extends IResourceKind<ITemplateSource, ICustomElementType> {\n  behaviorFor(node: INode): ICustomElement | null;\n}\n\nexport const CustomElementResource: ICustomElementResource = {\n  name: 'custom-element',\n\n  keyFrom(name: string): string {\n    return `${this.name}:${name}`;\n  },\n\n  isType<T extends Constructable & Partial<ICustomElementType>>(Type: T): Type is T & ICustomElementType {\n    return Type.kind === this;\n  },\n\n  behaviorFor(node: ICustomElementHost): ICustomElement | null {\n    return node.$customElement || null;\n  },\n\n  define<T extends Constructable>(nameOrSource: string | ITemplateSource, ctor: T = null): T & ICustomElementType {\n    const Type = (ctor === null ? class HTMLOnlyElement { /* HTML Only */ } : ctor) as T & ICustomElementType;\n    const description = createCustomElementDescription(typeof nameOrSource === 'string' ? { name: nameOrSource } : nameOrSource, Type);\n    const proto: ICustomElement = Type.prototype;\n\n    (Type as Writable<ICustomElementType>).kind = CustomElementResource;\n    (Type as Writable<ICustomElementType>).description = description;\n    Type.register = register;\n\n    proto.$hydrate = hydrate;\n    proto.$bind = bind;\n    proto.$attach = attach;\n    proto.$detach = detach;\n    proto.$unbind = unbind;\n    proto.$cache = cache;\n    (proto as Writable<IRenderable>).$addNodes = addNodes;\n    (proto as Writable<IRenderable>).$removeNodes = removeNodes;\n\n    return Type;\n  }\n};\n\nfunction register(this: ICustomElementType, container: IContainer): void {\n  container.register(\n    Registration.transient(\n      CustomElementResource.keyFrom(this.description.name),\n      this\n    )\n  );\n}\n\nfunction hydrate(this: IInternalCustomElementImplementation, renderingEngine: IRenderingEngine, host: INode, options: IElementHydrationOptions = PLATFORM.emptyObject): void {\n  const Type = this.constructor as ICustomElementType;\n  const description = Type.description;\n\n  this.$bindables = [];\n  this.$attachables = [];\n  this.$isAttached = false;\n  this.$isBound = false;\n  this.$scope = Scope.create(this, null); // TODO: get the parent from somewhere?\n  this.$projector = determineProjector(this, host, description);\n\n  renderingEngine.applyRuntimeBehavior(Type, this);\n\n  let template: ITemplate;\n\n  if (this.$behavior.hasRender) {\n    const result = this.render(host, options.parts);\n\n    if ('getElementTemplate' in result) {\n      template = result.getElementTemplate(renderingEngine, Type);\n    } else {\n      this.$nodes = result;\n    }\n  } else {\n    template = renderingEngine.getElementTemplate(description, Type);\n  }\n\n  if (template) {\n    this.$context = template.renderContext;\n    this.$nodes = template.createFor(this, host, options.parts);\n  }\n\n  if (this.$behavior.hasCreated) {\n    this.created();\n  }\n}\n\nfunction bind(this: IInternalCustomElementImplementation, flags: BindingFlags): void {\n  if (this.$isBound) {\n    return;\n  }\n\n  const behavior = this.$behavior;\n\n  if (behavior.hasBinding) {\n    this.binding(flags | BindingFlags.fromBind);\n  }\n\n  const scope = this.$scope;\n  const bindables = this.$bindables;\n\n  for (let i = 0, ii = bindables.length; i < ii; ++i) {\n    bindables[i].$bind(flags | BindingFlags.fromBind, scope);\n  }\n\n  this.$isBound = true;\n\n  if (behavior.hasBound) {\n    this.bound(flags | BindingFlags.fromBind);\n  }\n}\n\nfunction unbind(this: IInternalCustomElementImplementation, flags: BindingFlags): void {\n  if (this.$isBound) {\n    const behavior = this.$behavior;\n\n    if (behavior.hasUnbinding) {\n      this.unbinding(flags | BindingFlags.fromUnbind);\n    }\n\n    const bindables = this.$bindables;\n    let i = bindables.length;\n\n    while (i--) {\n      bindables[i].$unbind(flags | BindingFlags.fromUnbind);\n    }\n\n    this.$isBound = false;\n\n    if (behavior.hasUnbound) {\n      this.unbound(flags | BindingFlags.fromUnbind);\n    }\n  }\n}\n\nfunction attach(this: IInternalCustomElementImplementation, encapsulationSource: INode, lifecycle: IAttachLifecycle): void {\n  if (this.$isAttached) {\n    return;\n  }\n\n  encapsulationSource = this.$projector.provideEncapsulationSource(encapsulationSource);\n\n  if (this.$behavior.hasAttaching) {\n    this.attaching(encapsulationSource, lifecycle);\n  }\n\n  const attachables = this.$attachables;\n\n  for (let i = 0, ii = attachables.length; i < ii; ++i) {\n    attachables[i].$attach(encapsulationSource, lifecycle);\n  }\n\n  lifecycle.queueAddNodes(this);\n  this.$isAttached = true;\n\n  if (this.$behavior.hasAttached) {\n    lifecycle.queueAttachedCallback(<Required<typeof this>>this);\n  }\n}\n\nfunction detach(this: IInternalCustomElementImplementation, lifecycle: IDetachLifecycle): void {\n  if (this.$isAttached) {\n    if (this.$behavior.hasDetaching) {\n      this.detaching(lifecycle);\n    }\n\n    lifecycle.queueRemoveNodes(this);\n\n    const attachables = this.$attachables;\n    let i = attachables.length;\n\n    while (i--) {\n      attachables[i].$detach(lifecycle);\n    }\n\n    this.$isAttached = false;\n\n    if (this.$behavior.hasDetached) {\n      lifecycle.queueDetachedCallback(<Required<typeof this>>this);\n    }\n  }\n}\n\nfunction cache(this: IInternalCustomElementImplementation): void {\n  if (this.$behavior.hasCaching) {\n    this.caching();\n  }\n\n  const attachables = this.$attachables;\n  let i = attachables.length;\n\n  while (i--) {\n    attachables[i].$cache();\n  }\n}\n\nfunction addNodes(this: IInternalCustomElementImplementation): void {\n  this.$projector.project(this.$nodes);\n}\n\nfunction removeNodes(this: IInternalCustomElementImplementation): void {\n  this.$projector.onElementRemoved();\n}\n\n/*@internal*/\nexport function createCustomElementDescription(templateSource: ITemplateSource, Type: ICustomElementType): TemplateDefinition {\n  return {\n    name: templateSource.name || 'unnamed',\n    templateOrNode: templateSource.templateOrNode || null,\n    cache: 0,\n    build: templateSource.build || {\n      required: false,\n      compiler: 'default'\n    },\n    bindables: {...Type.bindables, ...templateSource.bindables},\n    instructions: templateSource.instructions ? PLATFORM.toArray(templateSource.instructions) : PLATFORM.emptyArray,\n    dependencies: templateSource.dependencies ? PLATFORM.toArray(templateSource.dependencies) : PLATFORM.emptyArray,\n    surrogates: templateSource.surrogates ? PLATFORM.toArray(templateSource.surrogates) : PLATFORM.emptyArray,\n    containerless: templateSource.containerless || Type.containerless || false,\n    shadowOptions: templateSource.shadowOptions || Type.shadowOptions || null,\n    hasSlots: templateSource.hasSlots || false\n  };\n}\n\nexport interface IElementProjector {\n  readonly host: ICustomElementHost;\n  readonly children: ArrayLike<ICustomElementHost>;\n\n  provideEncapsulationSource(parentEncapsulationSource: ICustomElementHost): ICustomElementHost;\n  project(nodes: INodeSequence): void;\n\n  subscribeToChildrenChange(callback: () => void): void;\n\n  /*@internal*/\n  onElementRemoved(): void;\n}\n\nfunction determineProjector(\n  $customElement: ICustomElement,\n  host: ICustomElementHost,\n  definition: TemplateDefinition\n): IElementProjector {\n  if (definition.shadowOptions || definition.hasSlots) {\n    if (definition.containerless) {\n      throw Reporter.error(21);\n    }\n\n    return new ShadowDOMProjector($customElement, host, definition);\n  }\n\n  if (definition.containerless) {\n    return new ContainerlessProjector($customElement, host);\n  }\n\n  return new HostProjector($customElement, host);\n}\n\nconst childObserverOptions = { childList: true };\n\nexport class ShadowDOMProjector implements IElementProjector {\n  public shadowRoot: ICustomElementHost;\n\n  constructor(\n    $customElement: ICustomElement,\n    public host: ICustomElementHost,\n    definition: TemplateDefinition\n  ) {\n    this.shadowRoot = DOM.attachShadow(host, definition.shadowOptions || defaultShadowOptions);\n    host.$customElement = $customElement;\n    this.shadowRoot.$customElement = $customElement;\n  }\n\n  get children(): ArrayLike<INode> {\n    return this.host.childNodes;\n  }\n\n  public subscribeToChildrenChange(callback: () => void): void {\n    DOM.createNodeObserver(this.host, callback, childObserverOptions);\n  }\n\n  public provideEncapsulationSource(parentEncapsulationSource: INode): INode {\n    return this.shadowRoot;\n  }\n\n  public project(nodes: INodeSequence): void {\n    nodes.appendTo(this.host);\n    this.project = PLATFORM.noop;\n  }\n\n  public onElementRemoved(): void {\n    // No special behavior is required because the host element removal\n    // will result in the projected nodes being removed, since they are in\n    // the ShadowDOM.\n  }\n}\n\nexport class ContainerlessProjector implements IElementProjector {\n  public host: IRenderLocation;\n  private childNodes: ArrayLike<INode>;\n  private requiresMount: boolean = true;\n\n  constructor(private $customElement: ICustomElement, host: ICustomElementHost) {\n    if (host.childNodes.length) {\n      this.childNodes = PLATFORM.toArray(host.childNodes);\n    } else {\n      this.childNodes = PLATFORM.emptyArray;\n    }\n\n    this.host = DOM.convertToRenderLocation(host);\n    this.host.$customElement = $customElement;\n  }\n\n  get children(): ArrayLike<INode> {\n    return this.childNodes;\n  }\n\n  public subscribeToChildrenChange(callback: () => void): void {\n    // Do nothing since this scenario will never have children.\n  }\n\n  public provideEncapsulationSource(parentEncapsulationSource: INode): INode {\n    if (!parentEncapsulationSource) {\n      throw Reporter.error(22);\n    }\n\n    return parentEncapsulationSource;\n  }\n\n  public project(nodes: INodeSequence): void {\n    if (this.requiresMount) {\n      this.requiresMount = false;\n      nodes.insertBefore(this.host);\n    }\n  }\n\n  public onElementRemoved(): void {\n    this.requiresMount = true;\n    this.$customElement.$nodes.remove();\n  }\n}\n\nexport class HostProjector implements IElementProjector {\n  constructor($customElement: ICustomElement, public host: ICustomElementHost) {\n    host.$customElement = $customElement;\n  }\n\n  get children(): ArrayLike<INode> {\n    return PLATFORM.emptyArray;\n  }\n\n  public subscribeToChildrenChange(callback: () => void): void {\n    // Do nothing since this scenario will never have children.\n  }\n\n  public provideEncapsulationSource(parentEncapsulationSource: INode): INode {\n    return parentEncapsulationSource || this.host;\n  }\n\n  public project(nodes: INodeSequence): void {\n    nodes.appendTo(this.host);\n    this.project = PLATFORM.noop;\n  }\n\n  public onElementRemoved(): void {\n    // No special behavior is required because the host element removal\n    // will result in the projected nodes being removed, since they are children.\n  }\n}\n\n// TODO\n// ## DefaultSlotProjector\n// An implementation of IElementProjector that can handle a subset of default\n// slot projection scenarios without needing real Shadow DOM.\n// ### Conditions\n// We can do a one-time, static composition of the content and view,\n// to emulate shadow DOM, if the following constraints are met:\n// * There must be exactly one slot and it must be a default slot.\n// * The default slot must not have any fallback content.\n// * The default slot must not have a custom element as its immediate parent or\n//   a slot attribute (re-projection).\n// ### Projection\n// The projector copies all content nodes to the slot's location.\n// The copy process should inject a comment node before and after the slotted\n// content, so that the bounds of the content can be clearly determined,\n// even if the slotted content has template controllers or string interpolation.\n// ### Encapsulation Source\n// Uses the same strategy as HostProjector.\n// ### Children\n// The projector adds a mutation observer to the parent node of the\n// slot comment. When direct children of that node change, the projector\n// will gather up all nodes between the start and end slot comments.\n","/**\n */\nimport { DI } from '@au-test/kernel';\nimport { IScope } from '../binding/binding-context';\nimport { IBindScope } from '../binding/observation';\nimport { INodeSequence } from '../dom';\nimport { IAttach } from './lifecycle';\nimport { IRenderContext } from './render-context';\n\nexport const IRenderable = DI.createInterface<IRenderable>().noDefault();\n\n/**\n * An object containing the necessary information to render something for display.\n */\nexport interface IRenderable {\n  /**\n   * The (dependency) context of this instance.\n   *\n   * Contains any dependencies required by this instance or its children.\n   */\n  readonly $context: IRenderContext;\n\n  /**\n   * The nodes that represent the visible aspect of this instance.\n   *\n   * Typically this will be a sequence of `DOM` nodes contained in a `DocumentFragment`\n   */\n  readonly $nodes: INodeSequence;\n\n  /**\n   * The binding scope that the `$bindables` of this instance will be bound to.\n   *\n   * This includes the `BindingContext` which can be either a user-defined view model instance, or a synthetic view model instantiated by a `templateController`\n   */\n  readonly $scope: IScope;\n\n  /**\n   * Indicates whether the `$scope` is bound to the `$bindables`\n   */\n  readonly $isBound: boolean;\n\n  /**\n   * The Bindings, Views, CustomElements, CustomAttributes and other bindable components that belong to this instance.\n   */\n  readonly $bindables: IBindScope[];\n\n  /**\n   * Indicates whether the `$attachables` are currently attached to the `DOM`.\n   */\n  readonly $isAttached: boolean;\n\n  /**\n   * The Views, CustomElements, CustomAttributes and other attachable components that belong to this instance.\n   */\n  readonly $attachables: IAttach[];\n\n  /**\n   * Add the `$nodes` of this instance to the Host or RenderLocation that this instance is attached to.\n   */\n  $addNodes(): void;\n\n  /**\n   * Remove the `$nodes` of this instance from the Host or RenderLocation that this instance is attached to, optionally returning them to a cache.\n   */\n  $removeNodes(): void;\n}\n","import { IServiceLocator } from '@au-test/kernel';\nimport { BindingFlags, IExpression, IScope } from '.';\nimport { Interpolation } from './ast';\nimport { IBinding, IBindingTarget } from './binding';\nimport { BindingMode } from './binding-mode';\nimport { connectable, IConnectableBinding, IPartialConnectableBinding } from './connectable';\nimport { IBindingTargetAccessor } from './observation';\nimport { IObserverLocator } from './observer-locator';\n\n// tslint:disable:no-any\n\nconst { toView, oneTime } = BindingMode;\n\nexport class MultiInterpolationBinding implements IBinding {\n  public $isBound: boolean = false;\n  public $scope: IScope = null;\n\n  public parts: InterpolationBinding[];\n\n  constructor(\n    public observerLocator: IObserverLocator,\n    public interpolation: Interpolation,\n    public target: IBindingTarget,\n    public targetProperty: string,\n    public mode: BindingMode,\n    public locator: IServiceLocator) {\n\n    // Note: the child expressions of an Interpolation expression are full Aurelia expressions, meaning they may include\n    // value converters and binding behaviors.\n    // Each expression represents one ${interpolation}, and for each we create a child TextBinding unless there is only one,\n    // in which case the renderer will create the TextBinding directly\n    const expressions = interpolation.expressions;\n    const parts = this.parts = Array(expressions.length);\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      parts[i] = new InterpolationBinding(expressions[i], interpolation, target, targetProperty, mode, observerLocator, locator, i === 0);\n    }\n  }\n\n  public $bind(flags: BindingFlags, scope: IScope): void {\n    if (this.$isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags);\n    }\n    this.$isBound = true;\n    this.$scope = scope;\n\n    const parts = this.parts;\n    for (let i = 0, ii = parts.length; i < ii; ++i) {\n      parts[i].$bind(flags, scope);\n    }\n  }\n\n  public $unbind(flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n    this.$isBound = false;\n    this.$scope = null;\n    const parts = this.parts;\n    for (let i = 0, ii = parts.length; i < ii; ++i) {\n      parts[i].$unbind(flags);\n    }\n  }\n}\n\nexport interface InterpolationBinding extends IConnectableBinding {}\n\n@connectable()\nexport class InterpolationBinding implements IPartialConnectableBinding {\n  public $scope: IScope;\n  public $isBound: boolean;\n\n  public targetObserver: IBindingTargetAccessor;\n\n  constructor(\n    public sourceExpression: IExpression,\n    public interpolation: Interpolation,\n    public target: IBindingTarget,\n    public targetProperty: string,\n    public mode: BindingMode,\n    public observerLocator: IObserverLocator,\n    public locator: IServiceLocator,\n    public isFirst: boolean) {\n\n    this.targetObserver = observerLocator.getAccessor(target, targetProperty);\n  }\n\n  public updateTarget(value: any, flags: BindingFlags): void {\n    this.targetObserver.setValue(value, flags | BindingFlags.updateTargetInstance);\n  }\n\n  public handleChange(newValue: any, previousValue: any, flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n\n    previousValue = this.targetObserver.getValue();\n    newValue = this.interpolation.evaluate(flags, this.$scope, this.locator);\n    if (newValue !== previousValue) {\n      this.updateTarget(newValue, flags);\n    }\n\n    if ((this.mode & oneTime) === 0) {\n      this.version++;\n      this.sourceExpression.connect(flags, this.$scope, this);\n      this.unobserve(false);\n    }\n  }\n\n  public $bind(flags: BindingFlags, scope: IScope): void {\n    if (this.$isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags);\n    }\n\n    this.$isBound = true;\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.bind) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    // since the interpolation already gets the whole value, we only need to let the first\n    // text binding do the update if there are multiple\n    if (this.isFirst) {\n      this.updateTarget(this.interpolation.evaluate(flags, scope, this.locator), flags);\n    }\n    if ((this.mode & toView) > 0) {\n      sourceExpression.connect(flags, scope, this);\n    }\n  }\n\n  public $unbind(flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n    this.$isBound = false;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.unbind) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n    this.unobserve(true);\n  }\n}\n","import { IServiceLocator, Reporter } from '@au-test/kernel';\nimport { IExpression } from './ast';\nimport { IBindingTarget } from './binding';\nimport { IScope } from './binding-context';\nimport { BindingFlags } from './binding-flags';\nimport { connectable, IConnectableBinding, IPartialConnectableBinding } from './connectable';\nimport { IObserverLocator } from './observer-locator';\n\n// tslint:disable:no-any\n\nexport interface LetBinding extends IConnectableBinding {}\n\n@connectable()\nexport class LetBinding implements IPartialConnectableBinding {\n  public $isBound: boolean = false;\n  public $scope: IScope = null;\n  public target: IBindingTarget = null;\n\n  constructor(\n    public sourceExpression: IExpression,\n    public targetProperty: string,\n    public observerLocator: IObserverLocator,\n    public locator: IServiceLocator,\n    private toViewModel: boolean = false\n  ) { }\n\n  public handleChange(newValue: any, previousValue: any, flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n\n    if (flags & BindingFlags.updateTargetInstance) {\n      const { target, targetProperty } = this;\n      previousValue = target[targetProperty];\n      newValue = this.sourceExpression.evaluate(flags, this.$scope, this.locator);\n      if (newValue !== previousValue) {\n        target[targetProperty] = newValue;\n      }\n      return;\n    }\n\n    throw Reporter.error(15, flags);\n  }\n\n  public $bind(flags: BindingFlags, scope: IScope): void {\n    if (this.$isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags);\n    }\n\n    this.$isBound = true;\n    this.$scope = scope;\n    this.target = this.toViewModel ? scope.bindingContext : scope.overrideContext;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.bind) {\n      sourceExpression.bind(flags, scope, this);\n    }\n    // sourceExpression might have been changed during bind\n    this.target[this.targetProperty] = this.sourceExpression.evaluate(BindingFlags.fromBind, scope, this.locator);\n    this.sourceExpression.connect(flags, scope, this);\n  }\n\n  public $unbind(flags: BindingFlags): void {\n    if (!this.$isBound) {\n      return;\n    }\n    this.$isBound = false;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.unbind) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n    this.$scope = null;\n    this.unobserve(true);\n  }\n}\n","import {\n  Constructable,\n  IContainer,\n  Immutable,\n  Omit,\n  PLATFORM,\n  Registration,\n  Writable\n} from '@au-test/kernel';\nimport { IScope } from '../binding/binding-context';\nimport { BindingFlags } from '../binding/binding-flags';\nimport { BindingMode } from '../binding/binding-mode';\nimport { IBindScope } from '../binding/observation';\nimport { INode } from '../dom';\nimport { IResourceKind, IResourceType, ResourceDescription } from '../resource';\nimport { IBindableDescription } from './bindable';\nimport { IAttach, IAttachLifecycle, IDetachLifecycle } from './lifecycle';\nimport { IRenderingEngine } from './rendering-engine';\nimport { IRuntimeBehavior } from './runtime-behavior';\n\nexport interface ICustomAttributeSource {\n  name: string;\n  defaultBindingMode?: BindingMode;\n  aliases?: string[];\n  isTemplateController?: boolean;\n  bindables?: Record<string, IBindableDescription>;\n}\n\nexport type AttributeDefinition = Immutable<Required<ICustomAttributeSource>> | null;\n\nexport type ICustomAttributeType = IResourceType<ICustomAttributeSource, ICustomAttribute>;\n\nexport interface ICustomAttribute extends IBindScope, IAttach {\n  readonly $scope: IScope;\n  $hydrate(renderingEngine: IRenderingEngine): void;\n}\n\n/*@internal*/\nexport interface IInternalCustomAttributeImplementation extends Writable<ICustomAttribute> {\n  $behavior: IRuntimeBehavior;\n}\n\n\n/**\n * Decorator: Indicates that the decorated class is a custom attribute.\n */\nexport function customAttribute(nameOrSource: string | ICustomAttributeSource) {\n  return function<T extends Constructable>(target: T) {\n    return CustomAttributeResource.define(nameOrSource, target);\n  }\n}\n\n/**\n * Decorator: Applied to custom attributes. Indicates that whatever element the\n * attribute is placed on should be converted into a template and that this\n * attribute controls the instantiation of the template.\n */\nexport function templateController(nameOrSource: string | Omit<ICustomAttributeSource, 'isTemplateController'>) {\n  return function<T extends Constructable>(target: T) {\n    let source: ICustomAttributeSource;\n\n    if (typeof nameOrSource === 'string') {\n      source = {\n        name: nameOrSource,\n        isTemplateController: true\n      };\n    } else {\n      source = { isTemplateController: true, ...nameOrSource };\n    }\n\n    return CustomAttributeResource.define(source, target);\n  }\n}\n\nexport const CustomAttributeResource: IResourceKind<ICustomAttributeSource, ICustomAttributeType> = {\n  name: 'custom-attribute',\n\n  keyFrom(name: string): string {\n    return `${this.name}:${name}`;\n  },\n\n  isType<T extends Constructable>(type: T): type is T & ICustomAttributeType {\n    return (type as any).kind === this;\n  },\n\n  define<T extends Constructable>(nameOrSource: string | ICustomAttributeSource, ctor: T): T & ICustomAttributeType {\n    const Type = ctor as ICustomAttributeType & T;\n    const proto: ICustomAttribute = Type.prototype;\n    const description = createCustomAttributeDescription(\n      typeof nameOrSource === 'string' ? { name: nameOrSource } : nameOrSource,\n      Type\n    );\n\n    (Type as Writable<ICustomAttributeType>).kind = CustomAttributeResource;\n    (Type as Writable<ICustomAttributeType>).description = description;\n    Type.register = register;\n\n    proto.$hydrate = hydrate;\n    proto.$bind = bind;\n    proto.$attach = attach;\n    proto.$detach = detach;\n    proto.$unbind = unbind;\n    proto.$cache = cache;\n\n    return Type;\n  }\n};\n\nfunction register(this: ICustomAttributeType, container: IContainer): void {\n  const description = this.description;\n  const resourceKey = CustomAttributeResource.keyFrom(description.name);\n  const aliases = description.aliases;\n\n  container.register(Registration.transient(resourceKey, this));\n\n  for(let i = 0, ii = aliases.length; i < ii; ++i) {\n    container.register(Registration.alias(resourceKey, aliases[i]));\n  }\n}\n\nfunction hydrate(this: IInternalCustomAttributeImplementation, renderingEngine: IRenderingEngine): void {\n  this.$isAttached = false;\n  this.$isBound = false;\n  this.$scope = null;\n\n  renderingEngine.applyRuntimeBehavior(\n    this.constructor as ICustomAttributeType,\n    this\n  );\n\n  if (this.$behavior.hasCreated) {\n    (this as any).created();\n  }\n}\n\nfunction bind(this: IInternalCustomAttributeImplementation, flags: BindingFlags, scope: IScope): void {\n  if (this.$isBound) {\n    if (this.$scope === scope) {\n      return;\n    }\n\n    this.$unbind(flags | BindingFlags.fromBind);\n  }\n\n  const behavior = this.$behavior;\n  this.$scope = scope;\n\n  if (behavior.hasBinding) {\n    (this as any).binding(flags | BindingFlags.fromBind);\n  }\n\n  this.$isBound = true;\n\n  if (behavior.hasBound) {\n    (this as any).bound(flags | BindingFlags.fromBind, scope);\n  }\n}\n\nfunction unbind(this: IInternalCustomAttributeImplementation, flags: BindingFlags): void {\n  if (this.$isBound) {\n    const behavior = this.$behavior;\n\n    if (behavior.hasUnbinding) {\n      (this as any).unbinding(flags | BindingFlags.fromUnbind);\n    }\n\n    this.$isBound = false;\n\n    if (this.$behavior.hasUnbound) {\n      (this as any).unbound(flags | BindingFlags.fromUnbind);\n    }\n  }\n}\n\nfunction attach(this: IInternalCustomAttributeImplementation, encapsulationSource: INode, lifecycle: IAttachLifecycle): void {\n  if (this.$isAttached) {\n    return;\n  }\n\n  if (this.$behavior.hasAttaching) {\n    (this as any).attaching(encapsulationSource, lifecycle);\n  }\n\n  this.$isAttached = true;\n\n  if (this.$behavior.hasAttached) {\n    lifecycle.queueAttachedCallback(this as any);\n  }\n}\n\nfunction detach(this: IInternalCustomAttributeImplementation, lifecycle: IDetachLifecycle): void {\n  if (this.$isAttached) {\n    if (this.$behavior.hasDetaching) {\n      (this as any).detaching(lifecycle);\n    }\n\n    this.$isAttached = false;\n\n    if (this.$behavior.hasDetached) {\n      lifecycle.queueDetachedCallback(this as any);\n    }\n  }\n}\n\nfunction cache(this: IInternalCustomAttributeImplementation): void {\n  if (this.$behavior.hasCaching) {\n    (this as any).caching();\n  }\n}\n\n/*@internal*/\nexport function createCustomAttributeDescription(attributeSource: ICustomAttributeSource, Type: ICustomAttributeType): ResourceDescription<ICustomAttributeSource> {\n  return {\n    name: attributeSource.name,\n    aliases: attributeSource.aliases || PLATFORM.emptyArray,\n    defaultBindingMode: attributeSource.defaultBindingMode || BindingMode.toView,\n    isTemplateController: attributeSource.isTemplateController || false,\n    bindables: {...(Type as any).bindables, ...attributeSource.bindables}\n  };\n}\n","import { Constructable, IContainer, Registration, Writable } from '@au-test/kernel';\nimport { IResourceKind, IResourceType } from '../resource';\nimport { IRenderStrategyInstruction } from './instructions';\nimport { IRenderable } from './renderable';\n\nexport interface IRenderStrategy<TTarget = any, TInstruction extends IRenderStrategyInstruction = any> {\n  render(renderable: IRenderable, target: TTarget, instruction: TInstruction): void;\n}\n\nexport interface IRenderStrategySource {\n  name: string;\n}\n\nexport type IRenderStrategyType = IResourceType<IRenderStrategySource, IRenderStrategy>;\n\nexport function renderStrategy(nameOrSource: string | IRenderStrategySource) {\n  return function<T extends Constructable>(target: T) {\n    return RenderStrategyResource.define(nameOrSource, target);\n  }\n}\n\nexport const RenderStrategyResource: IResourceKind<IRenderStrategySource, IRenderStrategyType> = {\n  name: 'render-strategy',\n\n  keyFrom(name: string): string {\n    return `${this.name}:${name}`;\n  },\n\n  isType<T extends Constructable>(type: T): type is T & IRenderStrategyType {\n    return (type as any).kind === this;\n  },\n\n  define<T extends Constructable>(nameOrSource: string | IRenderStrategySource, ctor: T): T & IRenderStrategyType {\n    const description = typeof nameOrSource === 'string' ? { name: nameOrSource } : nameOrSource;\n    const Type: T & IRenderStrategyType = ctor as any;\n\n    (Type as Writable<IRenderStrategyType>).kind = RenderStrategyResource;\n    (Type as Writable<IRenderStrategyType>).description = description;\n    Type.register = function(container: IContainer) {\n      container.register(Registration.singleton(Type.kind.keyFrom(description.name), Type));\n    };\n\n    return Type;\n  }\n};\n","import { Immutable, Reporter } from '@au-test/kernel';\nimport { Interpolation } from '../binding';\nimport { Binding } from '../binding/binding';\nimport { BindingMode } from '../binding/binding-mode';\nimport { Call } from '../binding/call';\nimport { IEventManager } from '../binding/event-manager';\nimport { BindingType, IExpressionParser } from '../binding/expression-parser';\nimport { InterpolationBinding, MultiInterpolationBinding } from '../binding/interpolation-binding';\nimport { LetBinding } from '../binding/let-binding';\nimport { Listener } from '../binding/listener';\nimport { IObserverLocator } from '../binding/observer-locator';\nimport { Ref } from '../binding/ref';\nimport { DOM, INode } from '../dom';\nimport { CustomAttributeResource, ICustomAttribute } from './custom-attribute';\nimport { CustomElementResource, ICustomElement } from './custom-element';\nimport {\n  ICallBindingInstruction,\n  IHydrateAttributeInstruction,\n  IHydrateElementInstruction,\n  IHydrateTemplateController,\n  IInterpolationInstruction,\n  IIteratorBindingInstruction,\n  ILetElementInstruction,\n  IListenerBindingInstruction,\n  IPropertyBindingInstruction,\n  IRefBindingInstruction,\n  IRenderStrategyInstruction,\n  ISetAttributeInstruction,\n  ISetPropertyInstruction,\n  IStylePropertyBindingInstruction,\n  ITextBindingInstruction,\n  TargetedInstructionType,\n  TemplateDefinition,\n  TemplatePartDefinitions\n} from './instructions';\nimport { IRenderContext } from './render-context';\nimport { IRenderStrategy, RenderStrategyResource } from './render-strategy';\nimport { IRenderable } from './renderable';\nimport { IRenderingEngine } from './rendering-engine';\n\nexport interface IRenderer {\n  render(renderable: IRenderable, targets: ArrayLike<INode>, templateDefinition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void;\n  hydrateElementInstance(renderable: IRenderable, target: INode, instruction: Immutable<IHydrateElementInstruction>, component: ICustomElement): void;\n}\n\n// tslint:disable:function-name\n// tslint:disable:no-any\n\n/* @internal */\nexport class Renderer implements IRenderer {\n  constructor(\n    private context: IRenderContext,\n    private observerLocator: IObserverLocator,\n    private eventManager: IEventManager,\n    private parser: IExpressionParser,\n    private renderingEngine: IRenderingEngine\n  ) { }\n\n  public render(renderable: IRenderable, targets: ArrayLike<INode>, definition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void {\n    const targetInstructions = definition.instructions;\n\n    if (targets.length !== targetInstructions.length) {\n      if (targets.length > targetInstructions.length) {\n        throw Reporter.error(30);\n      } else {\n        throw Reporter.error(31);\n      }\n    }\n    for (let i = 0, ii = targets.length; i < ii; ++i) {\n      const instructions = targetInstructions[i];\n      const target = targets[i];\n\n      for (let j = 0, jj = instructions.length; j < jj; ++j) {\n        const current = instructions[j];\n        (this as any)[current.type](renderable, target, current, parts);\n      }\n    }\n\n    if (host) {\n      const surrogateInstructions = definition.surrogates;\n\n      for (let i = 0, ii = surrogateInstructions.length; i < ii; ++i) {\n        const current = surrogateInstructions[i];\n        (this as any)[current.type](renderable, host, current, parts);\n      }\n    }\n  }\n\n  public hydrateElementInstance(renderable: IRenderable, target: INode, instruction: Immutable<IHydrateElementInstruction>, component: ICustomElement): void {\n    const childInstructions = instruction.instructions;\n\n    component.$hydrate(this.renderingEngine, target, instruction);\n\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      const current = childInstructions[i];\n      const currentType = current.type;\n\n      (this as any)[currentType](renderable, component, current);\n    }\n\n    renderable.$bindables.push(component);\n    renderable.$attachables.push(component);\n  }\n\n  public [TargetedInstructionType.textBinding](renderable: IRenderable, target: any, instruction: Immutable<ITextBindingInstruction>): void {\n    const next = target.nextSibling;\n    DOM.treatAsNonWhitespace(next);\n    DOM.remove(target);\n    const srcOrExpr = instruction.srcOrExpr as any;\n    const expr = (srcOrExpr.$kind ? srcOrExpr : this.parser.parse(srcOrExpr, BindingType.Interpolation)) as Interpolation;\n    if (expr.isMulti) {\n      renderable.$bindables.push(new MultiInterpolationBinding(this.observerLocator, expr, next, 'textContent', BindingMode.toView, this.context));\n    } else {\n      renderable.$bindables.push(new InterpolationBinding(expr.firstExpression, expr, next, 'textContent', BindingMode.toView, this.observerLocator, this.context, true));\n    }\n  }\n\n  public [TargetedInstructionType.interpolation](renderable: IRenderable, target: any, instruction: Immutable<IInterpolationInstruction>): void {\n    const srcOrExpr = instruction.srcOrExpr as any;\n    const expr = (srcOrExpr.$kind ? srcOrExpr : this.parser.parse(srcOrExpr, BindingType.Interpolation)) as Interpolation;\n    if (expr.isMulti) {\n      renderable.$bindables.push(new MultiInterpolationBinding(this.observerLocator, expr, target, instruction.dest, BindingMode.toView, this.context));\n    } else {\n      renderable.$bindables.push(new InterpolationBinding(expr.firstExpression, expr, target, instruction.dest, BindingMode.toView, this.observerLocator, this.context, true));\n    }\n  }\n\n  public [TargetedInstructionType.propertyBinding](renderable: IRenderable, target: any, instruction: Immutable<IPropertyBindingInstruction>): void {\n    const srcOrExpr = instruction.srcOrExpr as any;\n    renderable.$bindables.push(new Binding(srcOrExpr.$kind ? srcOrExpr : this.parser.parse(srcOrExpr, BindingType.IsPropertyCommand | instruction.mode), target, instruction.dest, instruction.mode, this.observerLocator, this.context));\n  }\n\n  public [TargetedInstructionType.iteratorBinding](renderable: IRenderable, target: any, instruction: Immutable<IIteratorBindingInstruction>): void {\n    const srcOrExpr = instruction.srcOrExpr as any;\n    renderable.$bindables.push(new Binding(srcOrExpr.$kind ? srcOrExpr : this.parser.parse(srcOrExpr, BindingType.ForCommand), target, instruction.dest, BindingMode.toView, this.observerLocator, this.context));\n  }\n\n  public [TargetedInstructionType.listenerBinding](renderable: IRenderable, target: any, instruction: Immutable<IListenerBindingInstruction>): void {\n    const srcOrExpr = instruction.srcOrExpr as any;\n    renderable.$bindables.push(new Listener(instruction.dest, instruction.strategy, srcOrExpr.$kind ? srcOrExpr : this.parser.parse(srcOrExpr, BindingType.IsEventCommand | (instruction.strategy + BindingType.DelegationStrategyDelta)), target, instruction.preventDefault, this.eventManager, this.context));\n  }\n\n  public [TargetedInstructionType.callBinding](renderable: IRenderable, target: any, instruction: Immutable<ICallBindingInstruction>): void {\n    const srcOrExpr = instruction.srcOrExpr as any;\n    renderable.$bindables.push(new Call(srcOrExpr.$kind ? srcOrExpr : this.parser.parse(srcOrExpr, BindingType.CallCommand), target, instruction.dest, this.observerLocator, this.context));\n  }\n\n  public [TargetedInstructionType.refBinding](renderable: IRenderable, target: any, instruction: Immutable<IRefBindingInstruction>): void {\n    const srcOrExpr = instruction.srcOrExpr as any;\n    renderable.$bindables.push(new Ref(srcOrExpr.$kind ? srcOrExpr : this.parser.parse(srcOrExpr, BindingType.IsRef), target, this.context));\n  }\n\n  public [TargetedInstructionType.stylePropertyBinding](renderable: IRenderable, target: any, instruction: Immutable<IStylePropertyBindingInstruction>): void {\n    const srcOrExpr = instruction.srcOrExpr as any;\n    renderable.$bindables.push(new Binding(srcOrExpr.$kind ? srcOrExpr : this.parser.parse(srcOrExpr, BindingType.IsPropertyCommand | BindingMode.toView), (<any>target).style, instruction.dest, BindingMode.toView, this.observerLocator, this.context));\n  }\n\n  public [TargetedInstructionType.setProperty](renderable: IRenderable, target: any, instruction: Immutable<ISetPropertyInstruction>): void {\n    target[instruction.dest] = instruction.value;\n  }\n\n  public [TargetedInstructionType.setAttribute](renderable: IRenderable, target: any, instruction: Immutable<ISetAttributeInstruction>): void {\n    DOM.setAttribute(target, instruction.dest, instruction.value);\n  }\n\n  public [TargetedInstructionType.hydrateElement](renderable: IRenderable, target: any, instruction: Immutable<IHydrateElementInstruction>): void {\n    const context = this.context;\n    const operation = context.beginComponentOperation(renderable, target, instruction, null, null, target, true);    const component = context.get<ICustomElement>(CustomElementResource.keyFrom(instruction.res));\n\n    this.hydrateElementInstance(renderable, target, instruction, component);\n    operation.dispose();\n  }\n\n  public [TargetedInstructionType.hydrateAttribute](renderable: IRenderable, target: any, instruction: Immutable<IHydrateAttributeInstruction>): void {\n    const childInstructions = instruction.instructions;\n    const context = this.context;\n\n    const operation = context.beginComponentOperation(renderable, target, instruction);\n    const component = context.get<ICustomAttribute>(CustomAttributeResource.keyFrom(instruction.res));\n    component.$hydrate(this.renderingEngine);\n\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      const current = childInstructions[i];\n      (this as any)[current.type](renderable, component, current);\n    }\n\n    renderable.$bindables.push(component);\n    renderable.$attachables.push(component);\n\n    operation.dispose();\n  }\n\n  public [TargetedInstructionType.hydrateTemplateController](renderable: IRenderable, target: any, instruction: Immutable<IHydrateTemplateController>, parts?: TemplatePartDefinitions): void {\n    const childInstructions = instruction.instructions;\n    const factory = this.renderingEngine.getViewFactory(instruction.src, this.context);\n    const context = this.context;\n    const operation = context.beginComponentOperation(renderable, target, instruction, factory, parts, DOM.convertToRenderLocation(target), false);\n\n    const component = context.get<ICustomAttribute>(CustomAttributeResource.keyFrom(instruction.res));\n    component.$hydrate(this.renderingEngine);\n\n    if (instruction.link) {\n      (component as any).link(renderable.$attachables[renderable.$attachables.length - 1]);\n    }\n\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      const current = childInstructions[i];\n      (this as any)[current.type](renderable, component, current);\n    }\n\n    renderable.$bindables.push(component);\n    renderable.$attachables.push(component);\n\n    operation.dispose();\n  }\n\n  public [TargetedInstructionType.renderStrategy](renderable: IRenderable, target: any, instruction: Immutable<IRenderStrategyInstruction>): void {\n    const strategyName = instruction.name;\n    if (this[strategyName] === undefined) {\n      const strategy = this.context.get(RenderStrategyResource.keyFrom(strategyName)) as IRenderStrategy;\n      if (strategy === null || strategy === undefined) {\n        throw new Error(`Unknown renderStrategy \"${strategyName}\"`);\n      }\n      this[strategyName] = strategy.render.bind(strategy);\n    }\n    this[strategyName](renderable, target, instruction);\n  }\n\n  public [TargetedInstructionType.letElement](renderable: IRenderable, target: any, instruction: Immutable<ILetElementInstruction>): void {\n    target.remove();\n    const childInstructions = instruction.instructions;\n    const toViewModel = instruction.toViewModel;\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      const childInstruction = childInstructions[i];\n      const srcOrExpr: any = childInstruction.srcOrExpr;\n      renderable.$bindables.push(new LetBinding(\n        srcOrExpr.$kind ? srcOrExpr : this.parser.parse(srcOrExpr, BindingType.IsPropertyCommand),\n        childInstruction.dest,\n        this.observerLocator,\n        this.context,\n        toViewModel\n      ));\n    }\n  }\n}\n","import { BindingFlags } from '../binding/binding-flags';\nimport { IChangeSet } from '../binding/change-set';\nimport { IAccessor, IPropertySubscriber, ISubscribable, ISubscriberCollection, MutationKind } from '../binding/observation';\nimport { Observer } from '../binding/property-observation';\nimport { subscriberCollection } from '../binding/subscriber-collection';\nimport { INode } from '../dom';\nimport { ICustomAttribute, ICustomAttributeType } from './custom-attribute';\nimport {\n  CustomElementResource,\n  ICustomElement,\n  ICustomElementType\n} from './custom-element';\nimport { BindableDefinitions } from './instructions';\n\nexport interface IRuntimeBehavior {\n  readonly hasCreated: boolean;\n  readonly hasBinding: boolean;\n  readonly hasBound: boolean;\n  readonly hasAttaching: boolean;\n  readonly hasAttached: boolean;\n  readonly hasDetaching: boolean;\n  readonly hasDetached: boolean;\n  readonly hasUnbinding: boolean;\n  readonly hasUnbound: boolean;\n  readonly hasRender: boolean;\n  readonly hasCaching: boolean;\n}\n\n/** @internal */\nexport class RuntimeBehavior implements IRuntimeBehavior {\n  public bindables: BindableDefinitions;\n\n  public hasCreated: boolean = false;\n  public hasBinding: boolean = false;\n  public hasBound: boolean = false;\n  public hasAttaching: boolean = false;\n  public hasAttached: boolean = false;\n  public hasDetaching: boolean = false;\n  public hasDetached: boolean = false;\n  public hasUnbinding: boolean = false;\n  public hasUnbound: boolean = false;\n  public hasRender: boolean = false;\n  public hasCaching: boolean = false;\n\n  private constructor() {}\n\n  public static create(Component: ICustomElementType | ICustomAttributeType, instance: ICustomAttribute | ICustomElement): RuntimeBehavior {\n    const behavior = new RuntimeBehavior();\n\n    behavior.bindables = Component.description.bindables;\n    behavior.hasCreated = 'created' in instance;\n    behavior.hasBinding = 'binding' in instance;\n    behavior.hasBound = 'bound' in instance;\n    behavior.hasAttaching = 'attaching' in instance;\n    behavior.hasAttached = 'attached' in instance;\n    behavior.hasDetaching = 'detaching' in instance;\n    behavior.hasDetached = 'detached' in instance;\n    behavior.hasUnbinding = 'unbinding' in instance;\n    behavior.hasUnbound = 'unbound' in instance;\n    behavior.hasRender = 'render' in instance;\n    behavior.hasCaching = 'caching' in instance;\n\n    return behavior;\n  }\n\n  public applyTo(instance: ICustomAttribute | ICustomElement, changeSet: IChangeSet): void {\n    if ('$projector' in instance) {\n      this.applyToElement(changeSet, instance);\n    } else {\n      this.applyToCore(changeSet, instance);\n    }\n  }\n\n  private applyToElement(changeSet: IChangeSet, instance: ICustomElement): void {\n    const observers = this.applyToCore(changeSet, instance);\n\n    (observers as any).$children = new ChildrenObserver(changeSet, instance);\n\n    Reflect.defineProperty(instance, '$children', {\n      enumerable: false,\n      get: function() {\n        return this.$observers.$children.getValue();\n      }\n    });\n  }\n\n  private applyToCore(changeSet: IChangeSet, instance: any) {\n    const observers = {};\n    const bindables = this.bindables;\n    const observableNames = Object.getOwnPropertyNames(bindables);\n\n    for (let i = 0, ii = observableNames.length; i < ii; ++i) {\n      const name = observableNames[i];\n\n      observers[name] = new Observer(\n        instance,\n        name,\n        bindables[name].callback\n      );\n\n      createGetterSetter(instance, name);\n    }\n\n    Reflect.defineProperty(instance, '$observers', {\n      enumerable: false,\n      value: observers\n    });\n\n    instance.$behavior = this;\n\n    return observers;\n  }\n}\n\nfunction createGetterSetter(instance: any, name: string): void {\n  Reflect.defineProperty(instance, name, {\n    enumerable: true,\n    get: function() { return this.$observers[name].getValue(); },\n    set: function(value) { this.$observers[name].setValue(value, BindingFlags.updateTargetInstance); }\n  });\n}\n\nexport interface IChildrenObserver extends\n  IAccessor,\n  ISubscribable<MutationKind.instance>,\n  ISubscriberCollection<MutationKind.instance> { }\n\n/*@internal*/\n@subscriberCollection(MutationKind.instance)\nexport class ChildrenObserver implements Partial<IChildrenObserver> {\n  public hasChanges: boolean = false;\n\n  private children: ICustomElement[] = null;\n  private observing: boolean = false;\n\n  constructor(private changeSet: IChangeSet, private customElement: ICustomElement) { }\n\n  public getValue(): ICustomElement[] {\n    if (!this.observing) {\n      this.observing = true;\n      this.customElement.$projector.subscribeToChildrenChange(() => this.onChildrenChanged());\n      this.children = findElements(this.customElement.$projector.children);\n    }\n\n    return this.children;\n  }\n\n  public setValue(newValue: any): void {}\n\n  public flushChanges(this: ChildrenObserver & IChildrenObserver): void {\n    this.callSubscribers(this.children, undefined, BindingFlags.updateTargetInstance | BindingFlags.fromFlushChanges);\n    this.hasChanges = false;\n  }\n\n  public subscribe(this: ChildrenObserver & IChildrenObserver, subscriber: IPropertySubscriber): void {\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(this: ChildrenObserver & IChildrenObserver, subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n  }\n\n  private onChildrenChanged(): void {\n    this.children = findElements(this.customElement.$projector.children);\n\n    if ('$childrenChanged' in this.customElement) {\n      (this.customElement as any).$childrenChanged();\n    }\n\n    this.changeSet.add(this);\n    this.hasChanges = true;\n  }\n}\n\nconst elementBehaviorFor = CustomElementResource.behaviorFor;\n\n/*@internal*/\nexport function findElements(nodes: ArrayLike<INode>): ICustomElement[] {\n  const components: ICustomElement[] = [];\n\n  for (let i = 0, ii = nodes.length; i < ii; ++i) {\n    const current = nodes[i];\n    const component = elementBehaviorFor(current);\n\n    if (component !== null) {\n      components.push(component);\n    }\n  }\n\n  return components;\n}\n","import { DI, Reporter } from '@au-test/kernel';\nimport { IScope } from '../binding/binding-context';\nimport { BindingFlags } from '../binding/binding-flags';\nimport { IBindScope } from '../binding/observation';\nimport { INode, INodeSequence, IRenderLocation } from '../dom';\nimport { IAttach, IAttachLifecycle, IDetachLifecycle } from './lifecycle';\nimport { IRenderContext } from './render-context';\nimport { IRenderable } from './renderable';\nimport { ITemplate } from './template';\n\nexport type RenderCallback = (view: IView) => void;\n\nexport interface IView extends IBindScope, IRenderable, IAttach {\n  readonly factory: IViewFactory;\n\n  mount(location: IRenderLocation): void;\n  release(): boolean;\n\n  lockScope(scope: IScope): void;\n}\n\nexport interface IViewFactory {\n  readonly name: string;\n  readonly isCaching: boolean;\n  setCacheSize(size: number | '*', doNotOverrideIfAlreadySet: boolean): void;\n  create(): IView;\n}\n\nexport const IViewFactory = DI.createInterface<IViewFactory>().noDefault();\n\n/*@internal*/\nexport interface View extends IView {}\n\n/*@internal*/\nexport class View implements IView {\n  public $bindables: IBindScope[] = [];\n  public $attachables: IAttach[] = [];\n  public $scope: IScope = null;\n  public $nodes: INodeSequence = null;\n  public $isBound: boolean = false;\n  public $isAttached: boolean = false;\n  public $context: IRenderContext;\n  private location: IRenderLocation;\n  private requiresNodeAdd: boolean = false;\n  private isFree: boolean = false;\n\n  constructor(public factory: ViewFactory, private template: ITemplate) {\n    this.$nodes = this.template.createFor(this);\n  }\n\n  public mount(location: IRenderLocation): void {\n    if (!location.parentNode) { // unmet invariant: location must be a child of some other node\n      throw Reporter.error(60); // TODO: organize error codes\n    }\n    this.location = location;\n\n    if (this.$nodes.lastChild && this.$nodes.lastChild.nextSibling !== location) {\n      this.requiresNodeAdd = true;\n    }\n  }\n\n  public lockScope(scope: IScope): void {\n    this.$scope = scope;\n    this.$bind = lockedBind;\n  }\n\n  public release(): boolean {\n    this.isFree = true;\n\n    if (this.$isAttached) {\n      return this.factory.canReturnToCache(this);\n    } else {\n      return this.$removeNodes();\n    }\n  }\n\n  public $bind(flags: BindingFlags, scope: IScope): void {\n    if (this.$isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n\n      this.$unbind(flags);\n    }\n\n    this.$scope = scope;\n    const bindables = this.$bindables;\n\n    for (let i = 0, ii = bindables.length; i < ii; ++i) {\n      bindables[i].$bind(flags, scope);\n    }\n\n    this.$isBound = true;\n  }\n\n  public $addNodes(): void {\n    this.requiresNodeAdd = false;\n    this.$nodes.insertBefore(this.location);\n  }\n\n  public $removeNodes(): boolean {\n    this.requiresNodeAdd = true;\n    this.$nodes.remove();\n\n    if (this.isFree) {\n      this.isFree = false;\n      return this.factory.tryReturnToCache(this);\n    }\n\n    return false;\n  }\n\n  public $attach(encapsulationSource: INode, lifecycle: IAttachLifecycle): void {\n    if (this.$isAttached) {\n      return;\n    }\n\n    const attachables = this.$attachables;\n\n    for (let i = 0, ii = attachables.length; i < ii; ++i) {\n      attachables[i].$attach(encapsulationSource, lifecycle);\n    }\n\n    if (this.requiresNodeAdd) {\n      lifecycle.queueAddNodes(this);\n    }\n\n    this.$isAttached = true;\n  }\n\n  public $detach(lifecycle: IDetachLifecycle): void {\n    if (this.$isAttached) {\n      lifecycle.queueRemoveNodes(this);\n\n      const attachables = this.$attachables;\n      let i = attachables.length;\n\n      while (i--) {\n        attachables[i].$detach(lifecycle);\n      }\n\n      this.$isAttached = false;\n    }\n  }\n\n  public $unbind(flags: BindingFlags): void {\n    if (this.$isBound) {\n      const bindables = this.$bindables;\n      let i = bindables.length;\n\n      while (i--) {\n        bindables[i].$unbind(flags);\n      }\n\n      this.$isBound = false;\n      this.$scope = null;\n    }\n  }\n\n  public $cache(): void {\n    const attachables = this.$attachables;\n\n    for (let i = 0, ii = attachables.length; i < ii; ++i) {\n      attachables[i].$cache();\n    }\n  }\n}\n\n/*@internal*/\nexport class ViewFactory implements IViewFactory {\n  public static maxCacheSize: number = 0xFFFF;\n  public isCaching: boolean = false;\n\n  private cacheSize: number = -1;\n  private cache: View[] = null;\n\n  constructor(public name: string, private template: ITemplate) {}\n\n  public setCacheSize(size: number | '*', doNotOverrideIfAlreadySet: boolean): void {\n    if (size) {\n      if (size === '*') {\n        size = ViewFactory.maxCacheSize;\n      } else if (typeof size === 'string') {\n        size = parseInt(size, 10);\n      }\n\n      if (this.cacheSize === -1 || !doNotOverrideIfAlreadySet) {\n        this.cacheSize = size;\n      }\n    }\n\n    if (this.cacheSize > 0) {\n      this.cache = [];\n    } else {\n      this.cache = null;\n    }\n\n    this.isCaching = this.cacheSize > 0;\n  }\n\n  public canReturnToCache(view: IView): boolean {\n    return this.cache !== null && this.cache.length < this.cacheSize;\n  }\n\n  public tryReturnToCache(view: View): boolean {\n    if (this.canReturnToCache(view)) {\n      view.$cache();\n      this.cache.push(view);\n      return true;\n    }\n\n    return false;\n  }\n\n  public create(): IView {\n    const cache = this.cache;\n\n    if (cache !== null && cache.length > 0) {\n      return cache.pop();\n    }\n\n    return new View(this, this.template);\n  }\n}\n\nfunction lockedBind(this: View, flags: BindingFlags): void {\n  if (this.$isBound) {\n    return;\n  }\n\n  const lockedScope = this.$scope;\n  const bindables = this.$bindables;\n\n  for (let i = 0, ii = bindables.length; i < ii; ++i) {\n    bindables[i].$bind(flags, lockedScope);\n  }\n\n  this.$isBound = true;\n}\n","import { IContainer, IDisposable, Immutable, ImmutableArray, IResolver, IServiceLocator, PLATFORM, Reporter } from '@au-test/kernel';\nimport { DOM, INode, IRenderLocation } from '../dom';\nimport { ITargetedInstruction, TemplateDefinition, TemplatePartDefinitions } from './instructions';\nimport { IRenderable } from './renderable';\nimport { IRenderingEngine } from './rendering-engine';\nimport { IViewFactory } from './view';\n\nexport interface IRenderContext extends IServiceLocator {\n  createChild(): IRenderContext;\n  render(renderable: IRenderable, targets: ArrayLike<INode>, templateDefinition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void;\n  beginComponentOperation(renderable: IRenderable, target: any, instruction: Immutable<ITargetedInstruction>, factory?: IViewFactory, parts?: TemplatePartDefinitions, location?: IRenderLocation, locationIsContainer?: boolean): IDisposable;\n}\n\n/*@internal*/\nexport type ExposedContext = IRenderContext & IDisposable & IContainer;\n\nexport function createRenderContext(renderingEngine: IRenderingEngine, parentRenderContext: IRenderContext, dependencies: ImmutableArray<any>): IRenderContext {\n  const context = <ExposedContext>parentRenderContext.createChild();\n  const renderableProvider = new InstanceProvider();\n  const elementProvider = new InstanceProvider();\n  const instructionProvider = new InstanceProvider<ITargetedInstruction>();\n  const factoryProvider = new ViewFactoryProvider(renderingEngine);\n  const renderLocationProvider = new InstanceProvider<IRenderLocation>();\n  const renderer = renderingEngine.createRenderer(context);\n\n  DOM.registerElementResolver(context, elementProvider);\n\n  context.registerResolver(IViewFactory, factoryProvider);\n  context.registerResolver(IRenderable, renderableProvider);\n  context.registerResolver(ITargetedInstruction, instructionProvider);\n  context.registerResolver(IRenderLocation, renderLocationProvider);\n\n  if (dependencies) {\n    context.register(...dependencies);\n  }\n\n  context.render = function(renderable: IRenderable, targets: ArrayLike<INode>, templateDefinition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void {\n    renderer.render(renderable, targets, templateDefinition, host, parts)\n  };\n\n  context.beginComponentOperation = function(renderable: IRenderable, target: any, instruction: ITargetedInstruction, factory?: IViewFactory, parts?: TemplatePartDefinitions, location?: IRenderLocation): IDisposable {\n    renderableProvider.prepare(renderable);\n    elementProvider.prepare(target);\n    instructionProvider.prepare(instruction);\n\n    if (factory) {\n      factoryProvider.prepare(factory, parts);\n    }\n\n    if (location) {\n      renderLocationProvider.prepare(location);\n    }\n\n    return context;\n  };\n\n  context.dispose = function(): void {\n    factoryProvider.dispose();\n    renderableProvider.dispose();\n    instructionProvider.dispose();\n    elementProvider.dispose();\n    renderLocationProvider.dispose();\n  };\n\n  return context;\n}\n\n/*@internal*/\nexport class InstanceProvider<T> implements IResolver {\n  private instance: T = null;\n\n  public prepare(instance: T): void {\n    this.instance = instance;\n  }\n\n  public resolve(handler: IContainer, requestor: IContainer): T {\n    if (this.instance === undefined) { // unmet precondition: call prepare\n      throw Reporter.error(50); // TODO: organize error codes\n    }\n    return this.instance;\n  }\n\n  public dispose(): void {\n    this.instance = null;\n  }\n}\n\n/*@internal*/\nexport class ViewFactoryProvider implements IResolver {\n  private factory: IViewFactory;\n  private replacements: TemplatePartDefinitions;\n\n  constructor(private renderingEngine: IRenderingEngine) {}\n\n  public prepare(factory: IViewFactory, parts: TemplatePartDefinitions): void {\n    this.factory = factory;\n    this.replacements = parts || PLATFORM.emptyObject;\n  }\n\n  public resolve(handler: IContainer, requestor: ExposedContext): IViewFactory {\n    const factory = this.factory;\n    if (factory === undefined) { // unmet precondition: call prepare\n      throw Reporter.error(50); // TODO: organize error codes\n    }\n    if (!factory.name || !factory.name.length) { // unmet invariant: factory must have a name\n      throw Reporter.error(51); // TODO: organize error codes\n    }\n    const found = this.replacements[factory.name];\n    if (found) {\n      return this.renderingEngine.getViewFactory(found, requestor);\n    }\n\n    return this.factory;\n  }\n\n  public dispose(): void {\n    this.factory = null;\n    this.replacements = null;\n  }\n}\n","import { DOM, INode, INodeSequence, NodeSequence } from '../dom';\nimport { TemplateDefinition, TemplatePartDefinitions } from './instructions';\nimport { createRenderContext, IRenderContext } from './render-context';\nimport { IRenderable } from './renderable';\nimport { IRenderingEngine } from './rendering-engine';\n\n// The basic template abstraction that allows consumers to create\n// instances of an INodeSequence on-demand. Templates are contextual in that they are, in the very least,\n// part of a particular application, with application-level resources, but they also may have their\n// own scoped resources or be part of another view (via a template controller) which provides a\n// context for the template.\nexport interface ITemplate {\n  readonly renderContext: IRenderContext;\n  createFor(renderable: IRenderable, host?: INode, parts?: TemplatePartDefinitions): INodeSequence;\n}\n\n// This is the main implementation of ITemplate.\n// It is used to create instances of IView based on a compiled TemplateDefinition.\n// TemplateDefinitions are hand-coded today, but will ultimately be the output of the\n// TemplateCompiler either through a JIT or AOT process.\n// Essentially, CompiledTemplate wraps up the small bit of code that is needed to take a TemplateDefinition\n// and create instances of it on demand.\n/*@internal*/\nexport class CompiledTemplate implements ITemplate {\n  public renderContext: IRenderContext;\n  private createNodeSequence: () => INodeSequence;\n\n  constructor(renderingEngine: IRenderingEngine, parentRenderContext: IRenderContext, private templateDefinition: TemplateDefinition) {\n    this.renderContext = createRenderContext(renderingEngine, parentRenderContext, templateDefinition.dependencies);\n    this.createNodeSequence = DOM.createFactoryFromMarkupOrNode(templateDefinition.templateOrNode);\n  }\n\n  public createFor(renderable: IRenderable, host?: INode, replacements?: TemplatePartDefinitions): INodeSequence {\n    const nodes = this.createNodeSequence();\n    this.renderContext.render(renderable, nodes.findTargets(), this.templateDefinition, host, replacements);\n    return nodes;\n  }\n}\n\n// This is an implementation of ITemplate that always returns a node sequence representing \"no DOM\" to render.\n/*@internal*/\nexport const noViewTemplate: ITemplate = {\n  renderContext: null,\n  createFor(renderable: IRenderable): INodeSequence {\n    return NodeSequence.empty;\n  }\n};\n","import { DI } from '@au-test/kernel';\nimport { IResourceDescriptions } from '../resource';\nimport { ITemplateSource, TemplateDefinition } from './instructions';\nimport { ViewCompileFlags } from './view-compile-flags';\n\nexport interface ITemplateCompiler {\n  readonly name: string;\n  compile(definition: ITemplateSource, resources: IResourceDescriptions, viewCompileFlags?: ViewCompileFlags): TemplateDefinition;\n}\n\nexport const ITemplateCompiler = DI.createInterface<ITemplateCompiler>().noDefault();\n","export enum ViewCompileFlags {\n  none        = 0b0_001,\n  surrogate   = 0b0_010,\n  shadowDOM   = 0b0_100,\n}\n","import { all, DI, IContainer, Immutable, inject, PLATFORM, Reporter } from '@au-test/kernel';\nimport { IChangeSet } from '../binding/change-set';\nimport { IEventManager } from '../binding/event-manager';\nimport { IExpressionParser } from '../binding/expression-parser';\nimport { IObserverLocator } from '../binding/observer-locator';\nimport { IResourceDescriptions, IResourceKind, IResourceType, ResourceDescription } from '../resource';\nimport { ICustomAttribute, ICustomAttributeType } from './custom-attribute';\nimport { ICustomElement, ICustomElementType } from './custom-element';\nimport { ITemplateSource, TemplateDefinition } from './instructions';\nimport { ExposedContext, IRenderContext } from './render-context';\nimport { IRenderer, Renderer } from './renderer';\nimport { RuntimeBehavior } from './runtime-behavior';\nimport { CompiledTemplate, ITemplate, noViewTemplate } from './template';\nimport { ITemplateCompiler } from './template-compiler';\nimport { IViewFactory, ViewFactory } from './view';\nimport { ViewCompileFlags } from './view-compile-flags';\n\nexport interface IRenderingEngine {\n  getElementTemplate(definition: TemplateDefinition, componentType?: ICustomElementType): ITemplate;\n  getViewFactory(source: Immutable<ITemplateSource>, parentContext?: IRenderContext): IViewFactory;\n\n  applyRuntimeBehavior(type: ICustomAttributeType, instance: ICustomAttribute): void;\n  applyRuntimeBehavior(type: ICustomElementType, instance: ICustomElement): void;\n\n  createRenderer(context: IRenderContext): IRenderer;\n}\n\nexport const IRenderingEngine = DI.createInterface<IRenderingEngine>()\n  .withDefault(x => x.singleton(RenderingEngine));\n\nconst defaultCompilerName = 'default';\n\n@inject(IContainer, IChangeSet, IObserverLocator, IEventManager, IExpressionParser, all(ITemplateCompiler))\n/*@internal*/\nexport class RenderingEngine implements IRenderingEngine {\n  private templateLookup: Map<TemplateDefinition, ITemplate> = new Map();\n  private factoryLookup: Map<Immutable<ITemplateSource>, IViewFactory> = new Map();\n  private behaviorLookup: Map<ICustomElementType | ICustomAttributeType, RuntimeBehavior> = new Map();\n  private compilers: Record<string, ITemplateCompiler>;\n\n  constructor(\n    private container: IContainer,\n    private changeSet: IChangeSet,\n    private observerLocator: IObserverLocator,\n    private eventManager: IEventManager,\n    private parser: IExpressionParser,\n    templateCompilers: ITemplateCompiler[]\n  ) {\n    this.compilers = templateCompilers.reduce(\n      (acc, item) => {\n        acc[item.name] = item;\n        return acc;\n      },\n      Object.create(null)\n    );\n  }\n\n  public getElementTemplate(definition: TemplateDefinition, componentType?: ICustomElementType): ITemplate {\n    if (!definition) {\n      return null;\n    }\n\n    let found = this.templateLookup.get(definition);\n\n    if (!found) {\n      found = this.templateFromSource(definition);\n\n      //If the element has a view, support Recursive Components by adding self to own view template container.\n      if (found.renderContext !== null && componentType) {\n        componentType.register(<ExposedContext>found.renderContext);\n      }\n\n      this.templateLookup.set(definition, found);\n    }\n\n    return found;\n  }\n\n  public getViewFactory(definition: Immutable<ITemplateSource>, parentContext?: IRenderContext): IViewFactory {\n    if (!definition) {\n      return null;\n    }\n\n    let found = this.factoryLookup.get(definition);\n\n    if (!found) {\n      const validSource = createDefinition(definition);\n      found = this.factoryFromSource(validSource, parentContext);\n      this.factoryLookup.set(definition, found);\n    }\n\n    return found;\n  }\n\n  public applyRuntimeBehavior(type: ICustomAttributeType | ICustomElementType, instance: ICustomAttribute | ICustomElement): void {\n    let found = this.behaviorLookup.get(type);\n\n    if (!found) {\n      found = RuntimeBehavior.create(type, instance);\n      this.behaviorLookup.set(type, found);\n    }\n\n    found.applyTo(instance, this.changeSet);\n  }\n\n  public createRenderer(context: IRenderContext): IRenderer {\n    return new Renderer(\n      context,\n      this.observerLocator,\n      this.eventManager,\n      this.parser,\n      this\n    );\n  }\n\n  private factoryFromSource(definition: TemplateDefinition, parentContext?: IRenderContext): IViewFactory {\n    const template = this.templateFromSource(definition, parentContext);\n    const factory = new ViewFactory(definition.name, template);\n    factory.setCacheSize(definition.cache, true);\n    return factory;\n  }\n\n  private templateFromSource(definition: TemplateDefinition, parentContext?: IRenderContext): ITemplate {\n    parentContext = parentContext || <ExposedContext>this.container;\n\n    if (definition && definition.templateOrNode) {\n      if (definition.build.required) {\n        const compilerName = definition.build.compiler || defaultCompilerName;\n        const compiler = this.compilers[compilerName];\n\n        if (!compiler) {\n          throw Reporter.error(20, compilerName);\n        }\n\n        definition = compiler.compile(<ITemplateSource>definition, new RuntimeCompilationResources(<ExposedContext>parentContext), ViewCompileFlags.surrogate);\n      }\n\n      return new CompiledTemplate(this, parentContext, definition);\n    }\n\n    return noViewTemplate;\n  }\n}\n\n/*@internal*/\nexport function createDefinition(definition: Immutable<ITemplateSource>): TemplateDefinition {\n  return {\n    name: definition.name || 'Unnamed Template',\n    templateOrNode: definition.templateOrNode,\n    cache: definition.cache || 0,\n    build: definition.build || {\n      required: false\n    },\n    bindables: definition.bindables || PLATFORM.emptyObject,\n    instructions: definition.instructions ? PLATFORM.toArray(definition.instructions) : PLATFORM.emptyArray,\n    dependencies: definition.dependencies ? PLATFORM.toArray(definition.dependencies) : PLATFORM.emptyArray,\n    surrogates: definition.surrogates ? PLATFORM.toArray(definition.surrogates) : PLATFORM.emptyArray,\n    containerless: definition.containerless || false,\n    shadowOptions: definition.shadowOptions || null,\n    hasSlots: definition.hasSlots || false\n  };\n}\n\n/*@internal*/\nexport class RuntimeCompilationResources implements IResourceDescriptions {\n  constructor(private context: ExposedContext) {}\n\n  public find<TSource>(kind: IResourceKind<TSource>, name: string): ResourceDescription<TSource> | null {\n    const key = kind.keyFrom(name);\n    const resolver = this.context.getResolver<TSource>(key, false);\n\n    if (resolver !== null && resolver.getFactory) {\n      const factory = resolver.getFactory(this.context);\n\n      if (factory !== null) {\n        return (factory.type as IResourceType<TSource>).description || null;\n      }\n    }\n\n    return null;\n  }\n\n  public create<TSource, TType extends IResourceType<TSource>>(kind: IResourceKind<TSource, TType>, name: string): InstanceType<TType> | null {\n    const key = kind.keyFrom(name);\n    if (this.context.has(key, false)) {\n      return this.context.get(key) || null;\n    }\n    return null;\n  }\n}\n","import { Immutable, Omit } from '@au-test/kernel';\nimport { ICustomElementType, IHydrateElementInstruction, IRenderable, IRenderingEngine, ITemplate } from '.';\nimport { BindingFlags, IBindScope } from '../binding';\nimport { INode, INodeSequence } from '../dom';\n\nexport enum LifecycleFlags {\n  none                = 0b0_001,\n  noTasks             = 0b0_010,\n  unbindAfterDetached = 0b0_100,\n}\n\nexport interface IAttach {\n  readonly $isAttached: boolean;\n  $attach(encapsulationSource: INode, lifecycle: IAttachLifecycle): void;\n  $detach(lifecycle: IDetachLifecycle): void;\n  $cache(): void;\n}\n\nexport interface IElementTemplateProvider {\n  getElementTemplate(renderingEngine: IRenderingEngine, customElementType: ICustomElementType): ITemplate;\n}\n\n/**\n * Defines optional lifecycle hooks that will be called only when they are implemented.\n */\nexport interface ILifecycleHooks extends Partial<Omit<IRenderable, '$addNodes' | '$removeNodes'>> {\n  /**\n   * Only applies to `@customElement`. This hook is not invoked for `@customAttribute`s\n   *\n   * Called during `$hydrate`, after `this.$scope` and `this.$projector` are set.\n   *\n   * If this hook is implemented, it will be used instead of `renderingEngine.getElementTemplate`.\n   * This allows you to completely override the default rendering behavior.\n   *\n   * In addition to providing the return value, it is the responsibility of the implementer to:\n   * - Populate `this.$bindables` with any Bindings, child Views, custom elements and custom attributes\n   * - Populate `this.$attachables` with any child Views, custom elements and custom attributes\n   *\n   * @param host The DOM node that declares this custom element\n   * @param parts Replaceable parts, if any\n   *\n   * @returns Either an instance of `INodeSequence` with the nodes that need to be appended to the host,\n   * or an implementation of `IElementTemplateProvider`\n   *\n   * @description\n   * This is the first \"hydrate\" lifecycle hook. It happens only once per instance (contrary to bind/attach\n   * which can happen many times per instance), though it can happen many times per type (once for each instance)\n   */\n  render?(host: INode, parts: Immutable<Pick<IHydrateElementInstruction, 'parts'>>): IElementTemplateProvider | INodeSequence;\n\n  /**\n   * Called at the end of `$hydrate`.\n   *\n   * The following key properties are now assigned and initialized (see `IRenderable` for more detail):\n   * - `this.$bindables`\n   * - `this.$attachables`\n   * - `this.$scope` (null if this is a custom attribute, or contains the view model if this is a custom element)\n   * - `this.$nodes`\n   *\n   * @description\n   * This is the second and last \"hydrate\" lifecycle hook (after `render`). It happens only once per instance (contrary to bind/attach\n   * which can happen many times per instance), though it can happen many times per type (once for each instance)\n   *\n   * This hook is called right before the `$bind` lifecycle starts, making this the last opportunity\n   * for any high-level post processing on initialized properties.\n   */\n  created?(): void;\n\n  /**\n   * Called at the start of `$bind`, before this instance and its children (if any) are bound.\n   *\n   * - `this.$isBound` is false.\n   * - `this.$scope` is initialized.\n   *\n   * @param flags Contextual information about the lifecycle, such as what triggered it.\n   * Some uses for this hook:\n   * - `flags & BindingFlags.fromStartTask`: the Aurelia app is starting (this is the initial bind)\n   * - `flags & BindingFlags.fromBind`: this is a normal `$bind` lifecycle\n   * - `flags & BindingFlags.updateTargetInstance`: this `$bind` was triggered by some upstream observer and is not a real `$bind` lifecycle\n   * - `flags & BindingFlags.fromFlushChanges` (only occurs in conjunction with updateTargetInstance): the update was queued to a `ChangeSet` which is now being flushed\n   *\n   * @description\n   * This is the first \"create\" lifecycle hook of the hooks that can occur multiple times per instance,\n   * and the third lifecycle hook (after `render` and `created`) of the very first lifecycle.\n   */\n  binding?(flags: BindingFlags): void;\n\n  /**\n   * Called at the end of `$bind`, after this instance and its children (if any) are bound.\n   *\n   * - `$isBound` is true.\n   * - `this.$scope` is initialized.\n   *\n   * @param flags Contextual information about the lifecycle, such as what triggered it.\n   * Some uses for this hook:\n   * - `flags & BindingFlags.fromStartTask`: the Aurelia app is starting (this is the initial bind)\n   * - `flags & BindingFlags.fromBind`: this is a normal `$bind` lifecycle\n   * - `flags & BindingFlags.updateTargetInstance`: this `$bind` was triggered by some upstream observer and is not a real `$bind` lifecycle\n   * - `flags & BindingFlags.fromFlushChanges` (only occurs in conjunction with updateTargetInstance): the update was queued to a `ChangeSet` which is now being flushed\n   *\n   * @description\n   * This is the second \"create\" lifecycle hook (after `binding`) of the hooks that can occur multiple times per instance,\n   * and the fourth lifecycle hook (after `render`, `created` and `binding`) of the very first lifecycle.\n   */\n  bound?(flags: BindingFlags): void;\n\n  /**\n   * Called at the start of `$attach`, before this instance and its children (if any) are attached.\n   *\n   * `$isAttached` is false.\n   *\n   * @param encapsulationSource Ask Rob.\n   * @param lifecycle Utility that encapsulates the attach sequence for a hierarchy of attachables and guarantees the correct attach order.\n   *\n   * @description\n   * This is the third \"create\" lifecycle hook (after `binding` and `bound`) of the hooks that can occur multiple times per instance,\n   * and the fifth lifecycle hook (after `render`, `created`, `binding` and `bound`) of the very first lifecycle\n   *\n   * This is the time to add any (sync or async) tasks (e.g. animations) to the lifecycle that need to happen before\n   * the nodes are added to the DOM.\n   */\n  attaching?(encapsulationSource: INode, lifecycle: IAttachLifecycle): void;\n\n  /**\n   * Called at the end of `$attach`, after this instance and its children (if any) are attached.\n   *\n   * - `$isAttached` is true.\n   *\n   * @description\n   * This is the fourth (and last) \"create\" lifecycle hook (after `binding`, `bound` and `attaching`) of the hooks that can occur\n   * multiple times per instance, and the sixth lifecycle hook (after `render`, `created`, `binding`, `bound` and `attaching`)\n   * of the very first lifecycle\n   *\n   * This instance and its children (if any) can be assumed\n   * to be fully initialized, bound, rendered, added to the DOM and ready for use.\n   */\n  attached?(): void;\n\n  /**\n   * Called at the start of `$detach`, before this instance and its children (if any) are detached.\n   *\n   * - `$isAttached` is true.\n   *\n   * @param lifecycle Utility that encapsulates the detach sequence for a hierarchy of attachables and guarantees the correct detach order.\n   *\n   * @description\n   * This is the first \"cleanup\" lifecycle hook.\n   *\n   * This is the time to add any (sync or async) tasks (e.g. animations) to the lifecycle that need to happen before\n   * the nodes are removed from the DOM.\n   */\n  detaching?(lifecycle: IDetachLifecycle): void;\n\n  /**\n   * Called during `$removeNodes` (which happens during `$detach`), specifically after the\n   * `$nodes` are removed from the DOM, but before the view is actually added to the cache.\n   *\n   * @description\n   * This is the second \"cleanup\" lifecycle hook.\n   *\n   * This lifecycle is invoked if and only if the `ViewFactory` that created the `View` allows the view to be cached.\n   *\n   * Usually this hook is not invoked unless you explicitly set the cache size to to something greater than zero\n   * on the resource description.\n   */\n  caching?(): void;\n\n  /**\n   * Called at the end of `$detach`, after this instance and its children (if any) are detached.\n   *\n   * - `$isAttached` is false.\n   *\n   * @description\n   * This is the third \"cleanup\" lifecycle hook (after `detaching` and `caching`).\n   *\n   * The `$nodes` are now removed from the DOM and the `View` (if possible) is returned to cache.\n   *\n   * If no `$unbind` lifecycle is queued, this is the last opportunity to make state changes before the lifecycle ends.\n   */\n  detached?(): void;\n\n  /**\n   * Called at the start of `$unbind`, before this instance and its children (if any) are unbound.\n   *\n   * - `this.$isBound` is true.\n   * - `this.$scope` is still available.\n   *\n   * @param flags Contextual information about the lifecycle, such as what triggered it.\n   * Some uses for this hook:\n   * - `flags & BindingFlags.fromBind`: the component is just switching scope\n   * - `flags & BindingFlags.fromUnbind`: the component is really disposing\n   * - `flags & BindingFlags.fromStopTask`: the Aurelia app is stopping\n   *\n   * @description\n   * This is the fourth \"cleanup\" lifecycle hook (after `detaching`, `caching` and `detached`)\n   *\n   * Last opportunity to perform any source or target updates before the bindings are disconnected.\n   *\n   */\n  unbinding?(flags: BindingFlags): void;\n\n  /**\n   * Called at the end of `$unbind`, after this instance and its children (if any) are unbound.\n   *\n   * - `this.$isBound` is false at this point.\n   *\n   * - `this.$scope` may not be available anymore (unless it's a `@customElement`)\n   *\n   * @param flags Contextual information about the lifecycle, such as what triggered it.\n   * Some uses for this hook:\n   * - `flags & BindingFlags.fromBind`: the component is just switching scope\n   * - `flags & BindingFlags.fromUnbind`: the component is really disposing\n   * - `flags & BindingFlags.fromStopTask`: the Aurelia app is stopping\n   *\n   * @description\n   * This is the fifth (and last) \"cleanup\" lifecycle hook (after `detaching`, `caching`, `detached`\n   * and `unbinding`).\n   *\n   * The lifecycle either ends here, or starts at `$bind` again.\n   */\n  unbound?(flags: BindingFlags): void;\n}\n\nexport interface ILifecycleTask {\n  readonly done: boolean;\n  canCancel(): boolean;\n  cancel(): void;\n  wait(): Promise<void>;\n}\n\nexport interface IAttachLifecycleController {\n  attach(requestor: IAttach): IAttachLifecycleController;\n  end(): ILifecycleTask;\n}\n\ntype LifecycleAttachable = {\n  /*@internal*/\n  $nextAttached?: LifecycleAttachable;\n  attached(): void;\n};\n\ntype LifecycleNodeAddable = Pick<IRenderable, '$addNodes'> & {\n  /*@internal*/\n  $nextAddNodes?: LifecycleNodeAddable;\n};\n\nexport interface IAttachLifecycle {\n  readonly flags: LifecycleFlags;\n  registerTask(task: ILifecycleTask): void;\n  createChild(): IAttachLifecycle;\n  queueAddNodes(requestor: LifecycleNodeAddable): void;\n  queueAttachedCallback(requestor: LifecycleAttachable): void;\n}\n\nexport interface IDetachLifecycleController {\n  detach(requestor: IAttach): IDetachLifecycleController;\n  end(): ILifecycleTask;\n}\n\ntype LifecycleDetachable = {\n  /*@internal*/\n  $nextDetached?: LifecycleDetachable;\n  detached(): void;\n};\n\ntype LifecycleNodeRemovable = Pick<IRenderable, '$removeNodes'> & {\n  /*@internal*/\n  $nextRemoveNodes?: LifecycleNodeRemovable;\n};\n\nexport class AggregateLifecycleTask implements ILifecycleTask {\n  public done: boolean = true;\n\n  /*@internal*/\n  public owner: AttachLifecycleController | DetachLifecycleController = null;\n\n  private tasks: ILifecycleTask[] = [];\n  private waiter: Promise<void> = null;\n  private resolve: () => void = null;\n\n  public addTask(task: ILifecycleTask): void {\n    if (!task.done) {\n      this.done = false;\n      this.tasks.push(task);\n      task.wait().then(() => this.tryComplete());\n    }\n  }\n\n  public canCancel(): boolean {\n    if (this.done) {\n      return false;\n    }\n\n    return this.tasks.every(x => x.canCancel());\n  }\n\n  public cancel(): void {\n    if (this.canCancel()) {\n      this.tasks.forEach(x => x.cancel());\n      this.done = false;\n    }\n  }\n\n  public wait(): Promise<void> {\n    if (this.waiter === null) {\n      if (this.done) {\n        this.waiter = Promise.resolve();\n      } else {\n        // tslint:disable-next-line:promise-must-complete\n        this.waiter = new Promise((resolve) => this.resolve = resolve);\n      }\n    }\n\n    return this.waiter;\n  }\n\n  private tryComplete(): void {\n    if (this.done) {\n      return;\n    }\n\n    if (this.tasks.every(x => x.done)) {\n      this.complete(true);\n    }\n  }\n\n  private complete(notCancelled: boolean): void {\n    this.done = true;\n\n    if (notCancelled && this.owner !== null) {\n      this.owner.processAll();\n    }\n\n    if (this.resolve !== null) {\n      this.resolve();\n    }\n  }\n}\n\nexport interface IDetachLifecycle {\n  readonly flags: LifecycleFlags;\n  registerTask(task: ILifecycleTask): void;\n  createChild(): IDetachLifecycle;\n  queueRemoveNodes(requestor: LifecycleNodeRemovable): void;\n  queueDetachedCallback(requestor: LifecycleDetachable): void;\n}\n\n/*@internal*/\nexport class AttachLifecycleController implements IAttachLifecycle, IAttachLifecycleController {\n  /*@internal*/\n  public $nextAddNodes: LifecycleNodeAddable;\n  /*@internal*/\n  public $nextAttached: LifecycleAttachable;\n\n  private attachedHead: LifecycleAttachable;\n  private attachedTail: LifecycleAttachable;\n  private addNodesHead: LifecycleNodeAddable;\n  private addNodesTail: LifecycleNodeAddable;\n  private task: AggregateLifecycleTask = null;\n\n  constructor(\n    public readonly flags: LifecycleFlags,\n    private parent: AttachLifecycleController = null,\n    private encapsulationSource: INode = null\n  ) {\n    this.addNodesTail = this.addNodesHead = this;\n    this.attachedTail = this.attachedHead = this;\n  }\n\n  public attach(requestor: IAttach): IAttachLifecycleController {\n    requestor.$attach(this.encapsulationSource, this);\n    return this;\n  }\n\n  public queueAddNodes(requestor: LifecycleNodeAddable): void {\n    this.addNodesTail.$nextAddNodes = requestor;\n    this.addNodesTail = requestor;\n  }\n\n  public queueAttachedCallback(requestor: LifecycleAttachable): void {\n    this.attachedTail.$nextAttached = requestor;\n    this.attachedTail = requestor;\n  }\n\n  public registerTask(task: ILifecycleTask): void {\n    if (this.parent !== null) {\n      this.parent.registerTask(task);\n    } else {\n      if (this.task === null) {\n        this.task = new AggregateLifecycleTask();\n      }\n      this.task.addTask(task);\n    }\n  }\n\n  public createChild(): IAttachLifecycle {\n    const lifecycle = new AttachLifecycleController(this.flags, this);\n    this.queueAddNodes(lifecycle);\n    this.queueAttachedCallback(lifecycle);\n    return lifecycle;\n  }\n\n  public end(): ILifecycleTask {\n    if (this.task !== null && !this.task.done) {\n      this.task.owner = this;\n      return this.task;\n    }\n\n    this.processAll();\n\n    return Lifecycle.done;\n  }\n\n  /*@internal*/\n  public processAll(): void {\n    this.processAddNodes();\n    this.processAttachedCallbacks();\n  }\n\n  /*@internal*/\n  public $addNodes(): void {\n    if (this.parent !== null) {\n      this.processAddNodes();\n    }\n  }\n\n  /*@internal*/\n  public attached(): void {\n    if (this.parent !== null) {\n      this.processAttachedCallbacks();\n    }\n  }\n\n  private processAddNodes(): void {\n    let currentAddNodes = this.addNodesHead;\n    let nextAddNodes;\n\n    while (currentAddNodes) {\n      currentAddNodes.$addNodes();\n      nextAddNodes = currentAddNodes.$nextAddNodes;\n      currentAddNodes.$nextAddNodes = null;\n      currentAddNodes = nextAddNodes;\n    }\n  }\n\n  private processAttachedCallbacks(): void {\n    let currentAttached = this.attachedHead;\n    let nextAttached;\n\n    while (currentAttached) {\n      currentAttached.attached();\n      nextAttached = currentAttached.$nextAttached;\n      currentAttached.$nextAttached = null;\n      currentAttached = nextAttached;\n    }\n  }\n}\n\n/*@internal*/\nexport class DetachLifecycleController implements IDetachLifecycle, IDetachLifecycleController {\n  /*@internal*/\n  public $nextRemoveNodes: LifecycleNodeRemovable;\n  /*@internal*/\n  public $nextDetached: LifecycleDetachable;\n\n  private detachedHead: LifecycleDetachable; //LOL\n  private detachedTail: LifecycleDetachable;\n  private removeNodesHead: LifecycleNodeRemovable;\n  private removeNodesTail: LifecycleNodeRemovable;\n  private task: AggregateLifecycleTask = null;\n  private allowNodeRemoves: boolean = true;\n\n  constructor(\n    public readonly flags: LifecycleFlags,\n    private parent: DetachLifecycleController = null\n  ) {\n    this.detachedTail = this.detachedHead = this;\n    this.removeNodesTail = this.removeNodesHead = this;\n  }\n\n  public detach(requestor: IAttach): IDetachLifecycleController {\n    this.allowNodeRemoves = true;\n\n    if (requestor.$isAttached) {\n      requestor.$detach(this);\n    } else if (isNodeRemovable(requestor)) {\n      this.queueRemoveNodes(requestor);\n    }\n\n    return this;\n  }\n\n  public queueRemoveNodes(requestor: LifecycleNodeRemovable): void {\n    if (this.allowNodeRemoves) {\n      this.removeNodesTail.$nextRemoveNodes = requestor;\n      this.removeNodesTail = requestor;\n      this.allowNodeRemoves = false; // only remove roots\n    }\n  }\n\n  public queueDetachedCallback(requestor: LifecycleDetachable): void {\n    this.detachedTail.$nextDetached = requestor;\n    this.detachedTail = requestor;\n  }\n\n  public registerTask(task: ILifecycleTask): void {\n    if (this.parent !== null) {\n      this.parent.registerTask(task);\n    } else {\n      if (this.task === null) {\n        this.task = new AggregateLifecycleTask();\n      }\n      this.task.addTask(task);\n    }\n  }\n\n  public createChild(): IDetachLifecycle {\n    const lifecycle = new DetachLifecycleController(this.flags, this);\n    this.queueRemoveNodes(lifecycle);\n    this.queueDetachedCallback(lifecycle);\n    return lifecycle;\n  }\n\n  public end(): ILifecycleTask {\n    if (this.task !== null && !this.task.done) {\n      this.task.owner = this;\n      return this.task;\n    }\n\n    this.processAll();\n\n    return Lifecycle.done;\n  }\n\n  /*@internal*/\n  public $removeNodes(): void {\n    if (this.parent !== null) {\n      this.processRemoveNodes();\n    }\n  }\n\n  /*@internal*/\n  public detached(): void {\n    if (this.parent !== null) {\n      this.processDetachedCallbacks();\n    }\n  }\n\n  /*@internal*/\n  public processAll(): void {\n    this.processRemoveNodes();\n    this.processDetachedCallbacks();\n  }\n\n  private processRemoveNodes(): void {\n    let currentRemoveNodes = this.removeNodesHead;\n\n    if (this.flags & LifecycleFlags.unbindAfterDetached) {\n      while (currentRemoveNodes) {\n        currentRemoveNodes.$removeNodes();\n        currentRemoveNodes = currentRemoveNodes.$nextRemoveNodes;\n      }\n    } else {\n      let nextRemoveNodes;\n\n      while (currentRemoveNodes) {\n        currentRemoveNodes.$removeNodes();\n        nextRemoveNodes = currentRemoveNodes.$nextRemoveNodes;\n        currentRemoveNodes.$nextRemoveNodes = null;\n        currentRemoveNodes = nextRemoveNodes;\n      }\n    }\n  }\n\n  private processDetachedCallbacks(): void {\n    let currentDetached = this.detachedHead;\n    let nextDetached;\n\n    while (currentDetached) {\n      currentDetached.detached();\n      nextDetached = currentDetached.$nextDetached;\n      currentDetached.$nextDetached = null;\n      currentDetached = nextDetached;\n    }\n\n    if (this.flags & LifecycleFlags.unbindAfterDetached) {\n      let currentRemoveNodes = this.removeNodesHead;\n      let nextRemoveNodes;\n\n      while (currentRemoveNodes) {\n        if (isUnbindable(currentRemoveNodes)) {\n          currentRemoveNodes.$unbind(BindingFlags.fromUnbind);\n        }\n\n        nextRemoveNodes = currentRemoveNodes.$nextRemoveNodes;\n        currentRemoveNodes.$nextRemoveNodes = null;\n        currentRemoveNodes = nextRemoveNodes;\n      }\n    }\n  }\n}\n\nfunction isNodeRemovable(requestor: object): requestor is LifecycleNodeRemovable {\n  return '$removeNodes' in requestor;\n}\n\nfunction isUnbindable(requestor: object): requestor is IBindScope {\n  return '$unbind' in requestor;\n}\n\nexport const Lifecycle = {\n  beginAttach(encapsulationSource: INode, flags: LifecycleFlags): IAttachLifecycleController {\n    return new AttachLifecycleController(flags, null, encapsulationSource);\n  },\n\n  beginDetach(flags: LifecycleFlags): IDetachLifecycleController {\n    return new DetachLifecycleController(flags);\n  },\n\n  done: {\n    done: true,\n    canCancel(): boolean { return false; },\n    // tslint:disable-next-line:no-empty\n    cancel(): void {},\n    wait(): Promise<void> { return Promise.resolve(); }\n  }\n};\n","import { PLATFORM } from '@au-test/kernel';\nimport { IScope } from '../../binding/binding-context';\nimport { BindingFlags } from '../../binding/binding-flags';\nimport { INode } from '../../dom';\nimport {\n  AggregateLifecycleTask,\n  IAttachLifecycle,\n  IDetachLifecycle,\n  ILifecycleTask,\n  Lifecycle,\n  LifecycleFlags\n} from '../lifecycle';\nimport { IView } from '../view';\n\nexport class CompositionCoordinator {\n  public onSwapComplete: () => void = PLATFORM.noop;\n\n  private queue: (IView | PromiseSwap)[] = null;\n  private currentView: IView = null;\n  private swapTask: ILifecycleTask = Lifecycle.done;\n  private encapsulationSource: INode;\n  private scope: IScope;\n  private isBound: boolean = false;\n  private isAttached: boolean = false;\n\n  public compose(value: IView | Promise<IView>): void {\n    if (this.swapTask.done) {\n      if (value instanceof Promise) {\n        this.enqueue(new PromiseSwap(this, value));\n        this.processNext();\n      } else {\n        this.swap(value);\n      }\n    } else {\n      if (value instanceof Promise) {\n        this.enqueue(new PromiseSwap(this, value));\n      } else {\n        this.enqueue(value);\n      }\n\n      if (this.swapTask.canCancel()) {\n        this.swapTask.cancel();\n      }\n    }\n  }\n\n  public binding(flags: BindingFlags, scope: IScope): void {\n    this.scope = scope;\n    this.isBound = true;\n\n    if (this.currentView !== null) {\n      this.currentView.$bind(flags, scope);\n    }\n  }\n\n  public attaching(encapsulationSource: INode, lifecycle: IAttachLifecycle): void {\n    this.encapsulationSource = encapsulationSource;\n    this.isAttached = true;\n\n    if (this.currentView !== null) {\n      this.currentView.$attach(encapsulationSource, lifecycle);\n    }\n  }\n\n  public detaching(lifecycle: IDetachLifecycle): void {\n    this.isAttached = false;\n\n    if (this.currentView !== null) {\n      this.currentView.$detach(lifecycle);\n    }\n  }\n\n  public unbinding(flags: BindingFlags): void {\n    this.isBound = false;\n\n    if (this.currentView !== null) {\n      this.currentView.$unbind(flags);\n    }\n  }\n\n  public caching(): void {\n    this.currentView = null;\n  }\n\n  private enqueue(view: IView | PromiseSwap): void {\n    if (this.queue === null) {\n      this.queue = [];\n    }\n\n    this.queue.push(view);\n  }\n\n  private swap(view: IView): void {\n    if (this.currentView === view) {\n      return;\n    }\n\n    const swapTask = new AggregateLifecycleTask();\n\n    swapTask.addTask(\n      this.detachAndUnbindCurrentView(\n        this.isAttached\n          ? LifecycleFlags.none\n          : LifecycleFlags.noTasks\n      )\n    );\n\n    this.currentView = view;\n\n    swapTask.addTask(\n      this.bindAndAttachCurrentView()\n    );\n\n    if (swapTask.done) {\n      this.swapTask = Lifecycle.done;\n      this.onSwapComplete();\n    } else {\n      this.swapTask = swapTask;\n      this.swapTask.wait().then(() => {\n        this.onSwapComplete();\n        this.processNext();\n      });\n    }\n  }\n\n  private processNext(): void {\n    if (this.queue !== null && this.queue.length > 0) {\n      const next = this.queue.pop();\n      this.queue.length = 0;\n\n      if (PromiseSwap.is(next)) {\n        this.swapTask = next.start();\n      } else {\n        this.swap(next);\n      }\n    } else {\n      this.swapTask = Lifecycle.done;\n    }\n  }\n\n  private detachAndUnbindCurrentView(detachFlags: LifecycleFlags): ILifecycleTask {\n    if (this.currentView === null) {\n      return Lifecycle.done;\n    }\n\n    return Lifecycle.beginDetach(detachFlags | LifecycleFlags.unbindAfterDetached)\n      .detach(this.currentView)\n      .end();\n  }\n\n  private bindAndAttachCurrentView(): ILifecycleTask {\n    if (this.currentView === null) {\n      return Lifecycle.done;\n    }\n\n    if (this.isBound) {\n      this.currentView.$bind(BindingFlags.fromBindableHandler, this.scope);\n    }\n\n    if (this.isAttached) {\n      return Lifecycle.beginAttach(this.encapsulationSource, LifecycleFlags.none)\n        .attach(this.currentView)\n        .end();\n    }\n\n    return Lifecycle.done;\n  }\n}\n\nclass PromiseSwap implements ILifecycleTask {\n  public done: boolean = false;\n  private isCancelled: boolean = false;\n\n  constructor(\n    private coordinator: CompositionCoordinator,\n    private promise: Promise<IView>\n  ) {}\n\n  public static is(object: object): object is PromiseSwap {\n    return 'start' in object;\n  }\n\n  public start(): ILifecycleTask {\n    if (this.isCancelled) {\n      return Lifecycle.done;\n    }\n\n    this.promise = this.promise.then(x => {\n      this.onResolve(x);\n      return x;\n    });\n\n    return this;\n  }\n\n  public canCancel(): boolean {\n    return !this.done;\n  }\n\n  public cancel(): void {\n    if (this.canCancel()) {\n      this.isCancelled = true;\n    }\n  }\n\n  public wait(): Promise<void> {\n    return this.promise as any;\n  }\n\n  private onResolve(value: any): void {\n    if (this.isCancelled) {\n      return;\n    }\n\n    this.done = true;\n    this.coordinator.compose(value);\n  }\n}\n","import { Constructable, Immutable, inject } from '@au-test/kernel';\nimport { BindingFlags } from '../../binding/binding-flags';\nimport { INode } from '../../dom';\nimport { bindable } from '../bindable';\nimport { createElement, PotentialRenderable } from '../create-element';\nimport { customElement, ICustomElement } from '../custom-element';\nimport {\n  IHydrateElementInstruction,\n  ITargetedInstruction,\n  ITemplateSource,\n  TargetedInstruction,\n  TemplateDefinition\n} from '../instructions';\nimport { IAttachLifecycle, IDetachLifecycle } from '../lifecycle';\nimport { IRenderable } from '../renderable';\nimport { IRenderingEngine } from '../rendering-engine';\nimport { IView, IViewFactory } from '../view';\nimport { CompositionCoordinator } from './composition-coordinator';\n\nconst composeSource: ITemplateSource = {\n  name: 'au-compose',\n  containerless: true\n};\n\nconst composeProps = ['subject', 'composing'];\n\ntype Subject = IViewFactory | IView | PotentialRenderable | Constructable | TemplateDefinition;\n\nexport interface Compose extends ICustomElement {}\n@customElement(composeSource)\n@inject(IRenderable, ITargetedInstruction, IRenderingEngine)\nexport class Compose {\n  @bindable public subject: Subject | Promise<Subject> = null;\n  @bindable public composing: boolean = false;\n\n  private properties: Record<string, TargetedInstruction> = null;\n  private coordinator: CompositionCoordinator;\n  private lastSubject: Subject | Promise<Subject> = null;\n\n  constructor(\n    private renderable: IRenderable,\n    instruction: Immutable<IHydrateElementInstruction>,\n    private renderingEngine: IRenderingEngine\n  ) {\n    this.coordinator = new CompositionCoordinator();\n    this.coordinator.onSwapComplete = () => {\n      this.composing = false;\n    };\n\n    this.properties = instruction.instructions\n      .filter((x: any) => !composeProps.includes(x.dest))\n      .reduce((acc, item: any) => {\n        if (item.dest) {\n          acc[item.dest] = item;\n        }\n\n        return acc;\n      }, {});\n  }\n\n  public binding(flags: BindingFlags): void {\n    this.startComposition(this.subject);\n    this.coordinator.binding(flags, this.$scope);\n  }\n\n  public attaching(encapsulationSource: INode, lifecycle: IAttachLifecycle): void {\n    this.coordinator.attaching(encapsulationSource, lifecycle);\n  }\n\n  public detaching(lifecycle: IDetachLifecycle): void {\n    this.coordinator.detaching(lifecycle);\n  }\n\n  public unbinding(flags: BindingFlags): void {\n    this.lastSubject = null;\n    this.coordinator.unbinding(flags);\n  }\n\n  public caching(): void {\n    this.coordinator.caching();\n  }\n\n  public subjectChanged(newValue: any): void {\n    this.startComposition(newValue);\n  }\n\n  private startComposition(subject: any): void {\n    if (this.lastSubject === subject) {\n      return;\n    }\n\n    this.lastSubject = subject;\n\n    if (subject instanceof Promise) {\n      subject = subject.then(x => this.resolveView(x));\n    } else {\n      subject = this.resolveView(subject);\n    }\n\n    this.composing = true;\n    this.coordinator.compose(subject);\n  }\n\n  private resolveView(subject: Subject): IView {\n    const view = this.provideViewFor(subject);\n\n    if (view) {\n      view.mount(this.$projector.host);\n      view.lockScope(this.renderable.$scope);\n      return view;\n    }\n\n    return null;\n  }\n\n  private provideViewFor(subject: Subject): IView | null {\n    if (!subject) {\n      return null;\n    }\n\n    if ('templateOrNode' in subject) { // Raw Template Definition\n      return this.renderingEngine.getViewFactory(\n        subject,\n        this.renderable.$context\n      ).create();\n    }\n\n    if ('create' in subject) { // IViewFactory\n      return subject.create();\n    }\n\n    if ('createView' in subject) { // PotentialRenderable\n      return subject.createView(\n        this.renderingEngine,\n        this.renderable.$context\n      );\n    }\n\n    if ('lockScope' in subject) { // IView\n      return subject;\n    }\n\n    // Constructable (Custom Element Constructor)\n    return createElement(\n      subject,\n      this.properties,\n      this.$projector.children\n    ).createView(\n      this.renderingEngine,\n      this.renderable.$context\n    );\n  }\n}\n","import { inject } from '@au-test/kernel';\nimport { BindingFlags } from '../../binding/binding-flags';\nimport { DOM, INode, IRenderLocation } from '../../dom';\nimport { bindable } from '../bindable';\nimport { ICustomAttribute, templateController } from '../custom-attribute';\nimport { IAttachLifecycle, IDetachLifecycle } from '../lifecycle';\nimport { IView, IViewFactory } from '../view';\nimport { CompositionCoordinator } from './composition-coordinator';\n\nexport interface If extends ICustomAttribute {}\n@templateController('if')\n@inject(IViewFactory, IRenderLocation)\nexport class If {\n  @bindable public value: boolean = false;\n\n  public elseFactory: IViewFactory = null;\n\n  public ifView: IView = null;\n  public elseView: IView = null;\n  public coordinator: CompositionCoordinator;\n\n  constructor(public ifFactory: IViewFactory, public location: IRenderLocation) {\n    this.coordinator = new CompositionCoordinator();\n  }\n\n  public binding(flags: BindingFlags): void {\n    this.updateView();\n    this.coordinator.binding(flags, this.$scope);\n  }\n\n  public attaching(encapsulationSource: INode, lifecycle: IAttachLifecycle): void {\n    this.coordinator.attaching(encapsulationSource, lifecycle);\n  }\n\n  public detaching(lifecycle: IDetachLifecycle): void {\n    this.coordinator.detaching(lifecycle);\n  }\n\n  public unbinding(flags: BindingFlags): void {\n    this.coordinator.unbinding(flags);\n  }\n\n  public caching(): void {\n    if (this.ifView !== null && this.ifView.release()) {\n      this.ifView = null;\n    }\n\n    if (this.elseView !== null && this.elseView.release()) {\n      this.elseView = null;\n    }\n\n    this.coordinator.caching();\n  }\n\n  public valueChanged(): void {\n    this.updateView();\n  }\n\n  private updateView(): void {\n    let view: IView;\n\n    if (this.value) {\n      view = this.ifView = this.ensureView(this.ifView, this.ifFactory);\n    } else if (this.elseFactory !== null) {\n      view = this.elseView  = this.ensureView(this.elseView, this.elseFactory);\n    } else {\n      view = null;\n    }\n\n    this.coordinator.compose(view);\n  }\n\n  private ensureView(view: IView, factory: IViewFactory): IView {\n    if (view === null) {\n      view = factory.create();\n    }\n\n    view.mount(this.location);\n\n    return view;\n  }\n}\n\n@templateController('else')\n@inject(IViewFactory, IRenderLocation)\nexport class Else {\n  constructor(private factory: IViewFactory, location: IRenderLocation) {\n    DOM.remove(location); // Only the location of the \"if\" is relevant.\n  }\n\n  public link(ifBehavior: If): void {\n    ifBehavior.elseFactory = this.factory;\n  }\n}\n","import { inject } from '@au-test/kernel';\nimport { Binding, BindingContext, BindingFlags, CollectionObserver, ForOfStatement, getCollectionObserver, IBatchedCollectionSubscriber, IChangeSet, IObservedArray, IScope, ObservedCollection, SetterObserver, Scope } from '../../binding';\nimport { INode, IRenderLocation } from '../../dom';\nimport { bindable } from '../bindable';\nimport { ICustomAttribute, templateController } from '../custom-attribute';\nimport { IAttachLifecycle, IDetachLifecycle, Lifecycle, LifecycleFlags } from '../lifecycle';\nimport { IRenderable } from '../renderable';\nimport { IView, IViewFactory } from '../view';\n\nexport interface Repeat<T extends ObservedCollection> extends ICustomAttribute, IBatchedCollectionSubscriber {}\n\nconst batchedChangesFlags = BindingFlags.fromFlushChanges | BindingFlags.fromBind;\n\n@inject(IChangeSet, IRenderLocation, IRenderable, IViewFactory)\n@templateController('repeat')\nexport class Repeat<T extends ObservedCollection = IObservedArray> {\n  @bindable public items: T;\n\n  public $isAttached: boolean;\n  public $isBound: boolean;\n  public $scope: IScope;\n  public $observers: { items: SetterObserver }\n\n  public encapsulationSource: INode = null;\n  public views: IView[] = [];\n  public observer: CollectionObserver = null;\n  public hasPendingInstanceMutation: boolean = false;\n\n  public forOf: ForOfStatement;\n  public local: string;\n\n  constructor(\n    public changeSet: IChangeSet,\n    public location: IRenderLocation,\n    public renderable: IRenderable,\n    public factory: IViewFactory) { }\n\n  public bound(flags: BindingFlags): void {\n    this.forOf = (<Binding[]>this.renderable.$bindables).find(b => b.target === this).sourceExpression as ForOfStatement;\n    this.local = this.forOf.declaration.evaluate(flags, this.$scope, null);\n\n    this.processViews(null, flags);\n    this.checkCollectionObserver();\n  }\n\n  public attaching(encapsulationSource: INode, lifecycle: IAttachLifecycle): void {\n    const { views, location } = this;\n    for (let i = 0, ii = views.length; i < ii; ++i) {\n      const view = views[i];\n      view.mount(location);\n      view.$attach(encapsulationSource, lifecycle);\n    }\n  }\n\n  public detaching(lifecycle: IDetachLifecycle): void {\n    const { views } = this;\n    for (let i = 0, ii = views.length; i < ii; ++i) {\n      const view = views[i];\n      view.$detach(lifecycle);\n      view.release();\n    }\n  }\n\n  public unbound(flags: BindingFlags): void {\n    this.checkCollectionObserver();\n\n    const { views } = this;\n    for (let i = 0, ii = views.length; i < ii; ++i) {\n      const view = views[i];\n      view.$unbind(flags);\n    }\n  }\n\n  // called by SetterObserver (sync)\n  public itemsChanged(newValue: T, oldValue: T, flags: BindingFlags): void {\n    this.checkCollectionObserver();\n    this.processViews(null, flags | BindingFlags.updateTargetInstance);\n  }\n\n  // called by a CollectionObserver (async)\n  public handleBatchedChange(indexMap: number[] | null): void {\n    this.processViews(indexMap, BindingFlags.fromFlushChanges | BindingFlags.updateTargetInstance);\n  }\n\n  // if the indexMap === null, it is an instance mutation, otherwise it's an items mutation\n  private processViews(indexMap: number[] | null, flags: BindingFlags): void {\n    const views = this.views;\n    if (this.$isBound) {\n      const { local, $scope, factory, forOf, items } = this;\n      const oldLength = views.length;\n      const newLength = forOf.count(items);\n      if (oldLength < newLength) {\n        views.length = newLength;\n        for (let i = oldLength; i < newLength; ++i) {\n          views[i] = factory.create();\n        }\n      } else if (newLength < oldLength) {\n        const lifecycle = Lifecycle.beginDetach(LifecycleFlags.unbindAfterDetached);\n        for (let i = newLength, view = views[i]; i < oldLength; view = views[++i]) {\n          view.release();\n          lifecycle.detach(view);\n        }\n        lifecycle.end();\n        views.length = newLength;\n        if (newLength === 0) {\n          return;\n        }\n      } else if (newLength === 0) {\n        return;\n      }\n\n      if (indexMap === null) {\n        forOf.iterate(items, (arr, i, item) => {\n          const view = views[i];\n          if (!!view.$scope && view.$scope.bindingContext[local] === item) {\n            view.$bind(flags, Scope.fromParent($scope, view.$scope.bindingContext));\n          } else {\n            view.$bind(flags, Scope.fromParent($scope, BindingContext.create(local, item)));\n          }\n        });\n      } else {\n        forOf.iterate(items, (arr, i, item) => {\n          const view = views[i];\n          if (indexMap[i] === i) {\n            view.$bind(flags, Scope.fromParent($scope, view.$scope.bindingContext));\n          } else {\n            view.$bind(flags, Scope.fromParent($scope, BindingContext.create(local, item)));\n          }\n        });\n      }\n    }\n\n    if (this.$isAttached) {\n      const { location } = this;\n      const lifecycle = Lifecycle.beginAttach(this.encapsulationSource, LifecycleFlags.none);\n      if (indexMap === null) {\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n          const view = views[i];\n          view.mount(location);\n          lifecycle.attach(view);\n        }\n      } else {\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n          if (indexMap[i] !== i) {\n            const view = views[i];\n            view.mount(location);\n            lifecycle.attach(view);\n          }\n        }\n      }\n      lifecycle.end();\n    }\n  }\n\n  private checkCollectionObserver(): void {\n    const oldObserver = this.observer;\n    if (this.$isBound) {\n      const newObserver = this.observer = getCollectionObserver(this.changeSet, this.items);\n      if (oldObserver !== newObserver) {\n        if (oldObserver) {\n          oldObserver.unsubscribeBatched(this);\n        }\n        if (newObserver) {\n          newObserver.subscribeBatched(this);\n        }\n      }\n    } else if (oldObserver) {\n      oldObserver.unsubscribeBatched(this);\n    }\n  }\n}\n","import { inject } from '@au-test/kernel';\nimport { IScope } from '../../binding/binding-context';\nimport { BindingFlags } from '../../binding/binding-flags';\nimport { IRenderLocation } from '../../dom';\nimport { ICustomAttribute, templateController } from '../custom-attribute';\nimport { IAttachLifecycle, IDetachLifecycle } from '../lifecycle';\nimport { IView, IViewFactory } from '../view';\n\nexport interface Replaceable extends ICustomAttribute {}\n@templateController('replaceable')\n@inject(IViewFactory, IRenderLocation)\nexport class Replaceable {\n  private currentView: IView;\n\n  constructor(private factory: IViewFactory, location: IRenderLocation) {\n    this.currentView = this.factory.create();\n    this.currentView.mount(location);\n  }\n\n  public binding(flags: BindingFlags): void {\n    this.currentView.$bind(flags, this.$scope);\n  }\n\n  public attaching(encapsulationSource: any, lifecycle: IAttachLifecycle): void {\n    this.currentView.$attach(encapsulationSource, lifecycle);\n  }\n\n  public detaching(lifecycle: IDetachLifecycle): void {\n    this.currentView.$detach(lifecycle);\n  }\n\n  public unbinding(flags: BindingFlags): void {\n    this.currentView.$unbind(flags);\n  }\n}\n","import { inject } from '@au-test/kernel';\nimport { BindingContext, IScope, Scope } from '../../binding/binding-context';\nimport { BindingFlags } from '../../binding/binding-flags';\nimport { IRenderLocation } from '../../dom';\nimport { bindable } from '../bindable';\nimport { ICustomAttribute, templateController } from '../custom-attribute';\nimport { IAttachLifecycle, IDetachLifecycle } from '../lifecycle';\nimport { IView, IViewFactory } from '../view';\n\nexport interface With extends ICustomAttribute {}\n@templateController('with')\n@inject(IViewFactory, IRenderLocation)\nexport class With {\n  @bindable public value: any = null;\n\n  private currentView: IView = null;\n\n  constructor(private factory: IViewFactory, location: IRenderLocation) {\n    this.currentView = this.factory.create();\n    this.currentView.mount(location);\n  }\n\n  public valueChanged(): void {\n    this.bindChild(BindingFlags.fromBindableHandler);\n  }\n\n  public binding(flags: BindingFlags): void {\n    this.bindChild(flags);\n  }\n\n  public attaching(encapsulationSource: any, lifecycle: IAttachLifecycle): void {\n    this.currentView.$attach(encapsulationSource, lifecycle);\n  }\n\n  public detaching(lifecycle: IDetachLifecycle): void {\n    this.currentView.$detach(lifecycle);\n  }\n\n  public unbinding(flags: BindingFlags): void {\n    this.currentView.$unbind(flags);\n  }\n\n  private bindChild(flags: BindingFlags): void {\n    this.currentView.$bind(\n      flags,\n      Scope.fromParent(this.$scope, this.value)\n    );\n  }\n}\n","import { DI, IContainer, IRegistry, PLATFORM, Registration } from '@au-test/kernel';\nimport { BindingFlags } from './binding/binding-flags';\nimport { Lifecycle, LifecycleFlags } from './templating';\nimport { ICustomElement } from './templating/custom-element';\nimport { IRenderingEngine } from './templating/rendering-engine';\n\nexport interface ISinglePageApp {\n  host: any,\n  component: any\n}\n\nexport class Aurelia {\n  private components: ICustomElement[] = [];\n  private startTasks: (() => void)[] = [];\n  private stopTasks: (() => void)[] = [];\n  private isStarted = false;\n  private _root: ICustomElement = null;\n\n  constructor(private container: IContainer = DI.createContainer()) {\n    Registration\n      .instance(Aurelia, this)\n      .register(container, Aurelia);\n  }\n\n  public register(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): this {\n    this.container.register(...params);\n    return this;\n  }\n\n  public app(config: ISinglePageApp): this {\n    const component: ICustomElement = config.component;\n\n    const startTask = () => {\n      if (!this.components.includes(component)) {\n        this._root = component;\n        this.components.push(component);\n        component.$hydrate(\n          this.container.get(IRenderingEngine),\n          config.host\n        );\n      }\n\n      component.$bind(BindingFlags.fromStartTask | BindingFlags.fromBind);\n\n      Lifecycle.beginAttach(config.host, LifecycleFlags.none)\n        .attach(component)\n        .end();\n    };\n\n    this.startTasks.push(startTask);\n\n    this.stopTasks.push(() => {\n      const task = Lifecycle.beginDetach(LifecycleFlags.noTasks)\n        .detach(component)\n        .end();\n\n      const flags = BindingFlags.fromStopTask | BindingFlags.fromUnbind;\n\n      if (task.done) {\n        component.$unbind(flags);\n      } else {\n        task.wait().then(() => component.$unbind(flags));\n      }\n    });\n\n    if (this.isStarted) {\n      startTask();\n    }\n\n    return this;\n  }\n\n  public root(): ICustomElement | null {\n    return this._root;\n  }\n\n  public start(): this {\n    this.startTasks.forEach(x => x());\n    this.isStarted = true;\n    return this;\n  }\n\n  public stop(): this {\n    this.isStarted = false;\n    this.stopTasks.forEach(x => x());\n    return this;\n  }\n}\n\n(<any>PLATFORM.global).Aurelia = Aurelia;\n"],"names":["Registration","BindingFlags","MutationKind","flushChanges","dispose","CollectionLengthObserver","ArrayObserver","proto","SetObserver","DI","PLATFORM","XLinkAttributeAccessor","DataAttributeAccessor","StyleAttributeAccessor","ClassAttributeAccessor","ElementPropertyAccessor","AttrBindingBehavior","BindingMode","OneTimeBindingBehavior","ToViewBindingBehavior","FromViewBindingBehavior","TwoWayBindingBehavior","Reporter","SetterObserver","Observer","register","oneTime","toView","fromView","Binding","DebounceBindingBehavior","SanitizeValueConverter","inject","SelfBindingBehavior","SignalBindingBehavior","ThrottleBindingBehavior","findOriginalEventTarget","DelegationStrategy","GetterObserver","CustomSetterObserver","DirtyCheckProperty","ValueAttributeObserver","CheckedObserver","SelectValueObserver","nativeClear","nativeDelete","observeClear","observeDelete","MapObserver","toStringTag","ObserverLocator","UpdateTriggerBindingBehavior","childObserverOptions","hydrate","bind","attach","detach","unbind","cache","ChildrenObserver","customElement","ViewCompileFlags","RenderingEngine","IContainer","all","LifecycleFlags","Compose","tslib_1.__decorate","If","Else","Repeat","Replaceable","With"],"mappings":";;;;;;IAAA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;AACA,AAmCA;AACA,IAAO,SAAS,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IAC1D,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IACjI,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACnI,SAAS,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IACtJ,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;;aC9Ce,eAAe,CAAC,YAA6C;QAC3E,OAAO,UAAkC,MAAS;YAChD,OAAO,uBAAuB,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC7D,CAAA;IACH,CAAC;AAED,UAAa,uBAAuB,GAAgE;QAClG,IAAI,EAAE,kBAAkB;QAExB,OAAO,CAAC,IAAY;YAClB,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;SAC/B;QAED,MAAM,CAA0B,IAAO;YACrC,OAAQ,IAAY,CAAC,IAAI,KAAK,IAAI,CAAC;SACpC;QAED,MAAM,CAA0B,YAA6C,EAAE,IAAO;YACpF,MAAM,IAAI,GAAG,IAAgC,CAAC;YAC9C,MAAM,WAAW,GAAG,OAAO,YAAY,KAAK,QAAQ;kBAChD,EAAE,IAAI,EAAE,YAAY,EAAE;kBACtB,YAAY,CAAC;YAEhB,IAAuC,CAAC,IAAI,GAAG,uBAAuB,CAAC;YACvE,IAAuC,CAAC,WAAW,GAAG,WAAW,CAAC;YACnE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,OAAO,IAAI,CAAC;SACb;KACF,CAAC;IAEF,SAAS,QAAQ,CAA6B,SAAqB;QACjE,SAAS,CAAC,QAAQ,CAChBA,mBAAY,CAAC,SAAS,CACpB,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EACtD,IAAI,CACL,CACF,CAAC;IACJ,CAAC;;IC/CD,WAAY,YAAY;QACtB,+CAA6D,CAAA;QAC7D,wEAA6D,CAAA;QAE7D,uDAA6D,CAAA;QAC7D,+EAA6D,CAAA;QAC7D,2EAA6D,CAAA;QAE7D,oDAA6D,CAAA;QAC7D,+EAA6D,CAAA;QAC7D,+EAA6D,CAAA;QAC7D,oFAA6D,CAAA;QAE7D,kDAA6D,CAAA;QAC7D,wEAA6D,CAAA;QAC7D,kEAA6D,CAAA;QAC7D,iEAA6D,CAAA;QAC7D,yDAA6D,CAAA;QAC7D,6DAA6D,CAAA;QAC7D,kEAA6D,CAAA;QAC7D,8EAA6D,CAAA;QAC7D,gFAA6D,CAAA;IAC/D,CAAC,EAtBWC,oBAAY,KAAZA,oBAAY,QAsBvB;;ICiDD;;;AAGA,IAAA,WAAY,YAAY;QACtB,uDAAiB,CAAA;QACjB,2DAAiB,CAAA;IACnB,CAAC,EAHWC,oBAAY,KAAZA,oBAAY,QAGvB;;aCzEe,oBAAoB,CAAyB,YAAe;QAC1E,OAAO,UAAS,MAAgB;YAC9B,MAAM,KAAK,GAA2E,MAAM,CAAC,SAAS,CAAC;YAEvG,KAAK,CAAC,gBAAgB,gBAAwB;YAC9C,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;YAC1B,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;YAC1B,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;YAC1B,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAE9B,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC;YACpC,KAAK,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YAC1C,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC;YACpC,KAAK,CAAC,cAAc,GAAG,cAAc,CAAC;YACtC,KAAK,CAAC,eAAe,IAAI,YAAY,KAAKA,oBAAY,CAAC,QAAQ,GAAG,uBAAuB,GAAG,yBAAyB,CAAC,CAAC;SACxH,CAAC;IACJ,CAAC;IAED,SAAS,aAAa,CAAyD,UAAuC;QACpH,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE;YAClC,OAAO,KAAK,CAAC;SACd;QACD,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,EAAE,eAAe,uBAA+B,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;YAC/B,IAAI,CAAC,gBAAgB,wBAAgC;YACrD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,EAAE,eAAe,uBAA+B,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;YAC/B,IAAI,CAAC,gBAAgB,wBAAgC;YACrD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,EAAE,eAAe,uBAA+B,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;YAC/B,IAAI,CAAC,gBAAgB,wBAAgC;YACrD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,EAAE,eAAe,2BAAmC,EAAE;YACxD,IAAI,CAAC,gBAAgB,GAAG,CAAC,UAAU,CAAC,CAAC;YACrC,IAAI,CAAC,gBAAgB,4BAAoC;YACzD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,gBAAgB,CAAyD,UAA+B;QAC/G,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,YAAY,KAAK,UAAU,EAAE;YACvF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,gBAAgB,IAAI,qBAA6B;YACtD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,YAAY,KAAK,UAAU,EAAE;YACvF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,gBAAgB,IAAI,qBAA6B;YACtD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,YAAY,KAAK,UAAU,EAAE;YACvF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,gBAAgB,IAAI,qBAA6B;YACtD,OAAO,IAAI,CAAC;SACb;QACD,IAAI,eAAe,4BAAoC;YACrD,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;oBACjC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzB,IAAI,EAAE,KAAK,CAAC,EAAE;wBACZ,IAAI,CAAC,gBAAgB,IAAI,yBAAiC;qBAC3D;oBACD,OAAO,IAAI,CAAC;iBACb;aACF;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,uBAAuB,CAE9B,QAAgC,EAChC,aAAqC,EACrC,KAAmB;;;;;;;;QAQnB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACxC,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;SACnC;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;SAC1D;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;SAC1D;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;SAC1D;QACD,MAAM,MAAM,GAAG,WAAW,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC;QACtD,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC/B,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,UAAU,KAAK,IAAI,EAAE;oBACvB,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;iBACzD;aACF;SACF;IACH,CAAC;IAED,SAAS,yBAAyB,CAAyH,MAAc,EAAE,IAAuB,EAAE,KAAmB;QACrN,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACxC,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;SACnC;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SAC/C;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SAC/C;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SAC/C;QACD,MAAM,MAAM,GAAG,WAAW,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC;QACtD,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC/B,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,UAAU,KAAK,IAAI,EAAE;oBACvB,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;iBAC9C;aACF;SACF;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,SAAS,cAAc;QACrB,OAAO,IAAI,CAAC,gBAAgB,kBAA0B;IACxD,CAAC;IAED,SAAS,aAAa,CAAyD,UAA+B;;;;QAI5G,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,YAAY,KAAK,UAAU,EAAE;YACvF,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,YAAY,KAAK,UAAU,EAAE;YACvF,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,YAAY,KAAK,UAAU,EAAE;YACvF,OAAO,IAAI,CAAC;SACb;QACD,IAAI,eAAe,4BAAoC;;YAErD,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;oBACjC,OAAO,IAAI,CAAC;iBACb;aACF;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;AAED,aAAgB,2BAA2B;QACzC,OAAO,UAAS,MAAgB;YAC9B,MAAM,KAAK,GAA0D,MAAM,CAAC,SAAS,CAAC;YAEtF,KAAK,CAAC,uBAAuB,gBAAwB;YACrD,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;YACjC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;YACjC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;YACjC,KAAK,CAAC,uBAAuB,GAAG,IAAI,CAAC;YAErC,KAAK,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;YAClD,KAAK,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;YACxD,KAAK,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;YAClD,KAAK,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;YACpD,KAAK,CAAC,sBAAsB,GAAG,gCAAgC,CAAC;SACjE,CAAC;IACJ,CAAC;IAED,SAAS,oBAAoB,CAA8D,UAAoE;QAC7J,IAAI,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;QACD,MAAM,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC;QACrD,IAAI,EAAE,eAAe,uBAA+B,EAAE;YACpD,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC;YACtC,IAAI,CAAC,uBAAuB,wBAAgC;YAC5D,OAAO,IAAI,CAAC;SACb;QACD,IAAI,EAAE,eAAe,uBAA+B,EAAE;YACpD,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC;YACtC,IAAI,CAAC,uBAAuB,wBAAgC;YAC5D,OAAO,IAAI,CAAC;SACb;QACD,IAAI,EAAE,eAAe,uBAA+B,EAAE;YACpD,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC;YACtC,IAAI,CAAC,uBAAuB,wBAAgC;YAC5D,OAAO,IAAI,CAAC;SACb;QACD,IAAI,EAAE,eAAe,2BAAmC,EAAE;YACxD,IAAI,CAAC,uBAAuB,GAAG,CAAC,UAAU,CAAC,CAAC;YAC5C,IAAI,CAAC,uBAAuB,4BAAoC;YAChE,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,uBAAuB,CAA8D,UAAwC;QACpI,MAAM,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC;QACrD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;YAC9F,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,uBAAuB,IAAI,qBAA6B;YAC7D,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;YAC9F,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,uBAAuB,IAAI,qBAA6B;YAC7D,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;YAC9F,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,uBAAuB,IAAI,qBAA6B;YAC7D,OAAO,IAAI,CAAC;SACb;QACD,IAAI,eAAe,4BAAoC;YACrD,MAAM,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;oBACjC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzB,IAAI,EAAE,KAAK,CAAC,EAAE;wBACZ,IAAI,CAAC,uBAAuB,IAAI,yBAAiC;qBAClE;oBACD,OAAO,IAAI,CAAC;iBACb;aACF;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,gCAAgC,CAA8D,QAAkB;QACvH,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC7C,IAAI,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAC/C,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;SACnC;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;SAC3C;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;SAC3C;QACD,IAAI,WAAW,KAAK,IAAI,EAAE;YACxB,WAAW,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;SAC3C;QACD,MAAM,MAAM,GAAG,WAAW,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC;QACtD,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC/B,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBAClC,IAAI,UAAU,KAAK,IAAI,EAAE;oBACvB,UAAU,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;iBAC1C;aACF;SACF;IACH,CAAC;IAED,SAAS,qBAAqB;QAC5B,OAAO,IAAI,CAAC,uBAAuB,kBAA0B;IAC/D,CAAC;IAED,SAAS,oBAAoB,CAA8D,UAAwC;;;;QAIjI,MAAM,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC;QACrD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;YAC9F,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;YAC9F,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,eAAe,2BAAmC,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;YAC9F,OAAO,IAAI,CAAC;SACb;QACD,IAAI,eAAe,4BAAoC;;YAErD,MAAM,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;oBACjC,OAAO,IAAI,CAAC;iBACb;aACF;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;IC7SD,SAAS,QAAQ,CAA8B,QAAgC,EAAE,KAAmB;QAClG,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,QAAQ,GAAG,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QACtF,IAAI,YAAY,KAAK,QAAQ,EAAE;YAC7B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAC7B,IAAI,KAAK,GAAGD,oBAAY,CAAC,gBAAgB,EAAE;gBACzC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;QACD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,MAAM,wBAAwB,GAAGA,oBAAY,CAAC,gBAAgB,GAAGA,oBAAY,CAAC,oBAAoB,CAAC;IAEnG,SAAS,YAAY;QACnB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;;;QAGvC,IAAI,IAAI,CAAC,QAAQ,KAAK,YAAY,EAAE;YAClC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAG,wBAAwB,CAAC,CAAC;YAC9E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;SACnC;IACH,CAAC;IAED,SAAS,OAAO;QACd,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;AAED,aAAgB,cAAc,CAAC,eAAuC,IAAI;QACxE,OAAO,UAAS,MAAgB;YAC9B,oBAAoB,CAACC,oBAAY,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;YACpD,MAAM,KAAK,GAA0B,MAAM,CAAC,SAAS,CAAC;YAEtD,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC;YAClC,KAAK,CAAC,QAAQ,GAAG,YAAY,CAAC;YAC9B,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC;YAElC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;YACjB,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;YAEvB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC;YAC5C,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,IAAI,YAAY,CAAC;YACxD,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,OAAO,CAAC;YACzC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;SACxB,CAAC;IACJ,CAAC;;ICjED,SAASC,cAAY;QACnB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,SAASC,SAAO;QACd,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,SAAS,oBAAoB;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QACnC,MAAM,QAAQ,IAAc,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,GAAG,EAAE;YACd,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;SACnB;QACD,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC;IAC7B,CAAC;IAED,SAAS,kBAAkB;QACzB,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACjC,MAAM,QAAQ,IAAc,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,GAAG,EAAE;YACd,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;SACnB;QACD,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC;IAC7B,CAAC;IAED,SAAS,iBAAiB;QACxB,OAAO,IAAI,CAAC,cAAc,KAAU,IAAI,CAAC,cAAc,GAAG,IAAIC,gCAAwB,CAAM,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC9H,CAAC;AAED,aAAgB,kBAAkB,CAAC,IAAoE;QACrG,OAAO,UAAS,MAAgB;YAC9B,oBAAoB,CAACH,oBAAY,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;YACtD,2BAA2B,EAAE,CAAC,MAAM,CAAC,CAAC;YACtC,MAAM,KAAK,GAAuB,MAAM,CAAC,SAAS,CAAC;YAEnD,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;YACxB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;YACtB,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;YACzB,KAAK,CAAC,kBAAkB,GAAG,IAAI,qBAA4B,QAAQ,GAAG,MAAM,CAAC;YAC7E,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;YAC5B,KAAK,CAAC,aAAa,GAAG,IAAI,qBAA4B,oBAAoB,GAAG,kBAAkB,CAAC;YAChG,KAAK,CAAC,YAAY,GAAGC,cAAY,CAAC;YAClC,KAAK,CAAC,OAAO,GAAGC,SAAO,CAAC;YACxB,KAAK,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YAE5C,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,aAAa,CAAC;YACzD,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,gBAAgB,CAAC;YAEhE,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC,oBAAoB,CAAC;YAC9E,KAAK,CAAC,kBAAkB,GAAG,KAAK,CAAC,kBAAkB,IAAI,KAAK,CAAC,uBAAuB,CAAC;SACtF,CAAC;IACJ,CAAC;AAKD,AAAaC,oCAAwB,GAArC,MAAa,wBAAwB;QAInC,YAAmB,GAAe,EAAS,WAA8B;YAAtD,QAAG,GAAH,GAAG,CAAY;YAAS,gBAAW,GAAX,WAAW,CAAmB;YACvE,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;SACtC;QAEM,QAAQ;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACnC;QAEM,YAAY,CAAC,QAAgB;YAClC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;SACvC;QAEM,SAAS,CAAC,UAA+B;YAC9C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAChC;QAEM,WAAW,CAAC,UAA+B;YAChD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACnC;KACF,CAAA;AAvBYA,oCAAwB;QADpC,cAAc,EAAE;OACJA,gCAAwB,CAuBpC;;ICnFD,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;AAC9B,UAAa,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;AACrC,UAAa,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC;AAC3C,UAAa,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC;AACnC,UAAa,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;AACvC,UAAa,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC;AACzC,UAAa,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC;AAC3C,UAAa,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;IAErC;IACA,SAAS,WAAW;QAClB,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SAC1C;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC;QAClC,IAAI,QAAQ,KAAK,CAAC,EAAE;YAClB,OAAO,GAAG,CAAC;SACZ;QACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC;QACjD,IAAI,CAAC,GAAG,GAAG,CAAC;QACZ,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE;YACtB,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;YAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAE,CAAC,CAAC;YAClD,CAAC,EAAE,CAAC;SACL;QACD,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,EAAEJ,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;IACA,SAAS,cAAc;QACrB,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SAC7C;QACD,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC;QAClC,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,QAAQ,EAAE;YACnB,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,CAAC;SACpB;QACD,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACzC,MAAM,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjD,CAAC,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,EAAEA,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QAC3E,OAAO,GAAG,CAAC;IACb,CAAC;IAED;IACA,SAAS,UAAU;QACjB,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;QACD,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC5B,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAErC,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAClC,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;YACxB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;SACjD;QACD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,EAAEA,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QACvE,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;IACA,SAAS,YAAY;QACnB,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC5B,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAEvC,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;YACpB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;SACjD;QACD,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,CAAC,CAAC,eAAe,CAAC,OAAO,EAAE,SAAS,EAAEA,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QACzE,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;IACA,SAAS,aAAa,CAAuB,KAAa,EAAE,WAAoB;QAC9E,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SAC5C;QACD,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC5B,IAAI,WAAW,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;YACnB,MAAM,EAAE,GAAG,CAAC,GAAG,WAAW,CAAC;YAC3B,OAAO,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACpB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjD;gBACD,CAAC,EAAE,CAAC;aACL;SACF;QACD,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC;QAClC,IAAI,QAAQ,GAAG,CAAC,EAAE;YAChB,MAAM,SAAS,GAAG,QAAQ,GAAG,CAAC,CAAC;YAC/B,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,CAAC,GAAG,SAAS,EAAE;gBACpB,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,CAAC;aACpB;YACD,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,CAAC;SAC7D;aAAM,IAAI,QAAQ,KAAK,CAAC,EAAE;YACzB,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;SACjD;QACD,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACpD,CAAC,CAAC,eAAe,CAAC,QAAQ,EAAE,SAAS,EAAEA,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QAC1E,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;IACA,SAAS,cAAc;QACrB,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,MAAM,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,OAAO,KAAK,KAAK,MAAM,EAAE;YACvB,MAAM,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC;YAC9B,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,UAAU,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrE,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,UAAU,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrE,IAAI,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;YAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;YACzD,IAAI,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;YAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;YACzD,KAAK,EAAE,CAAC;SACT;QACD,CAAC,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,EAAEA,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QAC3E,OAAO,IAAI,CAAC;IACd,CAAC;IAED;IACA;IACA,SAAS,WAAW,CAAuB,SAA4E;QACrH,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SACzC;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,GAAG,GAAG,CAAC,EAAE;YACX,OAAO,IAAI,CAAC;SACb;QACD,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;QACpD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;gBACzB,MAAM;aACP;YACD,CAAC,EAAE,CAAC;SACL;QACD,IAAI,SAAS,KAAK,SAAS,IAAI,OAAO,SAAS,KAAK,UAAU,0DAAyD;YACrH,SAAS,GAAG,WAAW,CAAC;SACzB;QACD,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;QAC7C,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,EAAEA,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC;IACd,CAAC;IAED;IACA,SAAS,WAAW,CAAC,CAAyB,EAAE,CAAyB;QACvE,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,OAAO,CAAC,CAAC;SACV;QACD,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvC,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,SAAS,cAAc,CAAC,CAAyB,EAAE,CAAyB;QAC1E,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,IAAI,CAAC,KAAK,SAAS,EAAE;gBACnB,OAAO,CAAC,CAAC;aACV;iBAAM;gBACL,OAAO,CAAC,CAAC;aACV;SACF;QACD,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,CAAC,CAAC,CAAC;SACX;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAED,SAAS,aAAa,CAAC,GAAmB,EAAE,QAAkB,EAAE,IAAY,EAAE,EAAU,EAAE,SAA2E;QACnK,IAAI,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;QAC1C,IAAI,CAAC,EAAE,CAAC,CAAC;QACT,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC9B,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1C,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;gBAC9B,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClC,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAClC,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;oBAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;iBAC3C;qBAAM;oBACL,MAAM;iBACP;aACF;YACD,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;YAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;SACnD;IACH,CAAC;IAED,SAAS,SAAS,CAAC,GAAmB,EAAE,QAAkB,EAAE,IAAY,EAAE,EAAU,EAAE,SAA2E;QAC/J,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACf,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAClB,IAAI,IAAI,EAAE,IAAI,CAAC;QACf,IAAI,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC;QACtC,IAAI,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC;;QAG3C,OAAO,IAAI,EAAE;YACX,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE;gBACnB,aAAa,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;gBAClD,OAAO;aACR;YAED,UAAU,GAAG,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;YACvC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;YAAO,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1C,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAAK,EAAE,GAAG,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAC5C,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;YAAC,EAAE,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;YAChD,GAAG,GAAG,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACxB,IAAI,GAAG,GAAG,CAAC,EAAE;gBACX,IAAI,GAAG,EAAE,CAAC;gBAAC,IAAI,GAAG,EAAE,CAAC;gBACrB,EAAE,GAAG,EAAE,CAAC;gBAAG,EAAE,GAAG,EAAE,CAAC;gBACnB,EAAE,GAAG,IAAI,CAAC;gBAAC,EAAE,GAAG,IAAI,CAAC;aACtB;YACD,GAAG,GAAG,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACxB,IAAI,GAAG,IAAI,CAAC,EAAE;gBACZ,IAAI,GAAG,EAAE,CAAC;gBAAC,IAAI,GAAG,EAAE,CAAC;gBACrB,EAAE,GAAG,EAAE,CAAC;gBAAG,EAAE,GAAG,EAAE,CAAC;gBACnB,EAAE,GAAG,EAAE,CAAC;gBAAG,EAAE,GAAG,EAAE,CAAC;gBACnB,EAAE,GAAG,IAAI,CAAC;gBAAC,EAAE,GAAG,IAAI,CAAC;aACtB;iBAAM;gBACL,GAAG,GAAG,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBACxB,IAAI,GAAG,GAAG,CAAC,EAAE;oBACX,IAAI,GAAG,EAAE,CAAC;oBAAC,IAAI,GAAG,EAAE,CAAC;oBACrB,EAAE,GAAG,EAAE,CAAC;oBAAG,EAAE,GAAG,EAAE,CAAC;oBACnB,EAAE,GAAG,IAAI,CAAC;oBAAC,EAAE,GAAG,IAAI,CAAC;iBACtB;aACF;YACD,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACtC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACxC,MAAM,GAAG,EAAE,CAAC;YAAM,MAAM,GAAG,EAAE,CAAC;YAC9B,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC;YAClB,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;YACnB,GAAG,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;YACvE,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;YAAU,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;YAEzD,SAAS,EAAE,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;gBAClD,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC1C,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBACpC,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACvD,GAAG,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;oBAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;oBACpD,MAAM,EAAE,CAAC;iBACV;qBAAM,IAAI,KAAK,GAAG,CAAC,EAAE;oBACpB,GAAG;wBACD,SAAS,EAAE,CAAC;;wBAEZ,IAAI,SAAS,IAAI,CAAC,EAAE;4BAClB,MAAM,SAAS,CAAC;yBACjB;wBACD,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;wBAAU,KAAK,GAAG,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;qBAC/E,QAAQ,KAAK,GAAG,CAAC,EAAE;oBACpB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;oBAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;oBAC7D,GAAG,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;oBAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;oBAC1D,IAAI,KAAK,GAAG,CAAC,EAAE;wBACb,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBAAM,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAC/C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;wBAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;wBACvD,GAAG,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;wBAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;wBACpD,MAAM,EAAE,CAAC;qBACV;iBACF;aACF;YACD,IAAI,EAAE,GAAG,SAAS,GAAG,MAAM,GAAG,IAAI,EAAE;gBAClC,SAAS,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;gBACnD,EAAE,GAAG,MAAM,CAAC;aACb;iBAAM;gBACL,SAAS,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;gBAClD,IAAI,GAAG,SAAS,CAAC;aAClB;SACF;IACH,CAAC;IAED,KAAK,MAAM,OAAO,IAAI,CAAC,WAAW,EAAE,cAAc,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,CAAC,EAAE;QACzH,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;KACvH;AAED,aAAgB,sBAAsB;QACpC,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC;QAC/D,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,OAAO,GAAG,cAAc,CAAC;QACxE,IAAI,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC;QAC5D,IAAI,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC;QAClE,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC;QACrE,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,OAAO,GAAG,cAAc,CAAC;QACxE,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC;IACjE,CAAC;IAED,sBAAsB,EAAE,CAAC;AAEzB,aAAgB,uBAAuB;QACrC,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;QAC9D,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,OAAO,GAAG,aAAa,CAAC;QACvE,IAAI,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC;QAC3D,IAAI,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC;QACjE,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC;QACpE,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,OAAO,GAAG,aAAa,CAAC;QACvE,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI;YAAE,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;IAChE,CAAC;AAKD,AAAaK,yBAAa,GAA1B,MAAa,aAAa;QAMxB,YAAY,SAAqB,EAAE,KAAqB;YACtD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF,CAAA;AAZYA,yBAAa;QADzB,kBAAkB,eAAsB;OAC5BA,qBAAa,CAYzB;aAEe,gBAAgB,CAAC,SAAqB,EAAE,KAAqB;QAC3E,OAAQ,KAAK,CAAC,SAA2B,IAAI,IAAIA,qBAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IACnF,CAAC;;IC/UD,MAAMC,OAAK,GAAG,GAAG,CAAC,SAAS,CAAC;AAC5B,UAAa,SAAS,GAAGA,OAAK,CAAC,GAAG,CAAC;AACnC,UAAa,WAAW,GAAGA,OAAK,CAAC,KAAK,CAAC;AACvC,UAAa,YAAY,GAAGA,OAAK,CAAC,MAAM,CAAC;IAEzC;IACA;IAEA;IACA,SAAS,UAAU,CAAqB,KAA6B;QACnE,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACpC;QACD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,OAAO,KAAK,OAAO,EAAE;YACvB,OAAO,IAAI,CAAC;SACb;QACD,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,EAAEN,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC;IACd,CAAC;IAED;IACA,SAAS,YAAY;QACnB,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,IAAI,GAAG,CAAC,EAAE;YACZ,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE;gBAC/B,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACpB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;iBAC/C;gBACD,CAAC,EAAE,CAAC;aACL;YACD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YACpB,CAAC,CAAC,eAAe,CAAC,OAAO,EAAE,SAAS,EAAEA,oBAAY,CAAC,oBAAoB,CAAC,CAAC;SAC1E;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;IACA,SAAS,aAAa,CAAqB,KAA6B;QACtE,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACvC;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,IAAI,KAAK,CAAC,EAAE;YACd,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC5B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE;YAC/B,IAAI,KAAK,KAAK,KAAK,EAAE;gBACnB,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACpB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;iBAC/C;gBACD,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClC,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACvC;YACD,CAAC,EAAE,CAAC;SACL;QACD,CAAC,CAAC,eAAe,CAAC,QAAQ,EAAE,SAAS,EAAEA,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QAC1E,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,MAAM,OAAO,IAAI,CAAC,UAAU,EAAE,YAAY,EAAE,aAAa,CAAC,EAAE;QAC/D,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;KACvH;AAED,aAAgB,oBAAoB;QAClC,IAAIM,OAAK,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,GAAG,GAAG,UAAU,CAAC;QAC5D,IAAIA,OAAK,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,KAAK,GAAG,YAAY,CAAC;QAClE,IAAIA,OAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,MAAM,GAAG,aAAa,CAAC;IACvE,CAAC;IAED,oBAAoB,EAAE,CAAC;AAEvB,aAAgB,qBAAqB;QACnC,IAAIA,OAAK,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,GAAG,GAAG,SAAS,CAAC;QAC3D,IAAIA,OAAK,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,KAAK,GAAG,WAAW,CAAC;QACjE,IAAIA,OAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,MAAM,GAAG,YAAY,CAAC;IACtE,CAAC;AAKD,AAAaC,uBAAW,GAAxB,MAAa,WAAW;QAMtB,YAAY,SAAqB,EAAE,GAAiB;YAClD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF,CAAA;AAZYA,uBAAW;QADvB,kBAAkB,aAAoB;OAC1BA,mBAAW,CAYvB;aAEe,cAAc,CAAC,SAAqB,EAAE,GAAiB;QACrE,OAAQ,GAAG,CAAC,SAAyB,IAAI,IAAIA,mBAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC3E,CAAC;;UCtEY,UAAU,GAAGC,SAAE,CAAC,eAAe,EAAc;SACvD,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAM,SAAS,CAAC,CAAC,CAAC;IAEjD;AACA,UAAa,SAAU,SAAQ,GAAmB;QAAlD;;YAES,aAAQ,GAAY,KAAK,CAAC;;YAG1B,YAAO,GAAkB,OAAO,CAAC,OAAO,EAAE,CAAC;;;;YAc3C,iBAAY,GAAG;gBACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;oBACpB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;oBACzB,IAAI,CAAC,GAAG,CAAC,CAAC;oBACV,OAAO,CAAC,GAAG,GAAG,EAAE;wBACd,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC;qBAC3B;iBACF;gBACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB,CAAA;SAUF;QAlCQ,OAAO;YACZ,MAAM,KAAK,GAAG,IAAI,KAAK,CAAiB,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE;gBAC9B,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;aACnB;YACD,OAAO,KAAK,CAAC;SACd;QAoBM,GAAG,CAAC,aAA6B;YACtC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;gBACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACrD;YACD,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;KACF;;UC3EY,KAAK,GAAGA,SAAE,CAAC,eAAe,EAAS,CAAC,SAAS,EAAE,CAAC;AAK7D,UAAa,eAAe,GAAGA,SAAE,CAAC,eAAe,EAAmB,CAAC,SAAS,EAAE,CAAC;IAoCjF;AACA,aAAgB,8BAA8B,CAAC,QAA0B;QACvE,OAAO,IAAI,oBAAoB,CAAmB,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9E,CAAC;AAED,IASA,SAAS,YAAY,CAAC,IAAa;QACjC,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,SAAS,gBAAgB,CAAC,IAAa;;QAErC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;AAED,UAAa,GAAG,GAAG;QACjB,6BAA6B,CAAC,YAA4B;YACxD,IAAI,QAA6B,CAAC;YAClC,IAAI,YAAY,YAAY,IAAI,EAAE;gBAChC,IAA0B,YAAa,CAAC,OAAO,EAAE;oBAC/C,QAAQ,GAAG,YAAmB,CAAC;iBAChC;qBAAM;oBACL,QAAQ,GAAG,GAAG,CAAC,cAAc,EAAS,CAAC;oBACvC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAO,YAAY,CAAC,CAAC;iBAClD;aACF;iBAAM;gBACL,QAAQ,GAAG,GAAG,CAAC,cAAc,EAAS,CAAC;gBACvC,QAAQ,CAAC,SAAS,GAAW,YAAY,CAAC;aAC3C;;YAGD,OAAO,8BAA8B,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;SACpE;QAED,aAAa,CAAC,IAAY;YACxB,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACrC;QAED,UAAU,CAAC,IAAY;YACrB,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,kBAAkB,CAAC,MAAa,EAAE,QAA0B,EAAE,OAA6B;YACzF,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAChD,QAAQ,CAAC,OAAO,CAAC,MAAc,EAAE,OAAO,CAAC,CAAC;YAC1C,OAAO,QAAQ,CAAC;SACjB;QAED,YAAY,CAAC,IAAW,EAAE,OAAuB;YAC/C,OAAQ,IAAgB,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SAChD;;QAGD,cAAc;YACZ,OAAO,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAC3C;QAED,SAAS,CAAC,IAAW,EAAE,IAAc;YACnC,OAAc,IAAK,CAAC,SAAS,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC;SAC/C;QAED,iBAAiB,CAAC,aAAoB,EAAE,SAAgB;YACtD,MAAM,MAAM,GAAG,GAAG,CAAC,WAAW,CAAC;YAC/B,OAAO,aAAa,CAAC,UAAU,EAAE;gBAC/B,MAAM,CAAC,SAAS,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;aAC7C;SACF;QAED,cAAc,CAAC,aAAkB;YAC/B,OAAO,aAAa,YAAY,IAAI,CAAC;SACtC;QAED,iBAAiB,CAAC,IAAW;YAC3B,OAAc,IAAK,CAAC,QAAQ,KAAK,CAAC,CAAC;SACpC;QAED,cAAc,CAAC,IAAW;YACxB,OAAc,IAAK,CAAC,QAAQ,KAAK,CAAC,CAAC;SACpC;QAED,MAAM,CAAC,IAAe;;YAEpB,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC1C,CAAC,GAAG,CAAC,MAAM,GAAG,gBAAgB,EAAW,IAAI,CAAC,CAAC;aAChD;iBAAM;gBACL,CAAC,GAAG,CAAC,MAAM,GAAG,YAAY,EAAW,IAAI,CAAC,CAAC;aAC5C;SACF;QAED,WAAW,CAAC,QAAe,EAAE,QAAe;YAC1C,IAAI,QAAQ,CAAC,UAAU,EAAE;gBAChB,QAAQ,CAAC,UAAW,CAAC,YAAY,CAAO,QAAQ,EAAQ,QAAQ,CAAC,CAAC;aAC1E;SACF;QAED,WAAW,CAAC,MAAa,EAAE,KAAY;YAC9B,MAAO,CAAC,WAAW,CAAO,KAAK,CAAC,CAAC;SACzC;QAED,YAAY,CAAC,YAAmB,EAAE,aAAoB;YAC7C,aAAa,CAAC,UAAW,CAAC,YAAY,CAAO,YAAY,EAAQ,aAAa,CAAC,CAAC;SACxF;QAED,YAAY,CAAC,IAAW,EAAE,IAAY;YACpC,OAAiB,IAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAC3C;QAED,YAAY,CAAC,IAAW,EAAE,IAAY,EAAE,KAAU;YACtC,IAAK,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3C;QAED,eAAe,CAAC,IAAW,EAAE,IAAY;YAC7B,IAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACvC;QAED,QAAQ,CAAC,IAAW,EAAE,SAAiB;YACrC,OAAiB,IAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACtD;QAED,QAAQ,CAAC,IAAW,EAAE,SAAiB;YAC3B,IAAK,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SAC1C;QAED,WAAW,CAAC,IAAW,EAAE,SAAiB;YAC9B,IAAK,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC7C;QAED,gBAAgB,CAAC,SAAiB,EAAE,UAAe,EAAE,SAAiB,EAAE,OAAa;YACnF,CAAO,SAAS,IAAI,QAAQ,EAAE,gBAAgB,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SAChF;QAED,mBAAmB,CAAC,SAAiB,EAAE,UAAe,EAAE,SAAiB,EAAE,OAAa;YACtF,CAAO,SAAS,IAAI,QAAQ,EAAE,mBAAmB,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SACnF;QAED,eAAe,CAAC,IAAW;YACzB,IAAU,IAAK,CAAC,qBAAqB,KAAK,IAAI,EAAE;gBAC9C,OAAO,KAAK,CAAC;aACd;YACD,MAAM,IAAI,GAAI,IAAa,CAAC,WAAW,CAAC;YACxC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC,CAAC;;YAEV,OAAO,CAAC,GAAG,GAAG,EAAE;;gBAEd,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;oBAC7B,OAAO,KAAK,CAAC;iBACd;gBACD,CAAC,EAAE,CAAC;aACL;YACD,OAAO,IAAI,CAAC;SACb;QAED,oBAAoB,CAAC,IAAW;;YAExB,IAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC;SAC1C;QAED,uBAAuB,CAAC,IAAW;YACjC,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;;YAE3C,IAAI,CAAC,UAAW,CAAC,YAAY,CAAC,QAAQ,EAAO,IAAI,CAAC,CAAC;YAC1D,OAAO,QAAQ,CAAC;SACjB;QAED,uBAAuB,CAAC,SAAqB,EAAE,QAAmB;YAChE,SAAS,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC5C,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC9C,SAAS,CAAC,gBAAgB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAClD,SAAS,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SAClD;KACF,CAAC;IAEF;IACA;IACA;IACA,MAAM,aAAa,GAAkB;QACnC,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,IAAI;QACf,UAAU,EAAEC,eAAQ,CAAC,UAAU;QAC/B,WAAW,KAAK,OAAOA,eAAQ,CAAC,UAAU,CAAC,EAAE;QAC7C,YAAY,CAAC,OAAc,KAAU;QACrC,QAAQ,CAAC,MAAa,KAAU;QAChC,MAAM,MAAW;KAClB,CAAC;AAEF,UAAa,YAAY,GAAG;QAC1B,KAAK,EAAE,aAAa;KACrB,CAAC;IAEF;IACA;IACA;IACA;IACA;IACA;AACA,UAAa,oBAAoB;QAO/B,YAAY,QAA0B;YACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;YACpC,IAAI,CAAC,UAAU,GAAGA,eAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;SACzD;QAEM,WAAW;YAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9C;QAEM,YAAY,CAAC,OAAa;YAC/B,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;SACzD;QAEM,QAAQ,CAAC,MAAY;YAC1B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnC;QAEM,MAAM;YACX,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;YAE9B,IAAI,OAAO,CAAC,UAAU,KAAK,QAAQ,EAAE;;gBAEnC,MAAM,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACnD,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC3B,IAAI,IAAU,CAAC;gBAEf,OAAO,OAAO,EAAE;oBACd,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC;oBAC3B,MAAM,CAAC,OAAO,CAAC,CAAC;oBAEhB,IAAI,OAAO,KAAK,GAAG,EAAE;wBACnB,MAAM;qBACP;oBAED,OAAO,GAAG,IAAI,CAAC;iBAChB;aACF;SACF;KACF;;ICjTD;IACA,MAAM,gBAAgB,GAAG,8BAA8B,CAAC;AAKxD,AAAaC,kCAAsB,GAAnC,MAAa,sBAAsB;;;;;;QAYjC,YACS,SAAqB,EACrB,GAAY,EACZ,WAAmB,EACnB,aAAqB;YAHrB,cAAS,GAAT,SAAS,CAAY;YACrB,QAAG,GAAH,GAAG,CAAS;YACZ,gBAAW,GAAX,WAAW,CAAQ;YACnB,kBAAa,GAAb,aAAa,CAAQ;YAE5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;SACrD;QAEM,QAAQ;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SACtE;QAEM,YAAY,CAAC,QAAgB;YAClC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;SACzE;KACF,CAAA;AA5BYA,kCAAsB;QADlC,cAAc,CAAC,EAAE,CAAC;OACNA,8BAAsB,CA4BlC;AAEDA,kCAAsB,CAAC,SAAS,CAAC,aAAa,GAAG,EAAE,CAAC;AAKpD,AAAaC,iCAAqB,GAAlC,MAAa,qBAAqB;QAKhC,YACS,SAAqB,EACrB,GAAU,EACV,WAAmB;YAFnB,cAAS,GAAT,SAAS,CAAY;YACrB,QAAG,GAAH,GAAG,CAAO;YACV,gBAAW,GAAX,WAAW,CAAQ;YAE1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;SACrD;QAEM,QAAQ;YACb,OAAO,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SACrD;QAEM,YAAY,CAAC,QAAgB;YAClC,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aACjD;iBAAM;gBACL,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;aACxD;SACF;KACF,CAAA;AAxBYA,iCAAqB;QADjC,cAAc,EAAE;OACJA,6BAAqB,CAwBjC;AAKYC,kCAAsB,GAAnC,MAAa,sBAAsB;QAUjC,YACS,SAAqB,EACrB,GAAgB;YADhB,cAAS,GAAT,SAAS,CAAY;YACrB,QAAG,GAAH,GAAG,CAAa;YAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;SACvD;QAEM,QAAQ;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;SAC/B;;QAGM,YAAY,CAAC,KAAa,EAAE,KAAa;YAC9C,IAAI,QAAQ,GAAG,EAAE,CAAC;YAElB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;gBACtH,QAAQ,GAAG,WAAW,CAAC;gBACvB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;aACzC;YAED,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SACpD;QAEM,YAAY,CAAC,QAA6B;YAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;YACjC,IAAI,KAAK,CAAC;YACV,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAE3B,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,QAAQ,YAAY,MAAM,EAAE;oBAC9B,IAAI,KAAK,CAAC;oBACV,KAAK,KAAK,IAAa,QAAS,EAAE;wBAChC,IAAI,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;4BAClC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;4BACxB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;4BAC9D,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;4BACxB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;yBACjC;qBACF;iBACF;qBAAM,IAAa,QAAS,CAAC,MAAM,EAAE;oBACpC,MAAM,EAAE,GAAG,oMAAoM,CAAC;oBAChN,IAAI,IAAI,CAAC;oBACT,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,EAAE;wBAC1C,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;wBAChB,IAAI,CAAC,KAAK,EAAE;4BAAE,SAAS;yBAAE;wBAEzB,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;wBACxB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;qBACnC;iBACF;aACF;YAED,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;YAClB,IAAI,OAAO,KAAK,CAAC,EAAE;gBACjB,OAAO;aACR;YAED,OAAO,IAAI,CAAC,CAAC;YACb,KAAK,KAAK,IAAI,MAAM,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,OAAO,EAAE;oBAC9D,SAAS;iBACV;gBACD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;aACtC;SACF;KACF,CAAA;AA5EYA,kCAAsB;QADlC,cAAc,EAAE;OACJA,8BAAsB,CA4ElC;AAEDA,kCAAsB,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;AAC/CA,kCAAsB,CAAC,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC;AAC7CA,kCAAsB,CAAC,SAAS,CAAC,WAAW,GAAG,OAAO,CAAC;AAKvD,AAAaC,kCAAsB,GAAnC,MAAa,sBAAsB;QASjC,YAAmB,SAAqB,EAAS,GAAU;YAAxC,cAAS,GAAT,SAAS,CAAY;YAAS,QAAG,GAAH,GAAG,CAAO;SAAK;QAEzD,QAAQ;YACb,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QAEM,YAAY,CAAC,QAAgB;YAClC,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;YAC9B,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;YACpC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;YACvC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC3B,IAAI,KAAK,CAAC;YACV,IAAI,IAAI,CAAC;;YAGT,IAAI,QAAQ,CAAC,MAAM,EAAE;gBACnB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;gBACtB,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtD,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAChB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBAChB,SAAS;qBACV;oBACD,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;oBAC1B,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBACtB;aACF;;YAGD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;;YAGlB,IAAI,OAAO,KAAK,CAAC,EAAE;gBACjB,OAAO;aACR;;YAGD,OAAO,IAAI,CAAC,CAAC;YACb,KAAK,IAAI,IAAI,SAAS,EAAE;gBACtB,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE;oBAClE,SAAS;iBACV;;;;;gBAMD,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;aAC7B;SACF;KACF,CAAA;AA5DYA,kCAAsB;QADlC,cAAc,CAAC,EAAE,CAAC;OACNA,8BAAsB,CA4DlC;AAEDA,kCAAsB,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;AACnDA,kCAAsB,CAAC,SAAS,CAAC,OAAO,GAAG,CAAC,CAAC;AAC7CA,kCAAsB,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;AAKlD,AAAaC,mCAAuB,GAApC,MAAa,uBAAuB;QAClC,YAAmB,SAAqB,EAAS,GAAe,EAAS,WAAmB;YAAzE,cAAS,GAAT,SAAS,CAAY;YAAS,QAAG,GAAH,GAAG,CAAY;YAAS,gBAAW,GAAX,WAAW,CAAQ;SAAK;QAE1F,QAAQ;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACnC;QAEM,YAAY,CAAC,KAA6B;YAC/C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;SACpC;KACF,CAAA;AAVYA,mCAAuB;QADnC,cAAc,CAAC,EAAE,CAAC;OACNA,+BAAuB,CAUnC;UAIY,gBAAgB;QAC3B,YAAmB,GAAe,EAAS,WAAmB;YAA3C,QAAG,GAAH,GAAG,CAAY;YAAS,gBAAW,GAAX,WAAW,CAAQ;SAAK;QAE5D,QAAQ;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACnC;QAEM,QAAQ,CAAC,KAA6B;YAC3C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;SACpC;KACF;;ACvPYC,+BAAmB,GAAhC,MAAa,mBAAmB;QACvB,IAAI,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAgB;YAC9D,OAAO,CAAC,cAAc,GAAG,IAAIJ,6BAAqB,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;SAC7H;;QAGM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAgB,KAAW;KAC9E,CAAA;AAPYI,+BAAmB;QAD/B,eAAe,CAAC,MAAM,CAAC;OACXA,2BAAmB,CAO/B;;ICfD;;;;;;;;AAQA,IAAA,WAAY,WAAW;QACrB,mDAAiB,CAAA;QACjB,iDAAiB,CAAA;QACjB,qDAAiB,CAAA;QACjB,iDAAiB,CAAA;QACjB,mDAAiB,CAAA;IACnB,CAAC,EANWC,mBAAW,KAAXA,mBAAW,QAMtB;;ICRD,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAGA,mBAAW,CAAC;AAI1D,UAAsB,mBAAmB;QACvC,YAAoB,IAAiB;YAAjB,SAAI,GAAJ,IAAI,CAAa;SAAI;QAElC,IAAI,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA2B;YACzE,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC;YACpC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC1B;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA2B;YAC3E,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC;YACpC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;SAC7B;KACF;AAGD,AAAaC,kCAAsB,GAAnC,MAAa,sBAAuB,SAAQ,mBAAmB;QAC7D;YACE,KAAK,CAAC,OAAO,CAAC,CAAC;SAChB;KACF,CAAA;AAJYA,kCAAsB;QADlC,eAAe,CAAC,SAAS,CAAC;OACdA,8BAAsB,CAIlC;AAGYC,iCAAqB,GAAlC,MAAa,qBAAsB,SAAQ,mBAAmB;QAC5D;YACE,KAAK,CAAC,MAAM,CAAC,CAAC;SACf;KACF,CAAA;AAJYA,iCAAqB;QADjC,eAAe,CAAC,QAAQ,CAAC;OACbA,6BAAqB,CAIjC;AAGYC,mCAAuB,GAApC,MAAa,uBAAwB,SAAQ,mBAAmB;QAC9D;YACE,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjB;KACF,CAAA;AAJYA,mCAAuB;QADnC,eAAe,CAAC,UAAU,CAAC;OACfA,+BAAuB,CAInC;AAGYC,iCAAqB,GAAlC,MAAa,qBAAsB,SAAQ,mBAAmB;QAC5D;YACE,KAAK,CAAC,MAAM,CAAC,CAAC;SACf;KACF,CAAA;AAJYA,iCAAqB;QADjC,eAAe,CAAC,QAAQ,CAAC;OACbA,6BAAqB,CAIjC;;IC7CD,MAAM,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;IAC9C;IACA;IACA;IACA,MAAM,0BAA0B,GAAuB;QACrD,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,SAAS;QACd,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,IAAI;KACnB,CAAC;IAEF,SAAS,SAAS,CAAyB,UAA+B;QACxE,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;YACrC,0BAA0B,CAAC,GAAG,GAAG,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;YACvD,0BAA0B,CAAC,GAAG,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAEpB,oBAAY,CAAC,oBAAoB,CAAC,CAAC;YAClG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,WAAW,EAAE,0BAA0B,CAAC,EAAE;gBACjEqB,eAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;aACrC;SACF;QACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;IAED,SAASlB,SAAO;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;AAED,aAAgB,gBAAgB;QAC9B,OAAO,UAAS,MAAgB;YAC9B,oBAAoB,CAACF,oBAAY,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;YACpD,MAAM,KAAK,GAAqB,MAAM,CAAC,SAAS,CAAC;YAEjD,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;YACxB,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;YACjB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;;;;;;YAMzB,KAAK,CAAC,YAAY,GAAG,MAAM,EAAE,CAAC;YAE9B,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,SAAS,CAAC;YAC/C,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,gBAAgB,CAAC;YAEhE,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,IAAIE,SAAO,CAAC;SAC1C,CAAC;IACJ,CAAC;;ICpDD,MAAM,IAAI,GAAGM,eAAQ,CAAC,IAAI,CAAC;IAE3B;IACA;IACA;AACA,UAAa,iBAAiB;QAa5B,YAAY,GAAc,EAAE,WAAwB;YAH7C,eAAU,GAAY,IAAI,CAAC;;YAKhC,IAAI,WAAW,KAAK,QAAQ,EAAE;;gBAE5B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;gBACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;aACtC;SACF;QAEO,eAAe;YACrB,OAAgB,IAAI,CAAC,GAAI,CAAC,MAAM,CAAC;SAClC;QACO,eAAe;YACrB,OAAO,SAAS,CAAC;SAClB;KACF;IACD,iBAAiB,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC5C,iBAAiB,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;IAC7C,iBAAiB,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;IAC/C,iBAAiB,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;AAK3C,AAAaa,0BAAc,GAA3B,MAAa,cAAc;QAMzB,YAAY,GAAe,EAAE,WAAmB;YAC9C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SAChC;QAEM,QAAQ;YACb,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QACM,QAAQ,CAAC,QAAgC,EAAE,KAAmB;YACnE,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,YAAY,KAAK,QAAQ,EAAE;gBAC7B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAC7B,IAAI,EAAE,KAAK,GAAGtB,oBAAY,CAAC,QAAQ,CAAC,EAAE;oBACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;iBACrD;;;;;;;gBAOD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACnB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;iBACvC;aACF;SACF;KACF,CAAA;AAhCYsB,0BAAc;QAD1B,gBAAgB,EAAE;OACNA,sBAAc,CAgC1B;AAKYC,oBAAQ,GAArB,MAAa,QAAQ;QAOnB,YACE,QAAgB,EAChB,YAAoB,EACpB,YAAoB;YAElB,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC3C,IAAI,CAAC,QAAQ,GAAG,YAAY,IAAI,QAAQ;kBACpC,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;kBACrC,IAAI,CAAC;SACZ;QAEM,QAAQ;YACb,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QAEM,QAAQ,CAAC,QAAgC,EAAE,KAAmB;YACnE,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAEvC,IAAI,YAAY,KAAK,QAAQ,EAAE;gBAC7B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAE7B,IAAI,EAAE,KAAK,GAAGvB,oBAAY,CAAC,QAAQ,CAAC,EAAE;oBACpC,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;oBAE3D,IAAI,YAAY,KAAK,SAAS,EAAE;wBAC9B,IAAI,CAAC,YAAY,GAAG,QAAQ,GAAG,YAAY,CAAC;qBAC7C;oBAED,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;iBACrD;aACF;SACF;KACF,CAAA;AAzCYuB,oBAAQ;QADpB,gBAAgB,EAAE;OACNA,gBAAQ,CAyCpB;;IC1GD;AACA,UAAa,uBAAuB;QAC3B,WAAW,CAAC,GAAuC,EAAE,GAAW;YACrE,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACzB,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAID,sBAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;aACrD;YACD,OAAO,QAAQ,CAAC;SACjB;KACF;AAyBD,UAAa,cAAc;QAOzB,YAAoB,QAA8B,EAAE,KAAyD;YAJ7F,eAAU,GAAS,IAAI,CAAC;YAKtC,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,IAAI,KAAK,KAAK,SAAS,EAAE;;;oBAGvB,IAAI,CAAM,QAAQ,CAAC,GAAG,KAAK,CAAC;iBAC7B;qBAAM;;oBAEL,KAAK,MAAM,IAAI,IAAgB,QAAQ,EAAE;wBACvC,IAAI,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;4BACjC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;yBAC7B;qBACF;iBACF;aACF;SACF;QAIM,OAAO,MAAM,CAAC,QAA8B,EAAE,KAAyD;YAC5G,OAAO,IAAI,cAAc,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC5C;;QAGM,OAAO,GAAG,CAAC,KAAa,EAAE,IAAY,EAAE,QAAgB;YAC7D,IAAI,KAAK,KAAK,SAAS,EAAE;gBACvB,MAAMD,eAAQ,CAAC,KAAK,0BAA6B,CAAC;aACnD;YACD,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,MAAMA,eAAQ,CAAC,KAAK,qBAAwB,CAAC;aAC9C;YACD,IAAI,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;YAE5C,IAAI,QAAQ,GAAG,CAAC,EAAE;;gBAEhB,OAAO,QAAQ,GAAG,CAAC,EAAE;oBACnB,IAAI,eAAe,CAAC,qBAAqB,KAAK,IAAI,EAAE;wBAClD,OAAO,SAAS,CAAC;qBAClB;oBACD,QAAQ,EAAE,CAAC;oBACX,eAAe,GAAG,eAAe,CAAC,qBAAqB,CAAC;iBACzD;gBAED,OAAO,IAAI,IAAI,eAAe,GAAG,eAAe,GAAG,eAAe,CAAC,cAAc,CAAC;aACnF;;YAGD,OAAO,eAAe,IAAI,EAAE,IAAI,IAAI,eAAe,CAAC,IAAI,EAAE,eAAe,CAAC,cAAc,IAAI,IAAI,IAAI,eAAe,CAAC,cAAc,CAAC,EAAE;gBACnI,eAAe,GAAG,eAAe,CAAC,qBAAqB,CAAC;aACzD;YAED,IAAI,eAAe,EAAE;;gBAEnB,OAAO,IAAI,IAAI,eAAe,GAAG,eAAe,GAAG,eAAe,CAAC,cAAc,CAAC;aACnF;;YAGD,OAAO,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,eAAe,CAAC;SACtD;QAEM,YAAY;YACjB,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YAChC,IAAI,SAAS,KAAK,SAAS,EAAE;gBAC3B,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,uBAAuB,EAA2B,CAAC;aACtF;YACD,OAAO,SAAS,CAAC;SAClB;KACF;AAED,UAAa,KAAK;QAChB,YACkB,cAA4C,EAC5C,eAAiC;YADjC,mBAAc,GAAd,cAAc,CAA8B;YAC5C,oBAAe,GAAf,eAAe,CAAkB;SAC9C;QAEE,OAAO,MAAM,CAAC,EAAgC,EAAE,EAA2B;YAChF,OAAO,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,IAAI,IAAI,EAAE,KAAK,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;SAC7F;QAEM,OAAO,YAAY,CAAC,EAAoB;YAC7C,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE;gBACnC,MAAMA,eAAQ,CAAC,KAAK,8BAAiC,CAAC;aACvD;YACD,OAAO,IAAI,KAAK,CAAC,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;SACzC;QAEM,OAAO,UAAU,CAAC,EAAU,EAAE,EAAgC;YACnE,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE;gBACnC,MAAMA,eAAQ,CAAC,KAAK,0BAA6B,CAAC;aACnD;YACD,OAAO,IAAI,KAAK,CAAC,EAAE,EAAE,eAAe,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;SACtE;KACF;AAED,UAAa,eAAe;QAK1B,YACkB,cAA4C,EAC5C,qBAA8C;YAD9C,mBAAc,GAAd,cAAc,CAA8B;YAC5C,0BAAqB,GAArB,qBAAqB,CAAyB;YAJhD,eAAU,GAAS,IAAI,CAAC;SAKnC;QAEE,OAAO,MAAM,CAAC,EAAgC,EAAE,GAA4B;YACjF,OAAO,IAAI,eAAe,CAAC,EAAE,EAAE,GAAG,KAAK,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;SAChE;QAEM,YAAY;YACjB,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YAChC,IAAI,SAAS,KAAK,SAAS,EAAE;gBAC3B,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,uBAAuB,EAAE,CAAC;aAC7D;YACD,OAAO,SAA8C,CAAC;SACvD;KACF;;UCpKY,SAAS,GAAGb,SAAE,CAAC,eAAe,EAAa,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEjG;AACA,UAAa,QAAQ;QAGnB;YACE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACpC;QAEM,cAAc,CAAC,IAAY,EAAE,KAAoB;YACtD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,SAAS,KAAK,SAAS,EAAE;gBAC3B,OAAO;aACR;YACD,KAAK,MAAM,QAAQ,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE;gBACvC,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,GAAGR,oBAAY,CAAC,oBAAoB,CAAC,CAAC;aACxF;SACF;QAEM,iBAAiB,CAAC,IAAY,EAAE,QAA6B;YAClE,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,SAAS,KAAK,SAAS,EAAE;gBAC3B,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAA;aACpC;iBAAM;gBACL,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACzB;SACF;QAEM,oBAAoB,CAAC,IAAY,EAAE,QAA6B;YACrE,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,SAAS,EAAE;gBACb,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aAC5B;SACF;KACF;;aCxCe,cAAc,CAAC,YAA4C;QACzE,OAAO,UAAkC,MAAS;YAChD,OAAO,sBAAsB,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC5D,CAAA;IACH,CAAC;AAED,UAAa,sBAAsB,GAA8D;QAC/F,IAAI,EAAE,iBAAiB;QAEvB,OAAO,CAAC,IAAY;YAClB,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;SAC/B;QAED,MAAM,CAA0B,IAAO;YACrC,OAAQ,IAAY,CAAC,IAAI,KAAK,IAAI,CAAC;SACpC;QAED,MAAM,CAA0B,YAA4C,EAAE,IAAO;YACnF,MAAM,IAAI,GAAG,IAA+B,CAAC;YAC7C,MAAM,WAAW,GAAG,OAAO,YAAY,KAAK,QAAQ;kBAChD,EAAE,IAAI,EAAE,YAAY,EAAE;kBACtB,YAAY,CAAC;YAEhB,IAAsC,CAAC,IAAI,GAAG,sBAAsB,CAAC;YACrE,IAAsC,CAAC,WAAW,GAAG,WAAW,CAAC;YAClE,IAAI,CAAC,QAAQ,GAAGwB,UAAQ,CAAC;YAEzB,OAAO,IAAI,CAAC;SACb;KACF,CAAC;IAEF,SAASA,UAAQ,CAA4B,SAAqB;QAChE,SAAS,CAAC,QAAQ,CAChBzB,mBAAY,CAAC,SAAS,CACpB,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EACrD,IAAI,CACL,CACF,CAAC;IACJ,CAAC;;aC6Ee,QAAQ,CAAC,IAA6B;QACpD,OAAO,CAAC,IAAI,CAAC,KAAK,4CAAwD;IAC5E,CAAC;AACD,aAAgB,QAAQ,CAAC,IAA6B;QACpD,OAAO,CAAC,IAAI,CAAC,KAAK,4CAAwD;IAC5E,CAAC;AACD,aAAgB,aAAa,CAAC,IAA6B;QACzD,OAAO,CAAC,IAAI,CAAC,KAAK,wDAAkE;IACtF,CAAC;AACD,aAAgB,WAAW,CAAC,IAA6B;QACvD,OAAO,CAAC,IAAI,CAAC,KAAK,oDAA8D;IAClF,CAAC;AACD,aAAgB,YAAY,CAAC,IAA6B;QACxD,OAAO,CAAC,IAAI,CAAC,KAAK,wDAAgE;IACpF,CAAC;AACD,aAAgB,cAAc,CAAC,IAA6B;QAC1D,OAAO,CAAC,IAAI,CAAC,KAAK,4DAAoE;IACxF,CAAC;AACD,aAAgB,SAAS,CAAC,IAA6B;QACrD,OAAO,CAAC,IAAI,CAAC,KAAK,gDAA0D;IAC9E,CAAC;AACD,aAAgB,UAAU,CAAC,IAA6B;QACtD,OAAO,CAAC,IAAI,CAAC,KAAK,sDAA4D;IAChF,CAAC;AACD,aAAgB,OAAO,CAAC,IAA6B;QACnD,OAAO,CAAC,IAAI,CAAC,KAAK,8CAAsD;IAC1E,CAAC;AACD,aAAgB,SAAS,CAAC,IAA6B;QACrD,OAAO,CAAC,IAAI,CAAC,KAAK,kDAA0D;IAC9E,CAAC;AACD,aAAgB,SAAS,CAAC,IAA6B;QACrD,OAAO,CAAC,IAAI,CAAC,KAAK,oDAA0D;IAC9E,CAAC;AACD,aAAgB,eAAe,CAAC,WAAmD;QACjF,MAAM,GAAG,GAAG,WAAW,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC;QACnD,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,OAAO,IAAI,CAAC;SACb;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;gBAClC,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;AACD,aAAgB,aAAa,CAAC,IAA6B;QACzD,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;YACnB,QAAQ,IAAI,CAAC,KAAK;gBAChB;oBACE,OAAO,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACxC;oBACE,OAAO,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACtC;oBACE,OAAO,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC3C;oBACE,OAAO,IAAI,CAAC;aACf;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;AAcD,UAAa,eAAe;QAK1B,YACkB,UAA6B,EAC7B,IAAY,EACZ,IAA6B;YAF7B,eAAU,GAAV,UAAU,CAAmB;YAC7B,SAAI,GAAJ,IAAI,CAAQ;YACZ,SAAI,GAAJ,IAAI,CAAyB;YAC7C,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9D,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;YAC7C,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;SAClD;QAEM,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACxD;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB,EAAE,KAAgB;YAC1F,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;SAC7D;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAChD;QAEM,IAAI,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC1E,IAAI,KAAK,KAAK,SAAS,EAAE;gBACvB,MAAMsB,eAAQ,CAAC,KAAK,2BAA8B,IAAI,CAAC,CAAC;aACzD;YACD,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,MAAMA,eAAQ,CAAC,KAAK,sBAAyB,IAAI,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAMA,eAAQ,CAAC,KAAK,sBAAyB,IAAI,CAAC,CAAC;aACpD;YACD,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAChC,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAMA,eAAQ,CAAC,KAAK,sBAAyB,IAAI,CAAC,CAAC;aACpD;YACD,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBACzB,IAAI,CAAC,UAA8B,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aAClE;YACD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAkB,WAAW,CAAC,CAAC;YAC3D,IAAI,CAAC,QAAQ,EAAE;gBACb,MAAMA,eAAQ,CAAC,KAAK,4BAA+B,IAAI,CAAC,CAAC;aAC1D;YACD,IAAI,OAAO,CAAC,WAAW,CAAC,KAAK,SAAS,EAAE;gBACtC,MAAMA,eAAQ,CAAC,KAAK,mCAAsC,IAAI,CAAC,CAAC;aACjE;YACD,OAAO,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;YAChC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC1H;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC5E,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YACnD,OAAO,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;YAC5B,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC3B,IAAI,CAAC,UAA+C,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aACrF;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;SAC3C;KACF;AAED,UAAa,cAAc;QAGzB,YACkB,UAA4B,EAC5B,IAAY,EACZ,IAA6B;YAF7B,eAAU,GAAV,UAAU,CAAkB;YAC5B,SAAI,GAAJ,IAAI,CAAQ;YACZ,SAAI,GAAJ,IAAI,CAAyB;YAC7C,IAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/D;QAEM,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAMA,eAAQ,CAAC,KAAK,sBAAyB,IAAI,CAAC,CAAC;aACpD;YACD,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAiE,IAAI,CAAC,YAAY,CAAC,CAAC;YACjH,IAAI,CAAC,SAAS,EAAE;gBACd,MAAMA,eAAQ,CAAC,KAAK,6BAAgC,IAAI,CAAC,CAAC;aAC3D;YACD,IAAI,QAAQ,IAAI,SAAS,EAAE;gBACzB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;gBACxB,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;gBAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;oBAC5B,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;iBACzD;gBACD,OAAO,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;aAClD;YACD,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACxD;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB,EAAE,KAAgB;YAC1F,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAMA,eAAQ,CAAC,KAAK,sBAAyB,IAAI,CAAC,CAAC;aACpD;YACD,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAmE,IAAI,CAAC,YAAY,CAAC,CAAC;YACnH,IAAI,CAAC,SAAS,EAAE;gBACd,MAAMA,eAAQ,CAAC,KAAK,6BAAgC,IAAI,CAAC,CAAC;aAC3D;YACD,IAAI,UAAU,IAAI,SAAS,EAAE;gBAC3B,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACzG;YACD,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;SAC7D;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,IAAI,KAAK,KAAK,SAAS,EAAE;gBACvB,MAAMA,eAAQ,CAAC,KAAK,2BAA8B,IAAI,CAAC,CAAC;aACzD;YACD,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,MAAMA,eAAQ,CAAC,KAAK,sBAAyB,IAAI,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAMA,eAAQ,CAAC,KAAK,sBAAyB,IAAI,CAAC,CAAC;aACpD;YACD,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAChC,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAMA,eAAQ,CAAC,KAAK,sBAAyB,IAAI,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC7C,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aACxC;YACD,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAA2B,CAAC;YAC3E,IAAI,CAAC,SAAS,EAAE;gBACd,MAAMA,eAAQ,CAAC,KAAK,6BAAgC,IAAI,CAAC,CAAC;aAC3D;YACD,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;YAClC,IAAI,OAAO,KAAK,SAAS,EAAE;gBACzB,OAAO;aACR;YACD,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;YACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAChD,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;aACjD;SACF;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC5E,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAChC,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAA2B,CAAC;YAC3E,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;YAClC,IAAI,OAAO,KAAK,SAAS,EAAE;gBACzB,OAAO;aACR;YACD,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAc,CAAC;YACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAChD,QAAQ,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;aACpD;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SAC1C;KACF;AAED,UAAa,MAAM;QAEjB,YACkB,MAAoB,EACpB,KAAe;YADf,WAAM,GAAN,MAAM,CAAc;YACpB,UAAK,GAAL,KAAK,CAAU;SAAK;QAE/B,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;SAC9F;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B,KAAW;QAEnF,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB,EAAE,KAAgB;YAC1F,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;SACzD;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAClC;KACF;AAED,UAAa,WAAW;QAGtB,YACkB,SAAmB,EACnB,GAAa,EACb,EAAY;YAFZ,cAAS,GAAT,SAAS,CAAU;YACnB,QAAG,GAAH,GAAG,CAAU;YACb,OAAE,GAAF,EAAE,CAAU;SAAK;QAE5B,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC;kBACpD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC;kBACxC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAC7C;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE;gBAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;gBAC9C,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aACzC;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;gBAC9C,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aACxC;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACvC;KACF;AAED,UAAa,UAAU;QAMrB,YACkB,WAAmB,CAAC;YAApB,aAAQ,GAAR,QAAQ,CAAY;SAAK;QAEpC,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,IAAI,KAAK,KAAK,SAAS,EAAE;gBACvB,MAAMA,eAAQ,CAAC,KAAK,2BAA8B,IAAI,CAAC,CAAC;aACzD;YACD,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,MAAMA,eAAQ,CAAC,KAAK,sBAAyB,IAAI,CAAC,CAAC;aACpD;YACD,IAAI,EAAE,GAAG,KAAK,CAAC,eAAe,CAAC;YAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtB,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE;gBAChB,EAAE,GAAG,EAAE,CAAC,qBAAqB,CAAC;aAC/B;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,cAAc,GAAG,SAAS,CAAC;SACpD;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACtC;;IAzBsB,gBAAK,GAAe,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,kBAAO,GAAe,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;AA2BjE,UAAa,WAAW;QAEtB,YACkB,IAAY,EACZ,WAAmB,CAAC;YADpB,SAAI,GAAJ,IAAI,CAAQ;YACZ,aAAQ,GAAR,QAAQ,CAAY;SAAK;QAEpC,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,OAAO,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;SAC7D;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB,EAAE,KAAgB;YAC1F,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,MAAM,OAAO,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC/D,OAAO,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,SAAS,CAAC;SACtD;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,MAAM,OAAO,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC/D,OAAO,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACxC;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACvC;KACF;AAED,UAAa,YAAY;QAEvB,YACkB,MAAsB,EACtB,IAAY;YADZ,WAAM,GAAN,MAAM,CAAgB;YACtB,SAAI,GAAJ,IAAI,CAAQ;SAAK;QAE5B,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC7D,OAAO,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrF;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB,EAAE,KAAgB;YAC1F,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC3D,IAAI,QAAQ,KAAK,IAAI,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBACrD,QAAQ,GAAG,EAAE,CAAC;gBACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;aACrD;YACD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YAC5B,OAAO,KAAK,CAAC;SACd;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC3C,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACzC;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SACxC;KACF;AAED,UAAa,WAAW;QAEtB,YACkB,MAAsB,EACtB,GAAa;YADb,WAAM,GAAN,MAAM,CAAgB;YACtB,QAAG,GAAH,GAAG,CAAU;SAAK;QAE7B,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC7D,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC/C,OAAO,SAAS,CAAC;aAClB;YACD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;;;;YAIrD,OAAO,QAAQ,CAAM,GAAG,CAAC,CAAC;SAC3B;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB,EAAE,KAAgB;YAC1F,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC7D,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;;YAErD,OAAO,QAAQ,CAAM,GAAG,CAAC,GAAG,KAAK,CAAC;SACnC;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC3C,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;gBAC3C,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;gBACxC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;;;gBAGlD,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC3C,OAAO,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;iBACnC;aACF;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACvC;KACF;AAED,UAAa,SAAS;QAGpB,YACkB,IAAY,EACZ,IAA6B,EAC7B,WAAmB,CAAC;YAFpB,SAAI,GAAJ,IAAI,CAAQ;YACZ,SAAI,GAAJ,IAAI,CAAyB;YAC7B,aAAQ,GAAR,QAAQ,CAAY;SAAK;QAEpC,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA+B;YACjF,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACxD,MAAM,OAAO,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpE,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACpD,IAAI,IAAI,EAAE;gBACR,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aAClC;YACD,OAAO,SAAS,CAAC;SAClB;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC7C,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aACxC;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACrC;KACF;AAED,UAAa,UAAU;QAGrB,YACkB,MAAsB,EACtB,IAAY,EACZ,IAA6B;YAF7B,WAAM,GAAN,MAAM,CAAgB;YACtB,SAAI,GAAJ,IAAI,CAAQ;YACZ,SAAI,GAAJ,IAAI,CAAyB;SAAK;QAE7C,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC7D,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACxD,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,IAAI,EAAE;gBACR,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aACnC;YACD,OAAO,SAAS,CAAC;SAClB;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAC3C,IAAI,WAAW,CAAC,KAAK,GAAG,CAACrB,oBAAY,CAAC,YAAY,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;gBACnE,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC7C,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;iBACxC;aACF;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACtC;KACF;AAED,UAAa,YAAY;QAGvB,YACkB,IAAoB,EACpB,IAA6B;YAD7B,SAAI,GAAJ,IAAI,CAAgB;YACpB,SAAI,GAAJ,IAAI,CAAyB;SAAK;QAE7C,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAc,CAAC;YACpE,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;gBAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aACrE;YACD,IAAI,EAAE,KAAK,GAAGA,oBAAY,CAAC,YAAY,CAAC,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,CAAC,EAAE;gBACjF,OAAO,SAAS,CAAC;aAClB;YACD,MAAMqB,eAAQ,CAAC,KAAK,yBAA4B,IAAI,CAAC,CAAC;SACvD;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YACzC,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;gBAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC7C,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;iBACxC;aACF;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SACxC;KACF;AAID,UAAa,MAAM;QAGjB,YACkB,SAAyB,EACzB,IAAc,EACd,KAAe;YAFf,cAAS,GAAT,SAAS,CAAgB;YACzB,SAAI,GAAJ,IAAI,CAAU;YACd,UAAK,GAAL,KAAK,CAAU;;;;YAI/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;SACjC;QAEM,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAMA,eAAQ,CAAC,KAAK,4BAA+B,IAAI,CAAC,CAAC;SAC1D;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,IAAI,EAAE;gBACvE,OAAO;aACR;YACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAC3C;QAEO,CAAC,IAAI,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACpE;QACO,CAAC,IAAI,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACpE;QACO,CAAC,IAAI,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;;YAE3D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACpE;QACO,CAAC,KAAK,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACrE;QACO,CAAC,IAAI,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;;YAE3D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACpE;QACO,CAAC,KAAK,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACrE;QACO,CAAC,YAAY,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YACnE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;gBAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,YAAY,KAAK,CAAC;aACrD;YACD,OAAO,KAAK,CAAC;SACd;QACO,CAAC,IAAI,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC3D,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC;aAC7C;YACD,OAAO,KAAK,CAAC;SACd;;;;;QAKO,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;;YAE1D,OAAa,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SACjF;QACO,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;;YAE1D,OAAa,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SACjF;QACO,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;;YAE1D,OAAa,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SACjF;QACO,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;;YAE1D,OAAa,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SACjF;QACO,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;;YAE1D,OAAa,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SACjF;QACO,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACnE;QACO,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACnE;QACO,CAAC,IAAI,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACpE;QACO,CAAC,IAAI,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACpE;;QAGM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAClC;KACF;AAID,UAAa,KAAK;QAGhB,YACkB,SAAwB,EACxB,UAA0B;YAD1B,cAAS,GAAT,SAAS,CAAe;YACxB,eAAU,GAAV,UAAU,CAAgB;;;YAG1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;SACjC;QAEM,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAMA,eAAQ,CAAC,KAAK,4BAA+B,IAAI,CAAC,CAAC;SAC1D;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAChD;QAEM,CAAC,MAAM,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC5D,OAAO,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/C;QACM,CAAC,QAAQ,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YAC9D,OAAO,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACjD;QACM,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YACzD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3C;QACM,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YACzD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3C;QACM,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,CAAS,EAAE,CAAkB;YACzD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3C;;QAGM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACjC;KACF;AACD,UAAa,gBAAgB;QAS3B,YAA4B,KAAa;YAAb,UAAK,GAAL,KAAK,CAAQ;SAAK;QAEvC,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;SAC5C;;IAhBsB,2BAAU,GAAgC,IAAI,gBAAgB,CAAY,SAAS,CAAC,CAAC;IACrF,sBAAK,GAA2B,IAAI,gBAAgB,CAAO,IAAI,CAAC,CAAC;IACjE,sBAAK,GAA2B,IAAI,gBAAgB,CAAO,IAAI,CAAC,CAAC;IACjE,uBAAM,GAA4B,IAAI,gBAAgB,CAAQ,KAAK,CAAC,CAAC;IACrE,uBAAM,GAA6B,IAAI,gBAAgB,CAAK,EAAE,CAAC,CAAC;AAezF,UAAa,WAAW;QAGtB,YAA4B,KAAiC;YAAjC,UAAK,GAAL,KAAK,CAA4B;SAAK;QAE3D,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;YAC5B,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACjD,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;gBAC1D,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;oBACzC,SAAS;iBACV;gBACD,MAAM,IAAI,KAAK,CAAC;aACjB;YACD,OAAO,MAAM,CAAC;SACf;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACnD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aAC9C;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACvC;KACF;AAED,UAAa,YAAY;QAIvB,YAA4B,QAAiC;YAAjC,aAAQ,GAAR,QAAQ,CAAyB;SAAK;QAE3D,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC/B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC/B,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aACzD;YACD,OAAO,MAAM,CAAC;SACf;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACjD,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aAC5C;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SACxC;;IAxBsB,mBAAM,GAAiB,IAAI,YAAY,CAACZ,eAAQ,CAAC,UAAU,CAAC,CAAC;AA2BtF,UAAa,aAAa;QAIxB,YACkB,IAAoC,EACpC,MAA+B;YAD/B,SAAI,GAAJ,IAAI,CAAgC;YACpC,WAAM,GAAN,MAAM,CAAyB;SAAK;QAE/C,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,QAAQ,GAA8B,EAAE,CAAC;YAC/C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC7C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aAC/D;YACD,OAAO,QAAQ,CAAC;SACjB;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC7C,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aAC1C;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;SACzC;;IA3BsB,oBAAM,GAAkB,IAAI,aAAa,CAACA,eAAQ,CAAC,UAAU,EAAEA,eAAQ,CAAC,UAAU,CAAC,CAAC;AA8B7G,UAAa,QAAQ;QAInB,YACkB,MAA6B,EAC7B,WAAqC;YADrC,WAAM,GAAN,MAAM,CAAuB;YAC7B,gBAAW,GAAX,WAAW,CAA0B;YACrD,IAAI,CAAC,WAAW,GAAG,WAAW,IAAIA,eAAQ,CAAC,UAAU,CAAC;SACvD;QAEM,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;gBACzD,MAAM,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACzB;YACD,OAAO,MAAM,CAAC;SACf;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;gBAC9C,CAAC,EAAE,CAAC;aACL;SACF;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACpC;;IA9BsB,eAAM,GAAa,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAiC/D,UAAa,cAAc;QAGzB,YACkB,MAA+D,EAC/E,GAA0B,EACV,IAAoB,EACpB,WAAqC;YAHrC,WAAM,GAAN,MAAM,CAAyD;YAE/D,SAAI,GAAJ,IAAI,CAAgB;YACpB,gBAAW,GAAX,WAAW,CAA0B;YACrD,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,WAAW,GAAG,WAAW,IAAIA,eAAQ,CAAC,UAAU,CAAC;SACvD;QAEM,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,MAAM,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC;YAC/B,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACrC,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aAC7D;YACD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAc,CAAC;YACpE,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;gBAC9B,MAAMY,eAAQ,CAAC,KAAK,yBAA4B,IAAI,CAAC,CAAC;aACvD;YACD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SACxD;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;aAC/C;YACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAC1C;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SAC1C;KACF;AAED,UAAa,mBAAmB;;QAG9B,YACkB,QAAiC;YAAjC,aAAQ,GAAR,QAAQ,CAAyB;SAC9C;;QAGE,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;;SAE3E;;QAGM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB,EAAE,GAAe;;SAE1F;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B,KAAW;QAEnF,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;SAC/C;KACF;AAED,UAAa,oBAAoB;;QAG/B,YACkB,IAAoC,EACpC,MAA+B;YAD/B,SAAI,GAAJ,IAAI,CAAgC;YACpC,WAAM,GAAN,MAAM,CAAyB;SAC5C;;QAGE,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;;SAE3E;;QAGM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB,EAAE,GAAe;;SAE1F;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B,KAAW;QAEnF,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;SAChD;KACF;AAED,UAAa,iBAAiB;QAE5B,YAA4B,IAAY;YAAZ,SAAI,GAAJ,IAAI,CAAQ;SAAK;QAEtC,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QACM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B,KAAW;QAEnF,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;SAC7C;KACF;IAID,MAAM,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IAE9C;IACA;AACA,UAAa,cAAc;QAGzB,YACkB,WAAuC,EACvC,QAA2B;YAD3B,gBAAW,GAAX,WAAW,CAA4B;YACvC,aAAQ,GAAR,QAAQ,CAAmB;SAAK;QAE3C,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACtD;QAEM,KAAK,CAAC,MAAsD;YACjE,OAAO,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;SAC9D;;QAGM,OAAO,CAAC,MAAsD,EAAE,IAAyD;YAC9H,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SAC/D;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;YAC7E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAC9C;QAEM,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SAC1C;KACF;IAED;;;;;AAKA,UAAa,aAAa;QAKxB,YACkB,KAA4B,EAC5B,WAA6C;YAD7C,UAAK,GAAL,KAAK,CAAuB;YAC5B,gBAAW,GAAX,WAAW,CAAkC;YAC3D,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;SACvC;QAEI,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YAC1E,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACrC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACzB,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBACpD,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;oBACzD,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBACxB;gBACD,OAAO,MAAM,CAAC;aACf;iBAAM;gBACL,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACzB,OAAO,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACnF;SACF;QACM,OAAO,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B,KAAW;QAEnF,MAAM,CAAI,OAAoB;YACnC,OAAO,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;SACzC;KACF;IAED;;;;;;IAMA,eAAe,CAAC,SAAS,CAAC,KAAK,+BAAkC;IACjE,cAAc,CAAC,SAAS,CAAC,KAAK,8BAAiC;IAC/D,MAAM,CAAC,SAAS,CAAC,KAAK,qBAAyB;IAC/C,WAAW,CAAC,SAAS,CAAC,KAAK,wBAA8B;IACzD,UAAU,CAAC,SAAS,CAAC,KAAK,yBAA6B;IACvD,WAAW,CAAC,SAAS,CAAC,KAAK,2BAA8B;IACzD,YAAY,CAAC,SAAS,CAAC,KAAK,2BAA+B;IAC3D,WAAW,CAAC,SAAS,CAAC,KAAK,0BAA8B;IACzD,SAAS,CAAC,SAAS,CAAC,KAAK,wBAA4B;IACrD,UAAU,CAAC,SAAS,CAAC,KAAK,yBAA6B;IACvD,YAAY,CAAC,SAAS,CAAC,KAAK,2BAA+B;IAC3D,MAAM,CAAC,SAAS,CAAC,KAAK,mBAAyB;IAC/C,KAAK,CAAC,SAAS,CAAC,KAAK,kBAAwB;IAC7C,gBAAgB,CAAC,SAAS,CAAC,KAAK,gCAAmC;IACnE,WAAW,CAAC,SAAS,CAAC,KAAK,wBAA8B;IACzD,YAAY,CAAC,SAAS,CAAC,KAAK,4BAA+B;IAC3D,aAAa,CAAC,SAAS,CAAC,KAAK,6BAAgC;IAC7D,QAAQ,CAAC,SAAS,CAAC,KAAK,wBAA2B;IACnD,cAAc,CAAC,SAAS,CAAC,KAAK,6BAAiC;IAC/D,mBAAmB,CAAC,SAAS,CAAC,KAAK,mCAAsC;IACzE,oBAAoB,CAAC,SAAS,CAAC,KAAK,oCAAuC;IAC3E,iBAAiB,CAAC,SAAS,CAAC,KAAK,iCAAoC;IACrE,cAAc,CAAC,SAAS,CAAC,KAAK,2BAAiC;IAC/D,aAAa,CAAC,SAAS,CAAC,KAAK,0BAAgC;IAE7D;IACA,SAAS,QAAQ,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB,EAAE,IAAgC;QAC9G,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5B,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACrD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,SAAS,WAAW,CAAC,KAAmB,EAAE,GAAc,EAAE,IAAY;QACpE,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;QAClE,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;QACD,IAAI,EAAE,KAAK,GAAGrB,oBAAY,CAAC,YAAY,CAAC,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,CAAC,EAAE;YACjF,OAAO,IAAI,CAAC;SACb;QACD,MAAMqB,eAAQ,CAAC,KAAK,yBAA4B,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,SAAS,SAAS,CAAC,KAAgB;;QAEjC,MAAM,IAAI,GAAG,OAAO,KAAK,CAAC;QAC1B,IAAI,IAAI,KAAK,QAAQ;YAAE,OAAO,IAAI,CAAC;QACnC,IAAI,IAAI,KAAK,QAAQ;YAAE,OAAO,KAAK,CAAC;QACpC,MAAM,GAAG,GAAY,KAAM,CAAC,MAAM,CAAC;QACnC,IAAI,GAAG,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5B,MAAM,IAAI,GAAY,KAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,IAAI,GAAG,IAAI,UAAU,IAAI,GAAG,IAAI,QAAO;gBACzC,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;AACA,UAAa,qBAAqB,GAAG;QACnC,CAAC,gBAAgB,CAAC,CAAC,MAAmB,EAAE,IAA+D;YACrG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC/C,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5B;SACF;QACD,CAAC,cAAc,CAAC,CAAC,MAAiC,EAAE,IAA+D;YACjH,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;gBACpC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;aAClB;YACD,qBAAqB,CAAC,gBAAgB,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACpD;QACD,CAAC,cAAc,CAAC,CAAC,MAAsB,EAAE,IAA+D;YACtG,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE;gBAC/B,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;aAChB;YACD,qBAAqB,CAAC,gBAAgB,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACpD;QACD,CAAC,iBAAiB,CAAC,CAAC,MAAc,EAAE,IAA+D;YACjG,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACZ;YACD,qBAAqB,CAAC,gBAAgB,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACpD;QACD,CAAC,eAAe,CAAC,CAAC,MAAY,EAAE,IAA+D,KAAW;QAC1G,CAAC,oBAAoB,CAAC,CAAC,MAAY,EAAE,IAA+D,KAAW;KAChH,CAAC;IAEF;AACA,UAAa,mBAAmB,GAAG;QACjC,CAAC,gBAAgB,CAAC,CAAC,MAAmB,IAAY,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE;QACzE,CAAC,cAAc,CAAC,CAAC,MAAiC,IAAY,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE;QACnF,CAAC,cAAc,CAAC,CAAC,MAAsB,IAAY,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE;QACxE,CAAC,iBAAiB,CAAC,CAAC,MAAc,IAAY,OAAO,MAAM,CAAC,EAAE;QAC9D,CAAC,eAAe,CAAC,CAAC,MAAY,IAAY,OAAO,CAAC,CAAC,EAAE;QACrD,CAAC,oBAAoB,CAAC,CAAC,MAAY,IAAY,OAAO,CAAC,CAAC,EAAE;KAC3D,CAAC;IAEF;IACA;IACA;IACA;IACA;IACA,MAAM,GAAG,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,gBAAgB,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;IACnO,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;QAC5C,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;;QAE/B,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,IAASZ,eAAQ,CAAC,IAAI,CAAC;QAClD,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,IAAIA,eAAQ,CAAC,IAAI,CAAC;KAChD;;ICjtCD;IAEA,MAAM,SAAS,GAAa,EAAE,CAAC;IAC/B,MAAM,gBAAgB,GAAa,EAAE,CAAC;IACtC,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;IAClB,SAAS,qBAAqB,CAAC,WAAmB;QAChD,IAAI,WAAW,KAAK,QAAQ,EAAE;YAC5B,QAAQ,IAAI,CAAC,CAAC;YACd,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,GAAG,QAAQ,GAAG,CAAC,CAAC;YACrE,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACzC,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC;gBAC/B,gBAAgB,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,EAAE,CAAC;aAC9C;SACF;IACH,CAAC;IACD,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;IAc1B;AACA,aAAgB,WAAW,CAA4B,QAAgC;;QAErF,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,KAAK,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAChF,IAAI,CAAC,GAAG,aAAa,CAAC;QAEtB,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ;YAAC,CAAC;;QAG/C,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YACZ,CAAC,GAAG,CAAC,CAAC;YACN,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBACzB,CAAC,EAAE,CAAC;aACL;YACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;YAC9B,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;YAEzB,IAAI,CAAC,KAAK,aAAa,EAAE;gBACvB,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;aAC5B;SACF;;QAED,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;YAC9B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;QACD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QACzC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED;AACA,aAAgB,eAAe,CAA4B,GAAe,EAAE,YAAoB;QAC9F,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,CAA2B,CAAC;;;;;;;;QAQ/F,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED;AACA,aAAgB,SAAS,CAA4B,GAAa;QAChE,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;QACjC,IAAI,QAAgB,CAAC;QACrB,IAAI,QAAgC,CAAC;QACrC,IAAI,GAAG,KAAK,IAAI,EAAE;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;gBAC9B,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACxB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1B,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC/C,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;oBACtB,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBAC5B;aACF;SACF;aAAM;YACL,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;gBAC9B,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;oBACzC,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;oBACxB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC1B,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;wBAC/C,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;wBACtB,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;qBAC5B;iBACF;aACF;SACF;IACH,CAAC;IAKD,SAAS,oBAAoB,CAAC,MAA8B;QAC1D,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,iBAAiB,CAAC;YAAE,KAAK,CAAC,eAAe,GAAG,eAAe,CAAC;QACtF,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC;YAAE,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QACpE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC;YAAE,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC;QAC1E,OAAO,MAA8B,CAAC;IACxC,CAAC;AAID,aAAgB,WAAW,CAAC,MAA+B;QACzD,OAAO,MAAM,KAAK,SAAS,GAAG,oBAAoB,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;IACpF,CAAC;;ICpGD;IACA,MAAM,WAAEgB,SAAO,UAAEC,QAAM,YAAEC,UAAQ,EAAE,GAAGX,mBAAW,CAAC;IAElD;IACA,MAAM,eAAe,GAAGU,QAAM,GAAGD,SAAO,CAAC;AAKzC,AAAaG,mBAAO,GAApB,MAAa,OAAO;QAMlB,YACS,gBAAoD,EACpD,MAAsB,EACtB,cAAsB,EACtB,IAAiB,EACjB,eAAiC,EACjC,OAAwB;YALxB,qBAAgB,GAAhB,gBAAgB,CAAoC;YACpD,WAAM,GAAN,MAAM,CAAgB;YACtB,mBAAc,GAAd,cAAc,CAAQ;YACtB,SAAI,GAAJ,IAAI,CAAa;YACjB,oBAAe,GAAf,eAAe,CAAkB;YACjC,YAAO,GAAP,OAAO,CAAiB;YAX1B,aAAQ,GAAY,KAAK,CAAC;YAC1B,WAAM,GAAW,IAAI,CAAC;SAUS;QAE/B,YAAY,CAAC,KAAU,EAAE,KAAmB;YACjD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG5B,oBAAY,CAAC,oBAAoB,CAAC,CAAC;SAChF;QAEM,YAAY,CAAC,KAAU,EAAE,KAAmB;YACjD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,GAAGA,oBAAY,CAAC,sBAAsB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SAC7G;QAEM,YAAY,CAAC,QAAa,EAAE,aAAkB,EAAE,KAAmB;YACxE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAE7B,IAAI,KAAK,GAAGA,oBAAY,CAAC,oBAAoB,EAAE;gBAC7C,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;gBAC3C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAEvB,aAAa,GAAG,cAAc,CAAC,QAAQ,EAAE,CAAC;;gBAE1C,IAAI,gBAAgB,CAAC,KAAK,gCAAmC,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;oBACnF,QAAQ,GAAG,gBAAgB,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;iBAC9D;gBACD,IAAI,QAAQ,KAAK,aAAa,EAAE;oBAC9B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;iBACpC;gBACD,IAAI,CAAC,IAAI,GAAGyB,SAAO,MAAM,CAAC,EAAE;oBAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,gBAAgB,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC9C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACvB;gBACD,OAAO;aACR;YAED,IAAI,KAAK,GAAGzB,oBAAY,CAAC,sBAAsB,EAAE;gBAC/C,IAAI,QAAQ,KAAK,gBAAgB,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE;oBAClE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;iBACpC;gBACD,OAAO;aACR;YAED,MAAMqB,eAAQ,CAAC,KAAK,CAAC,EAAE,EAAErB,oBAAY,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/C;QAEM,KAAK,CAAC,KAAmB,EAAE,KAAa;YAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACzB,OAAO;iBACR;gBACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC7C,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE;gBAC7B,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC3C;YAED,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,cAAc,GAAG,IAAI,CAAC,cAAwC,CAAC;YACnE,IAAI,CAAC,cAAc,EAAE;gBACnB,IAAI,IAAI,GAAG2B,UAAQ,EAAE;oBACnB,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAA2B,CAAC;iBACrI;qBAAM;oBACL,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAA2B,CAAC;iBACrI;aACF;YACD,IAAI,cAAc,CAAC,IAAI,EAAE;gBACvB,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5B;;YAGD,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACzC,IAAI,IAAI,GAAG,eAAe,EAAE;gBAC1B,cAAc,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;aACvF;YACD,IAAI,IAAI,GAAGD,QAAM,EAAE;gBACjB,gBAAgB,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC9C;YACD,IAAI,IAAI,GAAGC,UAAQ,EAAE;gBACnB,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAChC;SACF;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,SAAS,CAAC,gBAAgB,CAAC,EAAE;gBAC/B,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACnD;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,MAAM,cAAc,GAAG,IAAI,CAAC,cAAwC,CAAC;YACrE,IAAI,cAAc,CAAC,MAAM,EAAE;gBACzB,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC9B;YACD,IAAI,cAAc,CAAC,WAAW,EAAE;gBAC9B,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAClC;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtB;KACF,CAAA;AA5HYC,mBAAO;QADnB,WAAW,EAAE;OACDA,eAAO,CA4HnB;;ICrID,MAAM,KAAK,GAAG,EAAE,CAAC;IAEjB;AACA,aAAgB,kBAAkB,CAAC,KAAY;QAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;QACjC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC9B,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IAC/E,CAAC;IAED;AACA,aAAgB,YAAY,CAA4B,QAAa,EAAE,QAAa,EAAE,KAAmB;QACvG,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;QACjC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC9B,IAAI,EAAE,KAAK,GAAG,KAAK,CAAC,qBAAqB,CAAC,EAAE;YAC1C,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAChD,OAAO;SACR;QACD,IAAI,KAAK,CAAC,QAAQ,KAAK,KAAK,EAAE;YAC5B,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC3B;QACD,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC;YAC3B,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC1B,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SAC3C,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC;IAED,MAAMD,UAAQ,GAAGX,mBAAW,CAAC,QAAQ,CAAC;AAGtC,AAAaa,mCAAuB,GAApC,MAAa,uBAAuB;QAC3B,IAAI,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B,EAAE,KAAK,GAAG,GAAG;YACvF,IAAI,gBAAgB,CAAC;YACrB,IAAI,qBAAqB,CAAC;YAC1B,IAAI,SAAS,CAAC;YAEd,IAAI,OAAO,YAAYD,eAAO,EAAE;gBAC9B,gBAAgB,GAAG,cAAc,CAAC;gBAClC,SAAS,GAAG,YAAY,CAAC;gBACzB,qBAAqB,GAAG,OAAO,CAAC,IAAI,GAAGD,UAAQ,GAAG3B,oBAAY,CAAC,sBAAsB,GAAGA,oBAAY,CAAC,oBAAoB,CAAC;aAC3H;iBAAM;gBACL,gBAAgB,GAAG,YAAY,CAAC;gBAChC,SAAS,GAAG,kBAAkB,CAAC;gBAC/B,qBAAqB,GAAGA,oBAAY,CAAC,oBAAoB,CAAC;aAC3D;;;;YAKD,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;YACpD,OAAO,CAAC,eAAe,CAAC,YAAY,GAAG,gBAAgB,CAAC;;YAGxD,OAAO,CAAC,gBAAgB,CAAC,GAAG,SAAS,CAAC;;YAGtC,OAAO,CAAC,aAAa,GAAG;gBACtB,qBAAqB;gBACrB,KAAK;gBACL,SAAS,EAAE,CAAC;gBACZ,QAAQ,EAAE,KAAK;aAChB,CAAC;SACH;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;;YAE5E,MAAM,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;YAC7D,OAAO,CAAC,eAAe,CAAC,GAAG,OAAO,CAAC,eAAe,CAAC;YACnD,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC;YAC/B,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC9C,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;SAC9B;KACF,CAAA;AA1CY6B,mCAAuB;QADnC,eAAe,CAAC,UAAU,CAAC;OACfA,+BAAuB,CA0CnC;;ICxFD,MAAM,YAAY,GAAG,qDAAqD,CAAC;AAU3E,UAAa,UAAU,GAAGrB,SAAE,CAAC,eAAe,EAAc;SACvD,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;QACrB,QAAQ,CAAC,KAAa;YAC3B,OAAO,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;SACxC;KACF,CAAC,CACH,CAAC;IAEF;;;AAKA,AAAasB,kCAAsB,GAAnC,MAAa,sBAAsB;QACjC,YAAoB,SAAqB;YAArB,cAAS,GAAT,SAAS,CAAY;YACvC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC5B;;;;;QAMM,MAAM,CAAC,eAAuB;YACnC,IAAI,eAAe,KAAK,IAAI,IAAI,eAAe,KAAK,SAAS,EAAE;gBAC7D,OAAO,IAAI,CAAC;aACb;YAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;SACjD;KACF,CAAA;AAhBYA,kCAAsB;QAFlC,cAAc,CAAC,UAAU,CAAC;QAC1BC,aAAM,CAAC,UAAU,CAAC;OACND,8BAAsB,CAgBlC;;ICvBD;AACA,aAAgB,uBAAuB,CAAC,KAA8B;QACpE,OAAO,CAAC,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC;IACrJ,CAAC;IAED;AACA,aAAgB,eAAe,CAAC,KAAY;QAC1C,MAAM,MAAM,GAAG,uBAAuB,CAAC,KAAK,CAAC,CAAC;QAE9C,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;YAC1B,OAAO;SACR;QAED,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;AAOD,AAAaE,+BAAmB,GAAhC,MAAa,mBAAmB;QACvB,IAAI,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YACtE,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBAC/C,MAAMX,eAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACzB;YAED,OAAO,CAAC,mBAAmB,GAAG,OAAO,CAAC,UAAU,CAAC;YACjD,OAAO,CAAC,UAAU,GAAG,eAAe,CAAC;SACtC;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAwB;YACxE,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,mBAAmB,CAAC;YACjD,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACpC;KACF,CAAA;AAdYW,+BAAmB;QAD/B,eAAe,CAAC,MAAM,CAAC;OACXA,2BAAmB,CAc/B;;ACzCYC,iCAAqB,GAAlC,MAAa,qBAAqB;QAChC,YAAoB,QAAmB;YAAnB,aAAQ,GAAR,QAAQ,CAAW;SAAI;QAEpC,IAAI,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA0B;YACxE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;gBACzB,MAAMZ,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;YAED,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1B,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBAC/C,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;aACvB;iBAAM,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;gBAErB,OAAO,CAAC,EAAE,EAAE;oBACV,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;iBAChD;gBAED,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACL,MAAMA,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;SACF;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA0B;YAC1E,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YAEtB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACvB,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;gBAErB,OAAO,CAAC,EAAE,EAAE;oBACV,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;iBACvD;aACF;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;aACnD;SACF;KACF,CAAA;AA1CYY,iCAAqB;QAFjC,eAAe,CAAC,QAAQ,CAAC;QACzBF,aAAM,CAAC,SAAS,CAAC;OACLE,6BAAqB,CA0CjC;;ICrCD;AACA,aAAgB,QAAQ,CAA4B,QAAa;QAC/D,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;QAC/B,IAAI,OAAO,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC;QAEvC,IAAI,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE;YAC1B,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC9B,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;YACvB,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC/B,OAAO;SACR;QAED,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE1B,IAAI,KAAK,CAAC,SAAS,KAAK,IAAI,EAAE;YAC5B,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC;gBACzB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;gBACvB,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;gBACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;aACtC,EAAE,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC;SAC7B;IACH,CAAC;AAGD,AAAaC,mCAAuB,GAApC,MAAa,uBAAuB;QAC3B,IAAI,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B,EAAE,KAAK,GAAG,GAAG;YACvF,IAAI,gBAAwB,CAAC;YAE7B,IAAI,OAAO,YAAYN,eAAO,EAAE;gBAC9B,IAAI,OAAO,CAAC,IAAI,KAAKZ,mBAAW,CAAC,MAAM,EAAE;oBACvC,gBAAgB,GAAG,cAAc,CAAC;iBACnC;qBAAM;oBACL,gBAAgB,GAAG,cAAc,CAAC;iBACnC;aACF;iBAAM;gBACL,gBAAgB,GAAG,YAAY,CAAC;aACjC;;;;YAKD,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;YACpD,OAAO,CAAC,eAAe,CAAC,YAAY,GAAG,gBAAgB,CAAC;;YAGxD,OAAO,CAAC,gBAAgB,CAAC,GAAG,QAAQ,CAAC;;YAGrC,OAAO,CAAC,aAAa,GAAG;gBACtB,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,CAAC;gBACP,SAAS,EAAE,IAAI;aAChB,CAAC;SACH;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAA4B;;YAE5E,IAAI,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;YAC3D,OAAO,CAAC,eAAe,CAAC,GAAG,OAAO,CAAC,eAAe,CAAC;YACnD,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC;YAC/B,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC9C,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;SAC9B;KACF,CAAA;AAvCYkB,mCAAuB;QADnC,eAAe,CAAC,UAAU,CAAC;OACfA,+BAAuB,CAuCnC;;IC1ED;IACA,SAASC,yBAAuB,CAAC,KAAU;QACzC,OAAO,CAAC,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC;IACnJ,CAAC;IAED,SAAS,eAAe;QACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,SAAS,mBAAmB,CAAC,KAAoC;QAC/D,KAAK,CAAC,kBAAkB,GAAG,KAAK,CAAC;QACjC,IAAI,MAAM,GAAGA,yBAAuB,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,gBAAgB,GAAG,EAAE,CAAC;;;;QAI5B,OAAO,MAAM,EAAE;YACb,IAAI,MAAM,CAAC,iBAAiB,EAAE;gBAC5B,MAAM,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACtD,IAAI,QAAQ,EAAE;oBACZ,IAAI,KAAK,CAAC,eAAe,KAAK,eAAe,EAAE;wBAC7C,KAAK,CAAC,uBAAuB,GAAG,KAAK,CAAC,eAAe,CAAC;wBACtD,KAAK,CAAC,eAAe,GAAG,eAAe,CAAC;qBACzC;oBACD,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACjC;aACF;YACD,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC;SAC5B;QAED,KAAK,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAE;YAClF,MAAM,eAAe,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,aAAa,IAAI,eAAe,EAAE;gBACpC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACpC;iBAAM;gBACL,eAAe,CAAC,KAAK,CAAC,CAAC;aACxB;SACF;IACH,CAAC;IAED,SAAS,oBAAoB,CAAC,KAAoC;QAChE,KAAK,CAAC,kBAAkB,GAAG,KAAK,CAAC;QACjC,IAAI,MAAM,GAAGA,yBAAuB,CAAC,KAAK,CAAC,CAAC;QAC5C,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;YAC1C,IAAI,MAAM,CAAC,kBAAkB,EAAE;gBAC7B,MAAM,QAAQ,GAAG,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACvD,IAAI,QAAQ,EAAE;oBACZ,IAAI,KAAK,CAAC,eAAe,KAAK,eAAe,EAAE;wBAC7C,KAAK,CAAC,uBAAuB,GAAG,KAAK,CAAC,eAAe,CAAC;wBACtD,KAAK,CAAC,eAAe,GAAG,eAAe,CAAC;qBACzC;oBACD,IAAI,aAAa,IAAI,QAAQ,EAAE;wBAC7B,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;qBAC7B;yBAAM;wBACL,QAAQ,CAAC,KAAK,CAAC,CAAC;qBACjB;iBACF;aACF;YACD,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC;SAC5B;IACH,CAAC;AAED,UAAa,eAAe;QAG1B,YACU,SAAiB,EACjB,QAA4C,EAC5C,OAAgB;YAFhB,cAAS,GAAT,SAAS,CAAQ;YACjB,aAAQ,GAAR,QAAQ,CAAoC;YAC5C,YAAO,GAAP,OAAO,CAAS;YALlB,UAAK,GAAW,CAAC,CAAC;SAMrB;QAEE,SAAS;YACd,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACpB,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACzE;SACF;QAEM,SAAS;YACd,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;gBACpB,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5E;SACF;KACF;IAED;;;AAGA,UAAa,6BAA6B;QACxC,YACS,KAAsB,EACtB,MAA0D,EAC1D,WAAmB,EAC1B,QAA4C;YAHrC,UAAK,GAAL,KAAK,CAAiB;YACtB,WAAM,GAAN,MAAM,CAAoD;YAC1D,gBAAW,GAAX,WAAW,CAAQ;YAG1B,MAAM,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;SAChC;QAEM,OAAO;YACZ,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;SACtC;KACF;IAED;;;AAGA,UAAa,mBAAmB;QAC9B,YACS,MAAa,EACb,WAAmB,EACnB,QAA4C;YAF5C,WAAM,GAAN,MAAM,CAAO;YACb,gBAAW,GAAX,WAAW,CAAQ;YACnB,aAAQ,GAAR,QAAQ,CAAoC;YAEnD,GAAG,CAAC,gBAAgB,CAAC,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;SACrD;QAEM,OAAO;YACZ,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACvE;KACF;AAOD,IAAA,WAAY,kBAAkB;QAC5B,2DAAQ,CAAA;QACR,qEAAa,CAAA;QACb,mEAAY,CAAA;IACd,CAAC,EAJWC,0BAAkB,KAAlBA,0BAAkB,QAI7B;AAWD,UAAa,eAAe;QAI1B,YAA6B,MAAgB;YAAhB,WAAM,GAAN,MAAM,CAAU;YAC3C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;QAEM,SAAS,CAAC,IAAW,EAAE,kBAAsD;YAClF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,kBAAkB,CAAC;YAElC,MAAM,GAAG,GAAG,GAAG,CAAC,gBAAgB,CAAC;YACjC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC/C,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;aAC1C;SACF;QAEM,OAAO;YACZ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,MAAM,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC;YACxC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,MAAM,MAAM,GAAG,GAAG,CAAC,mBAAmB,CAAC;YAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC/C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;aAC7C;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACnC;KACF;AAUD,UAAa,aAAa,GAAG5B,SAAE,CAAC,eAAe,EAAiB;SAC7D,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IAE/C;AACA,UAAa,YAAY;QAKvB;YAJO,yBAAoB,GAA6C,EAAE,CAAC;YACpE,sBAAiB,GAAoC,EAAE,CAAC;YACxD,qBAAgB,GAAoC,EAAE,CAAC;YAG5D,IAAI,CAAC,4BAA4B,CAAC;gBAChC,OAAO,EAAE,OAAO;gBAChB,UAAU,EAAE;oBACV,KAAK,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;oBAC1B,OAAO,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;oBAC5B,KAAK,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;iBAC3B;aACF,CAAC,CAAC;YACH,IAAI,CAAC,4BAA4B,CAAC;gBAChC,OAAO,EAAE,UAAU;gBACnB,UAAU,EAAE;oBACV,KAAK,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;iBAC3B;aACF,CAAC,CAAC;YACH,IAAI,CAAC,4BAA4B,CAAC;gBAChC,OAAO,EAAE,QAAQ;gBACjB,UAAU,EAAE;oBACV,KAAK,EAAE,CAAC,QAAQ,CAAC;iBAClB;aACF,CAAC,CAAC;YACH,IAAI,CAAC,4BAA4B,CAAC;gBAChC,OAAO,EAAE,kBAAkB;gBAC3B,UAAU,EAAE;oBACV,KAAK,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;iBACrD;aACF,CAAC,CAAC;YACH,IAAI,CAAC,4BAA4B,CAAC;gBAChC,OAAO,EAAE,oBAAoB;gBAC7B,UAAU,EAAE;oBACV,SAAS,EAAE,CAAC,QAAQ,CAAC;oBACrB,UAAU,EAAE,CAAC,QAAQ,CAAC;iBACvB;aACF,CAAC,CAAC;SACJ;QAEM,4BAA4B,CAAC,MAA6B;YAC/D,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACrC,MAAM,MAAM,GAA6B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YAExF,KAAK,MAAM,YAAY,IAAI,UAAU,EAAE;gBACrC,IAAI,UAAU,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;oBAC3C,MAAM,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;iBACjD;aACF;SACF;QAEM,iBAAiB,CAAC,MAAa,EAAE,YAAoB;YAC1D,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YAClC,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC;YAEzC,IAAI,OAAO,EAAE;gBACX,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,EAAE;oBACpD,OAAO,IAAI,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBAC3D;gBACD,IAAI,YAAY,KAAK,aAAa,IAAI,YAAY,KAAK,WAAW,EAAE;oBAClE,OAAO,IAAI,eAAe,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC;iBAC9D;gBACD,IAAI,YAAY,KAAK,WAAW,IAAI,YAAY,KAAK,YAAY,EAAE;oBACjE,OAAO,IAAI,eAAe,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACxE;aACF;YACD,OAAO,IAAI,CAAC;SACb;QAEM,gBAAgB,CACrB,MAA+B,EAC/B,WAAmB,EACnB,kBAAsD,EACtD,QAA4B;YAE5B,IAAI,iBAA8D,CAAC;YACnE,IAAI,gBAA6D,CAAC;YAClE,IAAI,YAA2D,CAAC;YAEhE,IAAI,QAAQ,KAAK4B,0BAAkB,CAAC,QAAQ,EAAE;gBAC5C,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBAC3C,YAAY,GAAG,iBAAiB,CAAC,WAAW,CAAC,KAAK,iBAAiB,CAAC,WAAW,CAAC,GAAG,IAAI,eAAe,CAAC,WAAW,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC;gBAClJ,YAAY,CAAC,SAAS,EAAE,CAAC;gBACzB,MAAM,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,KAAK,MAAM,CAAC,kBAAkB,GAAG,EAAE,CAAC,CAAC;gBACzF,OAAO,IAAI,6BAA6B,CAAC,YAAY,EAAE,kBAAkB,EAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC;aAC7G;YACD,IAAI,QAAQ,KAAKA,0BAAkB,CAAC,SAAS,EAAE;gBAC7C,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBACzC,YAAY,GAAG,gBAAgB,CAAC,WAAW,CAAC,KAAK,gBAAgB,CAAC,WAAW,CAAC,GAAG,IAAI,eAAe,CAAC,WAAW,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC,CAAC;gBAC9I,YAAY,CAAC,SAAS,EAAE,CAAC;gBACzB,MAAM,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,KAAK,MAAM,CAAC,iBAAiB,GAAG,EAAE,CAAC,CAAC;gBACtF,OAAO,IAAI,6BAA6B,CAAC,YAAY,EAAE,iBAAiB,EAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC;aAC5G;YACD,OAAO,IAAI,mBAAmB,CAAC,MAAM,EAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC;SACzE;KACF;;aCpRe,QAAQ,CAAC,MAAyB;QAChD,OAAO,UAAS,MAA+B,EAAE,GAAW;YAC1D,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;YAC3D,QAAQ,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;SACxB,CAAC;IACJ,CAAC;IAED,MAAM,OAAO,GAAG,EAAE,OAAO,KAAK,KAAK,SAAS,CAAC,CAAC;IAC9C,MAAM,wBAAwB,GAAsB,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IAEvF;AACA,aAAgB,sBAAsB,CACpC,eAAiC,EACjC,YAA2B,EAC3B,SAAqB;IACrB;IACA,QAAkE,EAClE,YAAoB,EACpB,UAA8B;QAE9B,IAAI,UAAU,CAAC,YAAY,KAAK,KAAK,EAAE;YACrC,OAAO,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;SAC5D;QAED,IAAI,UAAU,CAAC,GAAG,EAAE;YAClB,MAAM,SAAS,GAAsB,QAAQ,CAAC,WAAW,CAAC,QAAQ;kBAC9D,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,wBAAwB;kBACvE,wBAAwB,CAAC;YAE7B,IAAI,UAAU,CAAC,GAAG,EAAE;gBAClB,IAAI,SAAS,CAAC,QAAQ,EAAE;oBACtB,OAAO,OAAO;0BACV,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,YAAY,CAAC;0BACnD,IAAIC,sBAAc,CAAC,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;iBACnG;gBAED,OAAO,IAAIC,4BAAoB,CAAC,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;aAChF;YAED,OAAO,OAAO;kBACV,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,YAAY,CAAC;kBACnD,IAAID,sBAAc,CAAC,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;SACnG;QAED,MAAMhB,eAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;IACzC,CAAC;IAID;AAEA,AAAaiB,gCAAoB,GAAjC,MAAa,oBAAoB;QAM/B,YAAmB,GAAgB,EAAS,WAAmB,EAAU,UAA8B,EAAU,SAAqB;YAAnH,QAAG,GAAH,GAAG,CAAa;YAAS,gBAAW,GAAX,WAAW,CAAQ;YAAU,eAAU,GAAV,UAAU,CAAoB;YAAU,cAAS,GAAT,SAAS,CAAY;YAJ/H,cAAS,GAAY,KAAK,CAAC;SAIyG;QAEpI,QAAQ;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACnC;QAEM,QAAQ,CAAC,QAAgC;YAC9C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;SACvC;QAEM,YAAY;YACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YAEnC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAEtC,oBAAY,CAAC,oBAAoB,GAAGA,oBAAY,CAAC,gBAAgB,CAAC,CAAC;SAC7G;QAEM,SAAS,CAAC,UAA+B;YAC9C,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAChC;QAEM,WAAW,CAAC,UAA+B;YAChD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACnC;QAEM,eAAe;YACpB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;YACnC,MAAM,IAAI,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE/C,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE;gBACjD,GAAG,EAAE,UAAS,QAAgC;oBAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;oBAEhC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;oBAEnC,IAAI,QAAQ,KAAK,QAAQ,EAAE;wBACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;wBACzB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAEzB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;qBAC9B;iBACF;aACF,CAAC,CAAC;SACJ;KACF,CAAA;AAxDYsC,gCAAoB;QADhC,oBAAoB,CAACrC,oBAAY,CAAC,QAAQ,CAAC;OAC/BqC,4BAAoB,CAwDhC;AAEDA,gCAAoB,CAAC,SAAS,CAAC,OAAO,GAAG7B,eAAQ,CAAC,IAAI,CAAC;IAIvD;IACA;IACA;AAEA,AAAa4B,0BAAc,GAA3B,MAAa,cAAc;QAIzB,YAAoB,SAA4B,EAAS,GAAgB,EAAS,WAAmB,EAAU,UAA8B,EAAU,eAAiC,EAAU,SAAqB;YAAnM,cAAS,GAAT,SAAS,CAAmB;YAAS,QAAG,GAAH,GAAG,CAAa;YAAS,gBAAW,GAAX,WAAW,CAAQ;YAAU,eAAU,GAAV,UAAU,CAAoB;YAAU,oBAAe,GAAf,eAAe,CAAkB;YAAU,cAAS,GAAT,SAAS,CAAY;YACrN,IAAI,CAAC,UAAU,GAAG,IAAI,gBAAgB,CACpC,SAAS,EACT,GAAG,EACH,WAAW,EACX,UAAU,EACV,IAAI,EACJ,eAAe,EACf,SAAS,CACV,CAAC;SACH;QAEM,QAAQ;YACb,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;SAC9B;;QAGM,QAAQ,CAAC,QAAgC,KAAW;QAEpD,YAAY;YACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,8BAA8B,EAAE,CAAC;YAElE,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBACzB,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAErC,oBAAY,CAAC,oBAAoB,CAAC,CAAC;aAC7E;SACF;QAEM,SAAS,CAAC,UAA+B;YAC9C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;SACrC;QAEM,WAAW,CAAC,UAA+B;YAChD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;SACvC;KACF,CAAA;AAzCYqC,0BAAc;QAD1B,oBAAoB,CAACpC,oBAAY,CAAC,QAAQ,CAAC;OAC/BoC,sBAAc,CAyC1B;AAEDA,0BAAc,CAAC,SAAS,CAAC,OAAO,GAAG5B,eAAQ,CAAC,IAAI,CAAC;IAEjD;AACA,UAAa,gBAAgB;QAO3B,YACU,SAA4B,EAC5B,QAAqB,EACrB,YAAoB,EAC5B,UAA8B,EACtB,KAAqB,EAC7B,eAAiC,EACzB,SAAqB;YANrB,cAAS,GAAT,SAAS,CAAmB;YAC5B,aAAQ,GAAR,QAAQ,CAAa;YACrB,iBAAY,GAAZ,YAAY,CAAQ;YAEpB,UAAK,GAAL,KAAK,CAAgB;YAErB,cAAS,GAAT,SAAS,CAAY;YAZxB,iBAAY,GAAY,KAAK,CAAC;YAE7B,iBAAY,GAA2C,EAAE,CAAC;YAC1D,oBAAe,GAAW,CAAC,CAAC;YAWlC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,iBAAiB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC;YAC5E,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC;YAC9B,MAAM,IAAI,GAAG,IAAI,CAAC;YAElB,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,YAAY,EAAE;gBAC7C,GAAG,EAAE;oBACH,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE;wBACjD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;qBAClC;oBAED,OAAO,IAAI,CAAC,KAAK,CAAC;iBACnB;aACF,CAAC,CAAC;SACJ;QAEM,aAAa,CAAC,YAAkD;YACrE,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;gBAC5C,OAAO;aACR;YAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACtC;QAEM,iBAAiB;YACtB,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,EAAE;gBAC5B,OAAO;aACR;YAED,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC;SAC3C;QAEM,8BAA8B,CAAC,iBAA0B,KAAK;YACnE,MAAM,mBAAmB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,cAAc,CAAC;YAErE,IAAI,mBAAmB,EAAE;gBACvB,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;YAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAE9C,IAAI,mBAAmB,EAAE;gBACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aACnD;YAED,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAEM,mBAAmB;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC,EAAE;gBAC9B,IAAI,CAAC,0BAA0B,EAAE,CAAC;aACnC;SACF;QAEM,YAAY;YACjB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChC;QAEO,0BAA0B;YAChC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;SAC9B;KACF;IAED,SAAS,iBAAiB,CAAC,eAAiC,EAAE,UAA4B;QACxF,OAAO;YACL,GAAG,EAAE,UAAS,QAAoB,EAAE,GAAW;gBAC7C,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;gBAE5B,IAAI,GAAG,KAAK,YAAY,IAAI,OAAO,KAAK,KAAK,UAAU,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;oBACnF,OAAO,KAAK,CAAC;iBACd;;gBAGD,IAAI,QAAQ,YAAY,KAAK,EAAE;oBAC7B,UAAU,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAErE,IAAI,GAAG,KAAK,QAAQ,EAAE;wBACpB,UAAU,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC;qBAC1F;iBACF;qBAAM,IAAI,QAAQ,YAAY,GAAG,EAAE;oBAClC,UAAU,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAEnE,IAAI,GAAG,KAAK,MAAM,EAAE;wBAClB,UAAU,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC;qBACxF;iBACF;qBAAM,IAAI,QAAQ,YAAY,GAAG,EAAE;oBAClC,UAAU,CAAC,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAEnE,IAAI,GAAG,KAAK,MAAM,EAAE;wBAClB,OAAO,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC;qBACrE;iBACF;qBAAM;oBACL,UAAU,CAAC,aAAa,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,CAA2B,CAAC,CAAC;iBAChG;gBAED,OAAO,YAAY,CAAC,eAAe,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;aACzD;SACF,CAAC;IACJ,CAAC;IAED,SAAS,YAAY,CAAC,eAAiC,EAAE,UAA4B,EAAE,KAAiB;QACtG,IAAI,EAAE,KAAK,YAAY,MAAM,CAAC,EAAE;YAC9B,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE,iBAAiB,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC;IAC1E,CAAC;;UC7SY,aAAa,GAAGD,SAAE,CAAC,eAAe,EAAiB;SAC7D,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IAE/C;AACA,UAAa,YAAY;QAAzB;YACU,YAAO,GAAyB,EAAE,CAAC;YACnC,eAAU,GAAW,GAAG,CAAC;SAyClC;QAvCQ,cAAc,CAAC,GAAgB,EAAE,YAAoB;YAC1D,OAAO,IAAI+B,0BAAkB,CAAC,IAAI,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;SACxD;QAEM,WAAW,CAAC,QAA4B;YAC7C,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAE7B,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEvB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;SACF;QAEM,cAAc,CAAC,QAA4B;YAChD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9C;QAEM,kBAAkB;YACvB,UAAU,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACjD;QAEM,KAAK;YACV,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YAEvB,OAAO,CAAC,EAAE,EAAE;gBACV,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAE3B,IAAI,OAAO,CAAC,OAAO,EAAE,EAAE;oBACrB,OAAO,CAAC,YAAY,EAAE,CAAC;iBACxB;aACF;YAED,IAAI,OAAO,CAAC,MAAM,EAAE;gBAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;SACF;KACF;IAID;AAEA,AAAaA,8BAAkB,GAA/B,MAAa,kBAAkB;QAG7B,YACU,YAA0B,EAC3B,GAAgB,EAChB,WAAmB;YAFlB,iBAAY,GAAZ,YAAY,CAAc;YAC3B,QAAG,GAAH,GAAG,CAAa;YAChB,gBAAW,GAAX,WAAW,CAAQ;SAEzB;QAEI,OAAO;YACZ,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACrD;QAEM,QAAQ;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACnC;QAEM,QAAQ,CAAC,QAAgC;YAC9C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;SACvC;QAEM,YAAY;YACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEjC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAEvC,oBAAY,CAAC,oBAAoB,GAAGA,oBAAY,CAAC,gBAAgB,CAAC,CAAC;YAE5G,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;QAEM,SAAS,CAAC,UAA+B;YAC9C,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAChC;QAEM,WAAW,CAAC,UAA+B;YAChD,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC/D,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aACxC;SACF;KACF,CAAA;AA5CYuC,8BAAkB;QAD9B,gBAAgB,EAAE;OACNA,0BAAkB,CA4C9B;;ICjGD,MAAM,kBAAkB,GAAG;QACzB,CAAC,QAAQ,GAAG,EAAE;QACd,CAAC,UAAU,GAAG,IAAI;QAClB,CAAC,OAAO,GAAG,SAAS;QACpB,CAAC,MAAM,GAAG,EAAE;QACZ,CAAC,gBAAgB,GAAG,EAAE;QACtB,CAAC,OAAO,GAAG,EAAE;QACb,CAAC,MAAM,GAAG,EAAE;QACZ,CAAC,QAAQ,GAAG,EAAE;QACd,CAAC,OAAO,GAAG,EAAE;QACb,CAAC,OAAO,GAAG,EAAE;QACb,CAAC,QAAQ,GAAG,EAAE;QACd,CAAC,UAAU,GAAG,EAAE;QAChB,CAAC,OAAO,GAAG,IAAI;QACf,CAAC,OAAO,GAAG,IAAI;QACf,CAAC,OAAO,GAAG,EAAE;QACb,CAAC,QAAQ,GAAG,EAAE;QACd,CAAC,QAAQ,GAAG,EAAE;QACd,CAAC,KAAK,GAAG,EAAE;QACX,CAAC,MAAM,GAAG,EAAE;QACZ,CAAC,MAAM,GAAG,EAAE;QACZ,CAAC,KAAK,GAAG,EAAE;QACX,CAAC,MAAM,GAAG,EAAE;KACb,CAAC;IAEF,MAAM,gBAAgB,GAAGvC,oBAAY,CAAC,YAAY,GAAGA,oBAAY,CAAC,sBAAsB,CAAC;AAMzF,AAAawC,kCAAsB,GAAnC,MAAa,sBAAsB;QAQjC,YACS,SAAqB,EACrB,GAAU,EACV,WAAmB,EACnB,OAAyB;;;YAHzB,cAAS,GAAT,SAAS,CAAY;YACrB,QAAG,GAAH,GAAG,CAAO;YACV,gBAAW,GAAX,WAAW,CAAQ;YACnB,YAAO,GAAP,OAAO,CAAkB;;YAMhC,IAAI,WAAW,KAAK,OAAO,EAAE;gBAC3B,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC7B,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC;gBAC3D,IAAI,QAAQ,KAAK,MAAM,EAAE;oBACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;iBAC3C;aACF;iBAAM;gBACL,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;aACxB;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;SACtD;QAEM,QAAQ;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACnC;QAEM,YAAY,CAAC,QAAgC,EAAE,KAAmB;YACvE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;YACtC,IAAI,KAAK,GAAGxC,oBAAY,CAAC,QAAQ,EAAE;gBACjC,OAAO;aACR;YACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC/D;QAEM,WAAW;YAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YACnD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACrD,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBACzB,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;gBAC3D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1B;SACF;QAEM,SAAS,CAAC,UAA+B;YAC9C,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAChC;QAEM,WAAW,CAAC,UAA+B;YAChD,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC/D,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;aACxB;SACF;QAEO,gBAAgB;YACtB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,IAAI,CAAC,QAAQ,KAAK,YAAY,EAAE;gBAClC,IAAI,YAAY,KAAK,EAAE,EAAE;oBACvB,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;oBACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;iBACnC;aACF;SACF;KACF,CAAA;AA1EYwC,kCAAsB;QADlC,cAAc,CAAC,EAAE,CAAC;OACNA,8BAAsB,CA0ElC;AAEDA,kCAAsB,CAAC,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC;AAClDA,kCAAsB,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;IAEhD,MAAM,+BAA+B,GAAGxC,oBAAY,CAAC,gBAAgB,GAAGA,oBAAY,CAAC,oBAAoB,CAAC;AAQ1G,AAAayC,2BAAe,GAA5B,MAAa,eAAe;QAW1B,YACS,SAAqB,EACrB,GAAwE,EACxE,OAAyB,EACzB,eAAiC;YAHjC,cAAS,GAAT,SAAS,CAAY;YACrB,QAAG,GAAH,GAAG,CAAqE;YACxE,YAAO,GAAP,OAAO,CAAkB;YACzB,oBAAe,GAAf,eAAe,CAAkB;SACrC;QAEE,QAAQ;YACb,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QAEM,YAAY,CAAC,QAAgC,EAAE,KAAmB;YACvE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC9G,IAAI,IAAI,CAAC,aAAa,EAAE;oBACtB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;iBACpC;aACF;YACD,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC3D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBACrE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;;QAGM,mBAAmB;YACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,+BAA+B,CAAC,CAAC;SAC9C;;QAGM,YAAY,CAAC,QAAgC,EAAE,aAAqC,EAAE,KAAmB;YAC9G,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACpB;QAEM,kBAAkB;YACvB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;YAChC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;YACzB,MAAM,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;YACxF,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC;YACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAyB,EAAE,CAAyB,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAE1G,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;aAClD;iBAAM,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;aACxB;iBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC/B,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACjF;iBAAM;gBACL,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;aACzB;SACF;QAEM,MAAM,CAAC,KAAmB;YAC/B,IAAI,KAAK,GAAGzC,oBAAY,CAAC,QAAQ,EAAE;gBACjC,OAAO;aACR;YACD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YACnC,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBACzB,OAAO;aACR;YACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC/D;QAEM,WAAW;YAChB,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;YAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;YACzB,MAAM,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;YACxF,IAAI,KAAK,CAAC;YACV,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,cAAc,CAAC;YAErD,IAAI,OAAO,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC/B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACxB,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;oBAC/D,IAAI,OAAO,CAAC,OAAO,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;wBACnC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBAC1B;yBAAM,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;wBAC3C,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;qBACxB;;oBAED,OAAO;iBACR;gBACD,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC;aACzB;iBAAM,IAAI,OAAO,CAAC,OAAO,EAAE;gBAC1B,KAAK,GAAG,YAAY,CAAC;aACtB;iBAAM;gBACL,OAAO;aACR;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;SAC/B;QAEM,SAAS,CAAC,UAA+B;YAC9C,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAChC;QAEM,WAAW,CAAC,UAA+B;YAChD,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC/D,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;aACxB;SACF;QAEM,MAAM;YACX,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACtC;SACF;KACF,CAAA;AArIYyC,2BAAe;QAD3B,cAAc,EAAE;OACJA,uBAAe,CAqI3B;AAEDA,2BAAe,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;AACzCA,2BAAe,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC;IAEjD,MAAM,oBAAoB,GAAG;QAC3B,SAAS,EAAE,IAAI;QACf,OAAO,EAAE,IAAI;QACb,aAAa,EAAE,IAAI;KACpB,CAAC;IAKF,SAAS,cAAc,CAAC,CAAyB,EAAE,CAAyB;QAC1E,OAAO,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;AAQD,AAAaC,+BAAmB,GAAhC,MAAa,mBAAmB;QAW9B,YACS,SAAqB,EACrB,GAA4D,EAC5D,OAAyB,EACzB,eAAiC;YAHjC,cAAS,GAAT,SAAS,CAAY;YACrB,QAAG,GAAH,GAAG,CAAyD;YAC5D,YAAO,GAAP,OAAO,CAAkB;YACzB,oBAAe,GAAf,eAAe,CAAkB;SACrC;QAEE,QAAQ;YACb,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QAEM,YAAY,CAAC,QAAkC,EAAE,KAAmB;YACzE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,OAAO,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;gBAChF,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;aACjF;YACD,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;YACD,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAA6B,QAAQ,CAAC,CAAC;gBACjG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACpB;;QAGM,mBAAmB,CAAC,QAAkB;;;YAG3C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SACnC;;QAGM,YAAY,CAAC,QAAkC,EAAE,aAAuC,EAAE,KAAmB;YAClH,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAChC;QAEM,MAAM,CAAC,KAAmB;YAC/B,IAAI,KAAK,GAAG1C,oBAAY,CAAC,QAAQ,EAAE;gBACjC,OAAO;aACR;YACD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YACnC,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBACzB,OAAO;aACR;YACD,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;SACjD;QAEM,WAAW;;YAEhB,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC7C,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;aAC/B;SACF;QAEM,kBAAkB,CAAC,QAAmB;YAC3C,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YACrB,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,cAAc,CAAC;YAC9C,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;YAC5B,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YAEvB,OAAO,CAAC,EAAE,EAAE;gBACV,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAA2D,CAAC;gBACzF,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBACjF,IAAI,OAAO,EAAE;oBACX,MAAM,CAAC,QAAQ,GAAkB,YAAa,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACtG,SAAS;iBACV;gBACD,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;aACxD;SACF;QAEM,gBAAgB;;;;;;;;;;;;;;;;YAgBrB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YACrB,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;YAC5B,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;YAC3B,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEV,IAAI,GAAG,CAAC,QAAQ,EAAE;;gBAEhB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;;oBAEhC,OAAO,IAAI,CAAC;iBACb;;;gBAGD,IAAI,MAAkC,CAAC;gBACvC,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,cAAc,CAAC;;gBAE9C,MAAM,MAAM,GAAiB,EAAE,CAAC;gBAChC,OAAO,CAAC,GAAG,GAAG,EAAE;oBACd,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,IAAI,MAAM,CAAC,QAAQ,EAAE;wBACnB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC;8BACtC,MAAM,CAAC,KAAK;8BACZ,MAAM,CAAC,KAAK,CACf,CAAC;qBACH;oBACD,EAAE,CAAC,CAAC;iBACL;;gBAED,CAAC,GAAG,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE;oBAC9B,MAAM,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;;oBAE1B,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;wBACjD,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBAC3B;yBAAM;wBACL,EAAE,CAAC,CAAC;qBACL;iBACF;;gBAED,CAAC,GAAG,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE;oBACxB,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;oBAEpB,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;wBACvD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBACtB;oBACD,EAAE,CAAC,CAAC;iBACL;;gBAED,OAAO,KAAK,CAAC;aACd;;;YAGD,IAAI,KAAK,GAA0C,IAAI,CAAC;YACxD,OAAO,CAAC,GAAG,GAAG,EAAE;gBACd,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAA+B,CAAC;gBAC7D,IAAI,MAAM,CAAC,QAAQ,EAAE;oBACnB,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC;0BAClC,MAAM,CAAC,KAAK;0BACZ,MAAM,CAAC,KAAK,CAAC;oBACjB,MAAM;iBACP;gBACD,EAAE,CAAC,CAAC;aACL;;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;;YAElC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;;YAE1B,OAAO,IAAI,CAAC;SACb;QAEM,SAAS,CAAC,UAA+B;YAC9C,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAChC;QAEM,WAAW,CAAC,UAA+B;YAChD,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;gBAC/D,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;aACxB;SACF;QAEM,IAAI;YACT,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,kBAAkB,CACxC,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAChC,oBAAoB,CACrB,CAAC;SACH;QAEM,MAAM;YACX,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;SACF;QAEM,gBAAgB;YACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC7C,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;aAC/B;SACF;KACF,CAAA;AAzNY0C,+BAAmB;QAD/B,cAAc,EAAE;OACJA,2BAAmB,CAyN/B;AAEDA,+BAAmB,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;AAC7CA,+BAAmB,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC;;IChfrD,MAAMpC,OAAK,GAAG,GAAG,CAAC,SAAS,CAAC;AAC5B,UAAa,SAAS,GAAGA,OAAK,CAAC,GAAG,CAAC;AACnC,UAAaqC,aAAW,GAAGrC,OAAK,CAAC,KAAK,CAAC;AACvC,UAAasC,cAAY,GAAGtC,OAAK,CAAC,MAAM,CAAC;IAEzC;IACA;IAEA;IACA,SAAS,UAAU,CAAqB,GAA2B,EAAE,KAA6B;QAChG,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;SACzC;QACD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACjC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,OAAO,KAAK,OAAO,EAAE;YACvB,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;gBAClC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;oBACpB,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;wBACtB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBACpB;oBACD,OAAO,IAAI,CAAC;iBACb;gBACD,CAAC,EAAE,CAAC;aACL;YACD,OAAO,IAAI,CAAC;SACb;QACD,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,EAAEN,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC;IACd,CAAC;IAED;IACA,SAAS6C,cAAY;QACnB,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAOF,aAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,IAAI,GAAG,CAAC,EAAE;YACZ,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE;gBAC/B,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACpB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;iBAC/C;gBACD,CAAC,EAAE,CAAC;aACL;YACDA,aAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;YACpB,CAAC,CAAC,eAAe,CAAC,OAAO,EAAE,SAAS,EAAE3C,oBAAY,CAAC,oBAAoB,CAAC,CAAC;SAC1E;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;IACA,SAAS8C,eAAa,CAAqB,KAA6B;QACtE,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACzB,IAAI,CAAC,KAAK,SAAS,EAAE;YACnB,OAAOF,cAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACvC;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,IAAI,KAAK,CAAC,EAAE;YACd,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC5B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE;YAC/B,IAAI,KAAK,KAAK,KAAK,EAAE;gBACnB,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACpB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;iBAC/C;gBACD,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClC,OAAOA,cAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACvC;YACD,CAAC,EAAE,CAAC;SACL;QACD,CAAC,CAAC,eAAe,CAAC,QAAQ,EAAE,SAAS,EAAE5C,oBAAY,CAAC,oBAAoB,CAAC,CAAC;QAC1E,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,MAAM,OAAO,IAAI,CAAC,UAAU,EAAE6C,cAAY,EAAEC,eAAa,CAAC,EAAE;QAC/D,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;KACvH;AAED,aAAgB,oBAAoB;QAClC,IAAIxC,OAAK,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,GAAG,GAAG,UAAU,CAAC;QAC5D,IAAIA,OAAK,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,KAAK,GAAGuC,cAAY,CAAC;QAClE,IAAIvC,OAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,MAAM,GAAGwC,eAAa,CAAC;IACvE,CAAC;IAED,oBAAoB,EAAE,CAAC;AAEvB,aAAgB,qBAAqB;QACnC,IAAIxC,OAAK,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,GAAG,GAAG,SAAS,CAAC;QAC3D,IAAIA,OAAK,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,KAAK,GAAGqC,aAAW,CAAC;QACjE,IAAIrC,OAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,IAAI;YAAEA,OAAK,CAAC,MAAM,GAAGsC,cAAY,CAAC;IACtE,CAAC;AAKD,AAAaG,uBAAW,GAAxB,MAAa,WAAW;QAMtB,YAAY,SAAqB,EAAE,GAAiB;YAClD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF,CAAA;AAZYA,uBAAW;QADvB,kBAAkB,aAAoB;OAC1BA,mBAAW,CAYvB;aAEe,cAAc,CAAC,SAAqB,EAAE,GAAiB;QACrE,OAAQ,GAAG,CAAC,SAAyB,IAAI,IAAIA,mBAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC3E,CAAC;;UC1HY,YAAY,GAAGvC,SAAE,CAAC,eAAe,EAAgB;SAC3D,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;QAC5B,sBAAsB,CAAC,IAAW,EAAE,aAAqB;YACvD,OAAO,KAAK,CAAC;SACd;KACF,CAAC,CACH;;ICGD,MAAMwC,aAAW,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;AAgB9C,UAAa,gBAAgB,GAAGxC,SAAE,CAAC,eAAe,EAAoB;SACnE,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAACyC,uBAAe,CAAC,CAAC,CAAC;IAElD,SAAS,qBAAqB,CAAC,OAAe,EAAE,IAAY;QAC1D,IAAI,EAAE,GAAG,MAAM,CAAC,wBAAwB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACxD,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAE3C,OAAO,EAAE,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;YACzC,EAAE,GAAG,MAAM,CAAC,wBAAwB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAClD,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SACtC;QAED,OAAO,EAAE,CAAC;IACZ,CAAC;AAID,AAAaA,2BAAe;IAD5B;IACA,MAAa,eAAe;QAG1B,YACU,SAAqB,EACrB,YAA2B,EAC3B,YAA2B,EAC3B,WAAyB;YAHzB,cAAS,GAAT,SAAS,CAAY;YACrB,iBAAY,GAAZ,YAAY,CAAe;YAC3B,iBAAY,GAAZ,YAAY,CAAe;YAC3B,gBAAW,GAAX,WAAW,CAAc;YAN3B,aAAQ,GAAgC,EAAE,CAAC;SAO/C;QAEG,WAAW,CAAC,GAAqD,EAAE,YAAoB;YAC5F,IAAI,GAAG,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC3B,OAAO,GAAG,CAAC,YAAY,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;aAC1D;YACD,IAAI,eAAe,GAAG,GAAG,CAAC,UAAU,CAAC;YACrC,IAAI,QAAQ,CAAC;YAEb,IAAI,eAAe,IAAI,YAAY,IAAI,eAAe,EAAE;gBACtD,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;aACtC;YAED,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;YAE1D,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;gBACxB,IAAI,eAAe,KAAK,SAAS,EAAE;oBACjC,eAAe,GAAG,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,CAAC;iBACxD;gBAED,eAAe,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC;aAC1C;YAED,OAAO,QAAQ,CAAC;SACjB;QAEM,UAAU,CAAC,OAAkC;YAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7B;QAEM,WAAW,CAAC,GAAgB,EAAE,YAAoB;YACvD,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC3B,MAAM,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;;gBAE/B,IAAI,YAAY,KAAK,aAAa,EAAE;oBAClC,OAAO,IAAInC,+BAAuB,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;iBACvE;;gBAGD,IAAI,YAAY,KAAK,OAAO,IAAI,YAAY,KAAK,OAAO,IAAI,YAAY,KAAK,KAAK;uBAC7E,YAAY,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,IAAI,OAAO,KAAK,QAAQ,CAAC;uBACzE,YAAY,KAAK,SAAS,IAAI,OAAO,KAAK,OAAO;uBACjD,YAAY,KAAK,OAAO,IAAI,OAAO,KAAK,OAAO;uBAC/C,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACpC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;iBAC5C;gBAED,IAAI,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC;uBACvC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,GAAG,EAAE,YAAY,CAAC;uBAC1D,OAAO,KAAK,KAAK,IAAI,YAAY,KAAK,KAAK;uBAC3C,OAAO,KAAK,GAAG,IAAI,YAAY,KAAK,MAAM,EAC7C;oBACA,OAAO,IAAIH,6BAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;iBACrE;gBACD,OAAO,IAAIG,+BAAuB,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;aACvE;YAED,OAAO,IAAI,gBAAgB,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;SAChD;QAEM,gBAAgB,CAAC,KAAqB;YAC3C,OAAO,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SAChD;QAEM,cAAc,CAAC,GAAiB;YACrC,OAAO,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;SAC5C;;QAGM,cAAc,CAAC,GAAiB;YACrC,OAAO,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;SAC5C;QAEO,0BAA0B,CAAC,GAAgB;YACjD,OAAO,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;SAC1D;QAEO,qBAAqB,CAAC,GAAgB;YAC5C,MAAM,KAAK,GAA2C,EAAE,CAAC;YACzD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,EAAE,YAAY,EAAE;gBAC7C,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,KAAK;gBACnB,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,KAAK;aACb,CAAC,EAAE;gBACFO,eAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;aACxB;YACD,OAAO,KAAK,CAAC;SACd;QAEO,kBAAkB,CAAC,GAAgB,EAAE,YAAoB,EAAE,UAA8B;YAC/F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBACtD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;gBACpE,IAAI,QAAQ,EAAE;oBACZ,OAAO,QAAQ,CAAC;iBACjB;aACF;YACD,OAAO,IAAI,CAAC;SACb;QAEO,sBAAsB,CAAC,GAAgB,EAAE,YAAoB;YACnE,IAAI,EAAE,GAAG,YAAY,MAAM,CAAC,EAAE;gBAC5B,OAAO,IAAI,iBAAiB,CAAC,GAAG,EAAE,YAAY,CAA2B,CAAC;aAC3E;YAED,IAAI,MAAe,CAAC;YACpB,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC3B,IAAI,YAAY,KAAK,OAAO,EAAE;oBAC5B,OAAO,IAAIR,8BAAsB,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;iBACxD;gBAED,IAAI,YAAY,KAAK,OAAO,IAAI,YAAY,KAAK,KAAK,EAAE;oBACtD,OAAO,IAAID,8BAAsB,CAAC,IAAI,CAAC,SAAS,EAAe,GAAG,CAAC,CAAC;iBACrE;gBAED,MAAM,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;gBACvE,IAAI,YAAY,KAAK,OAAO,IAAI,OAAO,KAAK,QAAQ,EAAE;oBACpD,OAAO,IAAI8B,2BAAmB,CAAC,IAAI,CAAC,SAAS,EAAqB,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;iBACvF;gBAED,IAAI,YAAY,KAAK,SAAS,IAAI,OAAO,KAAK,OAAO,EAAE;oBACrD,OAAO,IAAID,uBAAe,CAAC,IAAI,CAAC,SAAS,EAAoB,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;iBAClF;gBAED,IAAI,OAAO,EAAE;oBACX,OAAO,IAAID,8BAAsB,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;iBAC/E;gBAED,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACtD,IAAI,WAAW,EAAE;oBACf,OAAO,IAAI9B,8BAAsB,CAAC,IAAI,CAAC,SAAS,EAAW,GAAG,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC/F;gBAED,IAAI,YAAY,KAAK,MAAM;uBACtB,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC;uBACxC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE;oBAC/D,OAAO,IAAIC,6BAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;iBACrE;gBACD,MAAM,GAAG,IAAI,CAAC;aACf;YAED,MAAM,GAAG,GAAGqC,aAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,QAAQ,GAAG;gBACT,KAAK,gBAAgB;oBACnB,IAAI,YAAY,KAAK,QAAQ,EAAE;wBAC7B,OAAO,IAAI,CAAC,gBAAgB,CAAiB,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAC;qBACvE;oBACD,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;gBAC7D,KAAK,cAAc;oBACjB,IAAI,YAAY,KAAK,MAAM,EAAE;wBAC3B,OAAO,IAAI,CAAC,cAAc,CAAe,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAC;qBACnE;oBACD,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;gBAC7D,KAAK,cAAc;oBACjB,IAAI,YAAY,KAAK,MAAM,EAAE;wBAC3B,OAAO,IAAI,CAAC,cAAc,CAAe,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAC;qBACnE;oBACD,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;aAC9D;YAED,MAAM,UAAU,GAAG,qBAAqB,CAAC,GAAG,EAAE,YAAY,CAGzD,CAAC;YAEF,IAAI,UAAU,EAAE;gBACd,IAAI,UAAU,CAAC,GAAG,IAAI,UAAU,CAAC,GAAG,EAAE;oBACpC,IAAI,UAAU,CAAC,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE;wBAChD,OAAO,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;qBACxC;;oBAGD,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;oBAC/E,IAAI,eAAe,EAAE;wBACnB,OAAO,eAAe,CAAC;qBACxB;oBACD,IAAI,MAAM,EAAE;;wBAEV,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;qBAC5D;oBAED,OAAO,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;iBACvG;aACF;YACD,OAAO,IAAI1B,sBAAc,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;SAC9C;KACF,CAAA;AApMY2B,2BAAe;QAF3BlB,aAAM,CAAC,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,CAAC;;OAElDkB,uBAAe,CAoM3B;aAEe,qBAAqB,CAAC,SAAqB,EAAE,UAAwD;QACnH,QAAQD,aAAW,CAAC,IAAI,CAAC,UAAU,CAAC;YAClC,KAAK,gBAAgB;gBACnB,OAAO,gBAAgB,CAAC,SAAS,EAAkB,UAAU,CAAC,CAAC;YACjE,KAAK,cAAc;gBACjB,OAAO,cAAc,CAAC,SAAS,EAAgB,UAAU,CAAC,CAAC;YAC7D,KAAK,cAAc;gBACjB,OAAO,cAAc,CAAC,SAAS,EAAgB,UAAU,CAAC,CAAC;SAC9D;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;AC7OYE,wCAA4B,GAAzC,MAAa,4BAA4B;QACvC,YAAoB,eAAiC;YAAjC,oBAAe,GAAf,eAAe,CAAkB;SAAI;QAElD,IAAI,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAiC,EAAE,GAAG,MAAgB;YACpG,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,MAAM7B,eAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACzB;YAED,IAAI,OAAO,CAAC,IAAI,KAAKL,mBAAW,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,KAAKA,mBAAW,CAAC,QAAQ,EAAE;gBAChF,MAAMK,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;;YAGD,MAAM,cAAc,GAA8B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;YAC3H,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAC3B,MAAMA,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;YAED,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;;YAGxC,cAAc,CAAC,eAAe,GAAG,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC;;YAGhE,cAAc,CAAC,OAAO,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC;SACtD;QAEM,MAAM,CAAC,KAAmB,EAAE,KAAa,EAAE,OAAiC;;YAEjF,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACzC,OAAO,CAAC,cAAc,CAAC,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC;YACxE,OAAO,CAAC,cAAc,CAAC,eAAe,GAAG,IAAI,CAAC;SAC/C;KACF,CAAA;AAjCY6B,wCAA4B;QAFxC,eAAe,CAAC,eAAe,CAAC;QAChCnB,aAAM,CAAC,gBAAgB,CAAC;OACZmB,oCAA4B,CAiCxC;;UC3CY,IAAI;QAMf,YACS,gBAAmC,EAC1C,MAAa,EACb,cAAsB,EACtB,eAAiC,EAC1B,OAAwB;YAJxB,qBAAgB,GAAhB,gBAAgB,CAAmB;YAInC,YAAO,GAAP,OAAO,CAAiB;YAV1B,aAAQ,GAAY,KAAK,CAAC;YAW/B,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,WAAW,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;SAC3E;QAEM,UAAU,CAAC,IAAgB;YAChC,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;YACpD,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YACrC,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAClD,oBAAY,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAEpG,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;gBACvB,OAAO,eAAe,CAAC,IAAI,CAAC,CAAC;aAC9B;YAED,OAAO,MAAM,CAAC;SACf;QAEM,KAAK,CAAC,KAAmB,EAAE,KAAa;YAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACzB,OAAO;iBACR;gBAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE;gBAC7B,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC3C;YAED,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;SACtE;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,SAAS,CAAC,gBAAgB,CAAC,EAAE;gBAC/B,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACnD;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3C;;QAEM,eAAe,CAAC,GAAc,EAAE,YAAuB,KAAW;QAClE,YAAY,CAAC,QAAa,EAAE,aAAkB,EAAE,KAAmB,KAAW;KAEtF;;UCjEY,iBAAiB,GAAGQ,SAAE,CAAC,eAAe,EAAqB;SACrE,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAEnD;AACA,UAAa,gBAAgB;QAI3B;YACE,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACxC;QAKM,KAAK,CAAC,UAAkB,EAAE,WAAwB;YACvD,QAAQ,WAAW;gBACjB;oBACA;wBACE,IAAI,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;wBACjD,IAAI,KAAK,KAAK,SAAS,EAAE;4BACvB,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;yBACxF;wBACD,OAAO,KAAK,CAAC;qBACd;gBACD;oBACA;wBACE,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;wBACzC,IAAI,KAAK,KAAK,SAAS,EAAE;4BACvB,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;yBAChF;wBACD,OAAO,KAAK,CAAC;qBACd;gBACD;oBACA;;;wBAGE,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,KAAK,WAAW,IAAI,wEAAiF,CAAC,EAAE;4BACjI,OAAO,gBAAgB,CAAC,MAAM,CAAC;yBAChC;wBACD,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;wBAC9C,IAAI,KAAK,KAAK,SAAS,EAAE;4BACvB,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;yBACrF;wBACD,OAAO,KAAK,CAAC;qBACd;aACF;SACF;QAEM,KAAK,CAAC,WAA+E;YAC1F,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAC;YACpE,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;gBACpC,MAAM,IAAI,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;gBACrC,QAAQ,IAAI,CAAC,KAAK;oBAChB;wBACE,mBAAmB,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;wBACvC,MAAM;oBACR;wBACE,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;wBAC/B,MAAM;oBACR;wBACE,gBAAgB,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;iBACvC;aACF;SACF;QAKO,SAAS,CAAC,UAAkB,EAAE,WAAwB;YAC5D,IAAI;gBACF,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpC,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,OAA2D,CAAC;gBAEhE,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBAC5B,OAAO,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAEC,eAAQ,CAAC,UAAU,CAAC,CAAC;iBAC3E;qBAAM;oBACL,OAAO,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrC;gBAED,IAAI,KAAK,GAAG,CAAC,CAAC;gBAEd,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;oBAC3B,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;oBAEjC,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBAC9B,OAAO,GAAG,IAAI,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAEA,eAAQ,CAAC,UAAU,CAAC,CAAC;qBACvF;yBAAM;wBACL,OAAO,GAAG,IAAI,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;qBACnD;oBAED,KAAK,EAAE,CAAC;iBACT;gBAED,OAAO,OAAO,CAAC;aAChB;YAAC,OAAO,CAAC,EAAE;gBACV,MAAMY,eAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;SACF;KACF;;UCvGY,QAAQ;QAMnB,YACS,WAAmB,EACnB,kBAAsC,EACtC,gBAAmC,EACnC,MAAa,EACb,cAAuB,EACtB,YAA2B,EAC5B,OAAwB;YANxB,gBAAW,GAAX,WAAW,CAAQ;YACnB,uBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,qBAAgB,GAAhB,gBAAgB,CAAmB;YACnC,WAAM,GAAN,MAAM,CAAO;YACb,mBAAc,GAAd,cAAc,CAAS;YACtB,iBAAY,GAAZ,YAAY,CAAe;YAC5B,YAAO,GAAP,OAAO,CAAiB;YAZ1B,aAAQ,GAAY,KAAK,CAAC;SAa5B;QAEE,UAAU,CAAC,KAAY;YAC5B,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;YACpD,eAAe,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;YAElC,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAACrB,oBAAY,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAEpG,OAAO,eAAe,CAAC,QAAQ,CAAC,CAAC;YAEjC,IAAI,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE;gBAC1C,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;YAED,OAAO,MAAM,CAAC;SACf;QAEM,WAAW,CAAC,KAAY;YAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB;QAEM,KAAK,CAAC,KAAmB,EAAE,KAAa;YAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACzB,OAAO;iBACR;gBAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE;gBAC7B,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC3C;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAC/C,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,WAAW,EAChB,IAAI,EACJ,IAAI,CAAC,kBAAkB,CACxB,CAAC;SACH;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,SAAS,CAAC,gBAAgB,CAAC,EAAE;gBAC/B,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACnD;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;;QAEM,eAAe,CAAC,GAAc,EAAE,YAAuB,KAAW;QAClE,YAAY,CAAC,QAAa,EAAE,aAAkB,EAAE,KAAmB,KAAW;KAEtF;;UClFY,GAAG;QAId,YACS,gBAAmC,EACnC,MAAsB,EACtB,OAAwB;YAFxB,qBAAgB,GAAhB,gBAAgB,CAAmB;YACnC,WAAM,GAAN,MAAM,CAAgB;YACtB,YAAO,GAAP,OAAO,CAAiB;YAN1B,aAAQ,GAAY,KAAK,CAAC;SAOhC;QAEM,KAAK,CAAC,KAAmB,EAAE,KAAa;YAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACzB,OAAO;iBACR;gBAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE;gBAC7B,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC3C;YAED,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7E;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;gBACpF,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACtE;YAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,SAAS,CAAC,gBAAgB,CAAC,EAAE;gBAC/B,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACnD;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;;QAEM,eAAe,CAAC,GAAc,EAAE,YAAuB,KAAW;QAClE,YAAY,CAAC,QAAa,EAAE,aAAkB,EAAE,KAAmB,KAAW;KAEtF;;IChDD;;;;AAIA,aAAgB,QAAQ,CAAC,cAAwC,EAAE,GAAI,EAAE,UAAW;QAClF,IAAI,IAAI,GAAG,UAAS,MAAM,EAAE,IAAI,EAAE,WAAW;YAC3C,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;YAE5B,IAAI,SAAS,GAAyC,MAAM,CAAC,SAAS,KAAK,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;YAClG,IAAI,MAAM,GAAyB,cAAc,IAAI,EAAE,CAAC;YAExD,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;gBACrB,MAAM,CAAC,SAAS,GAAGS,eAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7C;YAED,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACpB,MAAM,CAAC,QAAQ,GAAG,GAAG,IAAI,SAAS,CAAC;aACpC;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBAChB,MAAM,CAAC,IAAI,GAAGO,mBAAW,CAAC,MAAM,CAAC;aAClC;YAED,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,SAAS,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;SAC1B,CAAC;QAEF,IAAI,GAAG,EAAE;YACP,IAAI,MAAM,GAAG,cAAc,CAAC;YAC5B,cAAc,GAAG,IAAI,CAAC;YACtB,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;SACtC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;;IC9CD;AACA,IA2BA,MAAM,qBAAqB,GAAG,cAAc,CAAC;AAyB7C,UAAa,oBAAoB,GAAGR,SAAE,CAAC,eAAe,EAAwB,CAAC;AAsB/E,aAAgB,qBAAqB,CAAC,KAAU;QAC9C,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,OAAO,OAAO,IAAI,KAAK,QAAQ,IAAI,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAChF,CAAC;;aC9De,aAAa,CAAC,SAAiC,EAAE,KAAW,EAAE,QAA+B;QAC3G,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,OAAO,mBAAmB,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SACxD;aAAM;YACL,OAAO,oBAAoB,CAAC,SAA+B,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;SAC/E;IACH,CAAC;AAED,UAAa,mBAAmB;QAG9B,YACmB,IAAW,EACX,YAAqC,EACrC,YAAgC;YAFhC,SAAI,GAAJ,IAAI,CAAO;YACX,iBAAY,GAAZ,YAAY,CAAyB;YACrC,iBAAY,GAAZ,YAAY,CAAoB;SAC/C;QAEJ,IAAW,UAAU;YACnB,OAAO,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,cAAc,GAAG;gBACnD,IAAI,EAAE,SAAS;gBACf,cAAc,EAAE,IAAI,CAAC,IAAI;gBACzB,KAAK,EAAE,CAAC;gBACR,KAAK,EAAE,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG;oBACrC,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,SAAS;iBACpB,GAAG;oBACF,QAAQ,EAAE,KAAK;iBAChB;gBACD,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,SAAS,EAAE,EAAE;gBACb,aAAa,EAAE,KAAK;gBACpB,QAAQ,EAAE,KAAK;gBACf,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAEC,eAAQ,CAAC,UAAU;aAChC,CAAC,CAAC;SACJ;QAEM,kBAAkB,CAAC,MAAwB,EAAE,IAAyB;YAC3E,OAAO,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SACzD;QAEM,UAAU,CAAC,MAAwB,EAAE,aAA8B;YACxE,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;SAC5D;QAEM,cAAc,CAAC,MAAwB,EAAE,aAA8B;YAC5E,OAAO,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;SAC9D;;QAGM,SAAS,CAAC,MAAa,EAAE,YAAqC,EAAE,YAAmB;YACxF,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YACxC,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;SACzC;KACF;IAED,SAAS,mBAAmB,CAAC,OAAe,EAAE,KAAW,EAAE,QAA+B;QACxF,MAAM,YAAY,GAA0B,EAAE,CAAC;QAC/C,MAAM,eAAe,GAAG,EAAE,CAAC;QAC3B,MAAM,YAAY,GAAG,EAAE,CAAC;QACxB,MAAM,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,eAAe,GAAG,KAAK,CAAC;QAE5B,IAAI,KAAK,EAAE;YACT,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;iBACf,OAAO,CAAC,IAAI;gBACX,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;gBAE1B,IAAI,qBAAqB,CAAC,KAAK,CAAC,EAAE;oBAChC,eAAe,GAAG,IAAI,CAAC;oBACvB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1B;qBAAM;oBACL,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;iBACxC;aACF,CAAC,CAAC;SACN;QAED,IAAI,eAAe,EAAE;YACnB,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YACzC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpC;QAED,IAAI,QAAQ,EAAE;YACZ,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;SAC/D;QAED,OAAO,IAAI,mBAAmB,CAAC,OAAO,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;IAED,SAAS,oBAAoB,CAAC,IAAwB,EAAE,KAAW,EAAE,QAA+B;QAClG,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QACtC,MAAM,YAAY,GAA0B,EAAE,CAAC;QAC/C,MAAM,eAAe,GAAG,CAAC,YAAY,CAAC,CAAC;QACvC,MAAM,YAAY,GAAG,EAAE,CAAC;QACxB,MAAM,iBAAiB,GAAG,EAAE,CAAC;QAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;QAC7C,MAAM,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAE3C,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAChC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,YAAY,CAAC,IAAI,CAAC;YAChB,IAAI;YACJ,GAAG,EAAE,OAAO;YACZ,YAAY,EAAE,iBAAiB;SAChC,CAAC,CAAC;QAEH,IAAI,KAAK,EAAE;YACT,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;iBACf,OAAO,CAAC,IAAI;gBACX,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;gBAE1B,IAAI,qBAAqB,CAAC,KAAK,CAAC,EAAE;oBAChC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC/B;qBAAM;oBACL,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;oBAEjC,IAAI,QAAQ,EAAE;wBACZ,iBAAiB,CAAC,IAAI,CAAC;4BACrB,IAAI;4BACJ,IAAI;4BACJ,KAAK;yBACN,CAAC,CAAC;qBACJ;yBAAM;wBACL,iBAAiB,CAAC,IAAI,CAAC;4BACrB,IAAI;4BACJ,IAAI;4BACJ,KAAK;yBACN,CAAC,CAAC;qBACJ;iBACF;aACF,CAAC,CAAC;SACN;QAED,IAAI,QAAQ,EAAE;YACZ,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;SAC/D;QAED,OAAO,IAAI,mBAAmB,CAAC,OAAO,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;IAED,SAAS,WAAW,CAAC,MAAa,EAAE,QAA8B,EAAE,eAAwC,EAAE,YAAmB;QAC/H,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YACjD,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAE5B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC/B,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;aAClD;iBAAM,IAAI,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;gBACtC,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aAClC;iBAAM;gBACL,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;aAC1D;SACF;IACH,CAAC;;ICnID;;;IAGA;AACA,aAAgB,aAAa,CAAC,YAAsC;QAClE,OAAO,UAAkC,MAAS;YAChD,OAAO,qBAAqB,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC3D,CAAC;IACJ,CAAC;IAED,MAAM,oBAAoB,GAAG;QAC3B,IAAI,EAAE,MAA2B;KAClC,CAAC;IAEF;;;;IAIA;AACA,aAAgB,YAAY,CAAC,eAAqB;QAChD,MAAM,OAAO,GAAG,OAAO,eAAe,KAAK,UAAU,IAAI,CAAC,eAAe;cACrE,oBAAoB;cACpB,eAAe,CAAC;QAEpB,MAAM,IAAI,GAAG,UAAkC,MAAS;YACrD,MAAgD,CAAC,aAAa,GAAG,OAAO,CAAC;YAC1E,OAAO,MAAM,CAAC;SACf,CAAC;QAEF,OAAO,OAAO,eAAe,KAAK,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;IAC9E,CAAC;IAED;;;;IAIA;AACA,aAAgB,aAAa,CAAC,WAAiB;QAC7C,MAAM,IAAI,GAAG,UAAkC,MAAS;YACrD,MAAgD,CAAC,aAAa,GAAG,IAAI,CAAC;YACvE,OAAO,MAAM,CAAC;SACf,CAAC;QAEF,OAAO,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAChD,CAAC;AAMD,UAAa,qBAAqB,GAA2B;QAC3D,IAAI,EAAE,gBAAgB;QAEtB,OAAO,CAAC,IAAY;YAClB,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;SAC/B;QAED,MAAM,CAAwD,IAAO;YACnE,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;SAC3B;QAED,WAAW,CAAC,IAAwB;YAClC,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC;SACpC;QAED,MAAM,CAA0B,YAAsC,EAAE,OAAU,IAAI;YACpF,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,MAAM,eAAe;aAAoB,GAAG,IAAI,CAA2B,CAAC;YAC1G,MAAM,WAAW,GAAG,8BAA8B,CAAC,OAAO,YAAY,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC;YACnI,MAAM,KAAK,GAAmB,IAAI,CAAC,SAAS,CAAC;YAE5C,IAAqC,CAAC,IAAI,GAAG,qBAAqB,CAAC;YACnE,IAAqC,CAAC,WAAW,GAAG,WAAW,CAAC;YACjE,IAAI,CAAC,QAAQ,GAAGe,UAAQ,CAAC;YAEzB,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;YACzB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;YACnB,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACvB,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACvB,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACvB,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAA+B,CAAC,SAAS,GAAG,QAAQ,CAAC;YACrD,KAA+B,CAAC,YAAY,GAAG,WAAW,CAAC;YAE5D,OAAO,IAAI,CAAC;SACb;KACF,CAAC;IAEF,SAASA,UAAQ,CAA2B,SAAqB;QAC/D,SAAS,CAAC,QAAQ,CAChBzB,mBAAY,CAAC,SAAS,CACpB,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EACpD,IAAI,CACL,CACF,CAAC;IACJ,CAAC;IAED,SAAS,OAAO,CAA6C,eAAiC,EAAE,IAAW,EAAE,UAAoCU,eAAQ,CAAC,WAAW;QACnK,MAAM,IAAI,GAAG,IAAI,CAAC,WAAiC,CAAC;QACpD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAErC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QAE9D,eAAe,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEjD,IAAI,QAAmB,CAAC;QAExB,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;YAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;YAEhD,IAAI,oBAAoB,IAAI,MAAM,EAAE;gBAClC,QAAQ,GAAG,MAAM,CAAC,kBAAkB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;aAC7D;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;SACF;aAAM;YACL,QAAQ,GAAG,eAAe,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SAClE;QAED,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC;YACvC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;SAC7D;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAED,SAAS,IAAI,CAA6C,KAAmB;QAC3E,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAEhC,IAAI,QAAQ,CAAC,UAAU,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAGT,oBAAY,CAAC,QAAQ,CAAC,CAAC;SAC7C;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YAClD,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAGA,oBAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,QAAQ,CAAC,QAAQ,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAGA,oBAAY,CAAC,QAAQ,CAAC,CAAC;SAC3C;IACH,CAAC;IAED,SAAS,MAAM,CAA6C,KAAmB;QAC7E,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;YAEhC,IAAI,QAAQ,CAAC,YAAY,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAGA,oBAAY,CAAC,UAAU,CAAC,CAAC;aACjD;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YAClC,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;YAEzB,OAAO,CAAC,EAAE,EAAE;gBACV,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,GAAGA,oBAAY,CAAC,UAAU,CAAC,CAAC;aACvD;YAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,IAAI,QAAQ,CAAC,UAAU,EAAE;gBACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAGA,oBAAY,CAAC,UAAU,CAAC,CAAC;aAC/C;SACF;IACH,CAAC;IAED,SAAS,MAAM,CAA6C,mBAA0B,EAAE,SAA2B;QACjH,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO;SACR;QAED,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,0BAA0B,CAAC,mBAAmB,CAAC,CAAC;QAEtF,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;YAC/B,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;SAChD;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YACpD,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;SACxD;QAED,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC9B,SAAS,CAAC,qBAAqB,CAAwB,IAAI,CAAC,CAAC;SAC9D;IACH,CAAC;IAED,SAAS,MAAM,CAA6C,SAA2B;QACrF,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;gBAC/B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;aAC3B;YAED,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAEjC,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;YACtC,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC;YAE3B,OAAO,CAAC,EAAE,EAAE;gBACV,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aACnC;YAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;gBAC9B,SAAS,CAAC,qBAAqB,CAAwB,IAAI,CAAC,CAAC;aAC9D;SACF;IACH,CAAC;IAED,SAAS,KAAK;QACZ,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC;QAE3B,OAAO,CAAC,EAAE,EAAE;YACV,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;SACzB;IACH,CAAC;IAED,SAAS,QAAQ;QACf,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,SAAS,WAAW;QAClB,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;IACrC,CAAC;IAED;AACA,aAAgB,8BAA8B,CAAC,cAA+B,EAAE,IAAwB;QACtG,OAAO;YACL,IAAI,EAAE,cAAc,CAAC,IAAI,IAAI,SAAS;YACtC,cAAc,EAAE,cAAc,CAAC,cAAc,IAAI,IAAI;YACrD,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,cAAc,CAAC,KAAK,IAAI;gBAC7B,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,SAAS;aACpB;YACD,SAAS,oBAAM,IAAI,CAAC,SAAS,EAAK,cAAc,CAAC,SAAS,CAAC;YAC3D,YAAY,EAAE,cAAc,CAAC,YAAY,GAAGS,eAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,GAAGA,eAAQ,CAAC,UAAU;YAC/G,YAAY,EAAE,cAAc,CAAC,YAAY,GAAGA,eAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,GAAGA,eAAQ,CAAC,UAAU;YAC/G,UAAU,EAAE,cAAc,CAAC,UAAU,GAAGA,eAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,GAAGA,eAAQ,CAAC,UAAU;YACzG,aAAa,EAAE,cAAc,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,IAAI,KAAK;YAC1E,aAAa,EAAE,cAAc,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI;YACzE,QAAQ,EAAE,cAAc,CAAC,QAAQ,IAAI,KAAK;SAC3C,CAAC;IACJ,CAAC;IAeD,SAAS,kBAAkB,CACzB,cAA8B,EAC9B,IAAwB,EACxB,UAA8B;QAE9B,IAAI,UAAU,CAAC,aAAa,IAAI,UAAU,CAAC,QAAQ,EAAE;YACnD,IAAI,UAAU,CAAC,aAAa,EAAE;gBAC5B,MAAMY,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;YAED,OAAO,IAAI,kBAAkB,CAAC,cAAc,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SACjE;QAED,IAAI,UAAU,CAAC,aAAa,EAAE;YAC5B,OAAO,IAAI,sBAAsB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;SACzD;QAED,OAAO,IAAI,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,MAAM8B,sBAAoB,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;AAEjD,UAAa,kBAAkB;QAG7B,YACE,cAA8B,EACvB,IAAwB,EAC/B,UAA8B;YADvB,SAAI,GAAJ,IAAI,CAAoB;YAG/B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,CAAC,aAAa,IAAI,oBAAoB,CAAC,CAAC;YAC3F,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,cAAc,CAAC;SACjD;QAED,IAAI,QAAQ;YACV,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;SAC7B;QAEM,yBAAyB,CAAC,QAAoB;YACnD,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAEA,sBAAoB,CAAC,CAAC;SACnE;QAEM,0BAA0B,CAAC,yBAAgC;YAChE,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;QAEM,OAAO,CAAC,KAAoB;YACjC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG1C,eAAQ,CAAC,IAAI,CAAC;SAC9B;QAEM,gBAAgB;;;;SAItB;KACF;AAED,UAAa,sBAAsB;QAKjC,YAAoB,cAA8B,EAAE,IAAwB;YAAxD,mBAAc,GAAd,cAAc,CAAgB;YAF1C,kBAAa,GAAY,IAAI,CAAC;YAGpC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBAC1B,IAAI,CAAC,UAAU,GAAGA,eAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACrD;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAGA,eAAQ,CAAC,UAAU,CAAC;aACvC;YAED,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;SAC3C;QAED,IAAI,QAAQ;YACV,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;QAEM,yBAAyB,CAAC,QAAoB;;SAEpD;QAEM,0BAA0B,CAAC,yBAAgC;YAChE,IAAI,CAAC,yBAAyB,EAAE;gBAC9B,MAAMY,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;YAED,OAAO,yBAAyB,CAAC;SAClC;QAEM,OAAO,CAAC,KAAoB;YACjC,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;SACF;QAEM,gBAAgB;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;SACrC;KACF;AAED,UAAa,aAAa;QACxB,YAAY,cAA8B,EAAS,IAAwB;YAAxB,SAAI,GAAJ,IAAI,CAAoB;YACzE,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;SACtC;QAED,IAAI,QAAQ;YACV,OAAOZ,eAAQ,CAAC,UAAU,CAAC;SAC5B;QAEM,yBAAyB,CAAC,QAAoB;;SAEpD;QAEM,0BAA0B,CAAC,yBAAgC;YAChE,OAAO,yBAAyB,IAAI,IAAI,CAAC,IAAI,CAAC;SAC/C;QAEM,OAAO,CAAC,KAAoB;YACjC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAGA,eAAQ,CAAC,IAAI,CAAC;SAC9B;QAEM,gBAAgB;;;SAGtB;KACF;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,oEAAoE;;IC/dpE;;AAEA,UAOa,WAAW,GAAGD,SAAE,CAAC,eAAe,EAAe,CAAC,SAAS,EAAE;;ICAxE;IAEA,MAAM,UAAEkB,QAAM,WAAED,SAAO,EAAE,GAAGT,mBAAW,CAAC;AAExC,UAAa,yBAAyB;QAMpC,YACS,eAAiC,EACjC,aAA4B,EAC5B,MAAsB,EACtB,cAAsB,EACtB,IAAiB,EACjB,OAAwB;YALxB,oBAAe,GAAf,eAAe,CAAkB;YACjC,kBAAa,GAAb,aAAa,CAAe;YAC5B,WAAM,GAAN,MAAM,CAAgB;YACtB,mBAAc,GAAd,cAAc,CAAQ;YACtB,SAAI,GAAJ,IAAI,CAAa;YACjB,YAAO,GAAP,OAAO,CAAiB;YAX1B,aAAQ,GAAY,KAAK,CAAC;YAC1B,WAAM,GAAW,IAAI,CAAC;;;;;YAgB3B,MAAM,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC;YAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,aAAa,EAAE,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;aACrI;SACF;QAEM,KAAK,CAAC,KAAmB,EAAE,KAAa;YAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACzB,OAAO;iBACR;gBACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC9C,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC9B;SACF;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC9C,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACzB;SACF;KACF;IAKD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;QAM/B,YACS,gBAA6B,EAC7B,aAA4B,EAC5B,MAAsB,EACtB,cAAsB,EACtB,IAAiB,EACjB,eAAiC,EACjC,OAAwB,EACxB,OAAgB;YAPhB,qBAAgB,GAAhB,gBAAgB,CAAa;YAC7B,kBAAa,GAAb,aAAa,CAAe;YAC5B,WAAM,GAAN,MAAM,CAAgB;YACtB,mBAAc,GAAd,cAAc,CAAQ;YACtB,SAAI,GAAJ,IAAI,CAAa;YACjB,oBAAe,GAAf,eAAe,CAAkB;YACjC,YAAO,GAAP,OAAO,CAAiB;YACxB,YAAO,GAAP,OAAO,CAAS;YAEvB,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,WAAW,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;SAC3E;QAEM,YAAY,CAAC,KAAU,EAAE,KAAmB;YACjD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAGhB,oBAAY,CAAC,oBAAoB,CAAC,CAAC;SAChF;QAEM,YAAY,CAAC,QAAa,EAAE,aAAkB,EAAE,KAAmB;YACxE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YAED,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;YAC/C,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACzE,IAAI,QAAQ,KAAK,aAAa,EAAE;gBAC9B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;aACpC;YAED,IAAI,CAAC,IAAI,CAAC,IAAI,GAAGyB,SAAO,MAAM,CAAC,EAAE;gBAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACxD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACvB;SACF;QAEM,KAAK,CAAC,KAAmB,EAAE,KAAa;YAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACzB,OAAO;iBACR;gBACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,gBAAgB,CAAC,IAAI,EAAE;gBACzB,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC3C;;;YAID,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;aACnF;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAGC,QAAM,IAAI,CAAC,EAAE;gBAC5B,gBAAgB,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC9C;SACF;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,gBAAgB,CAAC,MAAM,EAAE;gBAC3B,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACnD;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtB;KACF,CAAA;IAjFY,oBAAoB;QADhC,WAAW,EAAE;OACD,oBAAoB,CAiFhC;;IC1ID,IAAa,UAAU,GAAvB,MAAa,UAAU;QAKrB,YACS,gBAA6B,EAC7B,cAAsB,EACtB,eAAiC,EACjC,OAAwB,EACvB,cAAuB,KAAK;YAJ7B,qBAAgB,GAAhB,gBAAgB,CAAa;YAC7B,mBAAc,GAAd,cAAc,CAAQ;YACtB,oBAAe,GAAf,eAAe,CAAkB;YACjC,YAAO,GAAP,OAAO,CAAiB;YACvB,gBAAW,GAAX,WAAW,CAAiB;YAT/B,aAAQ,GAAY,KAAK,CAAC;YAC1B,WAAM,GAAW,IAAI,CAAC;YACtB,WAAM,GAAmB,IAAI,CAAC;SAQhC;QAEE,YAAY,CAAC,QAAa,EAAE,aAAkB,EAAE,KAAmB;YACxE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YAED,IAAI,KAAK,GAAG1B,oBAAY,CAAC,oBAAoB,EAAE;gBAC7C,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC;gBACxC,aAAa,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;gBACvC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5E,IAAI,QAAQ,KAAK,aAAa,EAAE;oBAC9B,MAAM,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC;iBACnC;gBACD,OAAO;aACR;YAED,MAAMqB,eAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;SACjC;QAEM,KAAK,CAAC,KAAmB,EAAE,KAAa;YAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACzB,OAAO;iBACR;gBACD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,eAAe,CAAC;YAE9E,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,gBAAgB,CAAC,IAAI,EAAE;gBACzB,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC3C;;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAACrB,oBAAY,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9G,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACnD;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO;aACR;YACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC/C,IAAI,gBAAgB,CAAC,MAAM,EAAE;gBAC3B,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACnD;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtB;KACF,CAAA;IAjEY,UAAU;QADtB,WAAW,EAAE;OACD,UAAU,CAiEtB;;ICnCD;;;AAGA,aAAgB,eAAe,CAAC,YAA6C;QAC3E,OAAO,UAAkC,MAAS;YAChD,OAAO,uBAAuB,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC7D,CAAA;IACH,CAAC;IAED;;;;;AAKA,aAAgB,kBAAkB,CAAC,YAA2E;QAC5G,OAAO,UAAkC,MAAS;YAChD,IAAI,MAA8B,CAAC;YAEnC,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;gBACpC,MAAM,GAAG;oBACP,IAAI,EAAE,YAAY;oBAClB,oBAAoB,EAAE,IAAI;iBAC3B,CAAC;aACH;iBAAM;gBACL,MAAM,mBAAK,oBAAoB,EAAE,IAAI,IAAK,YAAY,CAAE,CAAC;aAC1D;YAED,OAAO,uBAAuB,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACvD,CAAA;IACH,CAAC;AAED,UAAa,uBAAuB,GAAgE;QAClG,IAAI,EAAE,kBAAkB;QAExB,OAAO,CAAC,IAAY;YAClB,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;SAC/B;QAED,MAAM,CAA0B,IAAO;YACrC,OAAQ,IAAY,CAAC,IAAI,KAAK,IAAI,CAAC;SACpC;QAED,MAAM,CAA0B,YAA6C,EAAE,IAAO;YACpF,MAAM,IAAI,GAAG,IAAgC,CAAC;YAC9C,MAAM,KAAK,GAAqB,IAAI,CAAC,SAAS,CAAC;YAC/C,MAAM,WAAW,GAAG,gCAAgC,CAClD,OAAO,YAAY,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,YAAY,EACxE,IAAI,CACL,CAAC;YAED,IAAuC,CAAC,IAAI,GAAG,uBAAuB,CAAC;YACvE,IAAuC,CAAC,WAAW,GAAG,WAAW,CAAC;YACnE,IAAI,CAAC,QAAQ,GAAGwB,UAAQ,CAAC;YAEzB,KAAK,CAAC,QAAQ,GAAG4B,SAAO,CAAC;YACzB,KAAK,CAAC,KAAK,GAAGC,MAAI,CAAC;YACnB,KAAK,CAAC,OAAO,GAAGC,QAAM,CAAC;YACvB,KAAK,CAAC,OAAO,GAAGC,QAAM,CAAC;YACvB,KAAK,CAAC,OAAO,GAAGC,QAAM,CAAC;YACvB,KAAK,CAAC,MAAM,GAAGC,OAAK,CAAC;YAErB,OAAO,IAAI,CAAC;SACb;KACF,CAAC;IAEF,SAASjC,UAAQ,CAA6B,SAAqB;QACjE,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,MAAM,WAAW,GAAG,uBAAuB,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtE,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;QAEpC,SAAS,CAAC,QAAQ,CAACzB,mBAAY,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;QAE9D,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YAC/C,SAAS,CAAC,QAAQ,CAACA,mBAAY,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;IACH,CAAC;IAED,SAASqD,SAAO,CAA+C,eAAiC;QAC9F,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,eAAe,CAAC,oBAAoB,CAClC,IAAI,CAAC,WAAmC,EACxC,IAAI,CACL,CAAC;QAEF,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YAC5B,IAAY,CAAC,OAAO,EAAE,CAAC;SACzB;IACH,CAAC;IAED,SAASC,MAAI,CAA+C,KAAmB,EAAE,KAAa;QAC5F,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;gBACzB,OAAO;aACR;YAED,IAAI,CAAC,OAAO,CAAC,KAAK,GAAGrD,oBAAY,CAAC,QAAQ,CAAC,CAAC;SAC7C;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,QAAQ,CAAC,UAAU,EAAE;YACtB,IAAY,CAAC,OAAO,CAAC,KAAK,GAAGA,oBAAY,CAAC,QAAQ,CAAC,CAAC;SACtD;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,QAAQ,CAAC,QAAQ,EAAE;YACpB,IAAY,CAAC,KAAK,CAAC,KAAK,GAAGA,oBAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC3D;IACH,CAAC;IAED,SAASwD,QAAM,CAA+C,KAAmB;QAC/E,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;YAEhC,IAAI,QAAQ,CAAC,YAAY,EAAE;gBACxB,IAAY,CAAC,SAAS,CAAC,KAAK,GAAGxD,oBAAY,CAAC,UAAU,CAAC,CAAC;aAC1D;YAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;gBAC5B,IAAY,CAAC,OAAO,CAAC,KAAK,GAAGA,oBAAY,CAAC,UAAU,CAAC,CAAC;aACxD;SACF;IACH,CAAC;IAED,SAASsD,QAAM,CAA+C,mBAA0B,EAAE,SAA2B;QACnH,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;YAC9B,IAAY,CAAC,SAAS,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;SACzD;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YAC9B,SAAS,CAAC,qBAAqB,CAAC,IAAW,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,SAASC,QAAM,CAA+C,SAA2B;QACvF,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;gBAC9B,IAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;aACpC;YAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;gBAC9B,SAAS,CAAC,qBAAqB,CAAC,IAAW,CAAC,CAAC;aAC9C;SACF;IACH,CAAC;IAED,SAASE,OAAK;QACZ,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YAC5B,IAAY,CAAC,OAAO,EAAE,CAAC;SACzB;IACH,CAAC;IAED;AACA,aAAgB,gCAAgC,CAAC,eAAuC,EAAE,IAA0B;QAClH,OAAO;YACL,IAAI,EAAE,eAAe,CAAC,IAAI;YAC1B,OAAO,EAAE,eAAe,CAAC,OAAO,IAAIhD,eAAQ,CAAC,UAAU;YACvD,kBAAkB,EAAE,eAAe,CAAC,kBAAkB,IAAIO,mBAAW,CAAC,MAAM;YAC5E,oBAAoB,EAAE,eAAe,CAAC,oBAAoB,IAAI,KAAK;YACnE,SAAS,oBAAO,IAAY,CAAC,SAAS,EAAK,eAAe,CAAC,SAAS,CAAC;SACtE,CAAC;IACJ,CAAC;;aC5Me,cAAc,CAAC,YAA4C;QACzE,OAAO,UAAkC,MAAS;YAChD,OAAO,sBAAsB,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SAC5D,CAAA;IACH,CAAC;AAED,UAAa,sBAAsB,GAA8D;QAC/F,IAAI,EAAE,iBAAiB;QAEvB,OAAO,CAAC,IAAY;YAClB,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;SAC/B;QAED,MAAM,CAA0B,IAAO;YACrC,OAAQ,IAAY,CAAC,IAAI,KAAK,IAAI,CAAC;SACpC;QAED,MAAM,CAA0B,YAA4C,EAAE,IAAO;YACnF,MAAM,WAAW,GAAG,OAAO,YAAY,KAAK,QAAQ,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,YAAY,CAAC;YAC7F,MAAM,IAAI,GAA4B,IAAW,CAAC;YAEjD,IAAsC,CAAC,IAAI,GAAG,sBAAsB,CAAC;YACrE,IAAsC,CAAC,WAAW,GAAG,WAAW,CAAC;YAClE,IAAI,CAAC,QAAQ,GAAG,UAAS,SAAqB;gBAC5C,SAAS,CAAC,QAAQ,CAACjB,mBAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;aACvF,CAAC;YAEF,OAAO,IAAI,CAAC;SACb;KACF;;ICCD;IACA;IAEA;AACA,UAAa,QAAQ;QACnB,YACU,OAAuB,EACvB,eAAiC,EACjC,YAA2B,EAC3B,MAAyB,EACzB,eAAiC;YAJjC,YAAO,GAAP,OAAO,CAAgB;YACvB,oBAAe,GAAf,eAAe,CAAkB;YACjC,iBAAY,GAAZ,YAAY,CAAe;YAC3B,WAAM,GAAN,MAAM,CAAmB;YACzB,oBAAe,GAAf,eAAe,CAAkB;SACtC;QAEE,MAAM,CAAC,UAAuB,EAAE,OAAyB,EAAE,UAA8B,EAAE,IAAY,EAAE,KAA+B;YAC7I,MAAM,kBAAkB,GAAG,UAAU,CAAC,YAAY,CAAC;YAEnD,IAAI,OAAO,CAAC,MAAM,KAAK,kBAAkB,CAAC,MAAM,EAAE;gBAChD,IAAI,OAAO,CAAC,MAAM,GAAG,kBAAkB,CAAC,MAAM,EAAE;oBAC9C,MAAMsB,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;iBAC1B;qBAAM;oBACL,MAAMA,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;iBAC1B;aACF;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAChD,MAAM,YAAY,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAC3C,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBACrD,MAAM,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;iBACjE;aACF;YAED,IAAI,IAAI,EAAE;gBACR,MAAM,qBAAqB,GAAG,UAAU,CAAC,UAAU,CAAC;gBAEpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC9D,MAAM,OAAO,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC/D;aACF;SACF;QAEM,sBAAsB,CAAC,UAAuB,EAAE,MAAa,EAAE,WAAkD,EAAE,SAAyB;YACjJ,MAAM,iBAAiB,GAAG,WAAW,CAAC,YAAY,CAAC;YAEnD,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;YAE9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC1D,MAAM,OAAO,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACrC,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;gBAEhC,IAAY,CAAC,WAAW,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;aAC5D;YAED,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACtC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACzC;QAEM,uBAAqC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAA+C;YAChI,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC;YAChC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAC/B,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACnB,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgB,CAAC;YAC/C,MAAM,IAAI,IAAI,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,2BAA4B,CAAkB,CAAC;YACtH,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,yBAAyB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAEL,mBAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;aAC9I;iBAAM;gBACL,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAEA,mBAAW,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;aACrK;SACF;QAEM,yBAAuC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAiD;YACpI,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgB,CAAC;YAC/C,MAAM,IAAI,IAAI,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,2BAA4B,CAAkB,CAAC;YACtH,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,yBAAyB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,IAAI,EAAEA,mBAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;aACnJ;iBAAM;gBACL,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,IAAI,EAAEA,mBAAW,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;aAC1K;SACF;QAEM,2BAAyC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAmD;YACxI,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgB,CAAC;YAC/C,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAIY,eAAO,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,6BAAgC,WAAW,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SACvO;QAEM,2BAAyC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAmD;YACxI,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgB,CAAC;YAC/C,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAIA,eAAO,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,uBAAyB,EAAE,MAAM,EAAE,WAAW,CAAC,IAAI,EAAEZ,mBAAW,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/M;QAEM,2BAAyC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAmD;YACxI,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgB,CAAC;YAC/C,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,2BAA8B,WAAW,CAAC,QAAQ,mCAAuC,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SAC9S;QAEM,uBAAqC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAA+C;YAChI,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgB,CAAC;YAC/C,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,wBAA0B,EAAE,MAAM,EAAE,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SACzL;QAEM,sBAAoC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAA8C;YAC9H,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgB,CAAC;YAC/C,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,mBAAoB,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SAC1I;QAEM,gCAA8C,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAwD;YAClJ,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgB,CAAC;YAC/C,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAIY,eAAO,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,6BAAgCZ,mBAAW,CAAC,MAAM,CAAC,EAAQ,MAAO,CAAC,KAAK,EAAE,WAAW,CAAC,IAAI,EAAEA,mBAAW,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;SACxP;QAEM,uBAAqC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAA+C;YAChI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC;SAC9C;QAEM,wBAAsC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAgD;YAClI,GAAG,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;SAC/D;QAEM,0BAAwC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAkD;YACtI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,MAAM,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAAI,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAiB,qBAAqB,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAE/M,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;YACxE,SAAS,CAAC,OAAO,EAAE,CAAC;SACrB;QAEM,4BAA0C,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAoD;YAC1I,MAAM,iBAAiB,GAAG,WAAW,CAAC,YAAY,CAAC;YACnD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAE7B,MAAM,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;YACnF,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAmB,uBAAuB,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAClG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAEzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC1D,MAAM,OAAO,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;aAC7D;YAED,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACtC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAExC,SAAS,CAAC,OAAO,EAAE,CAAC;SACrB;QAEM,qCAAmD,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAkD,EAAE,KAA+B;YAClL,MAAM,iBAAiB,GAAG,WAAW,CAAC,YAAY,CAAC;YACnD,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACnF,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,MAAM,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,uBAAuB,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YAE/I,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAmB,uBAAuB,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAClG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAEzC,IAAI,WAAW,CAAC,IAAI,EAAE;gBACnB,SAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;aACtF;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC1D,MAAM,OAAO,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;aAC7D;YAED,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACtC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAExC,SAAS,CAAC,OAAO,EAAE,CAAC;SACrB;QAEM,0BAAwC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAAkD;YACtI,MAAM,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC;YACtC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,SAAS,EAAE;gBACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAoB,CAAC;gBACnG,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC/C,MAAM,IAAI,KAAK,CAAC,2BAA2B,YAAY,GAAG,CAAC,CAAC;iBAC7D;gBACD,IAAI,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrD;YACD,IAAI,CAAC,YAAY,CAAC,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;SACrD;QAEM,sBAAoC,CAAC,UAAuB,EAAE,MAAW,EAAE,WAA8C;YAC9H,MAAM,CAAC,MAAM,EAAE,CAAC;YAChB,MAAM,iBAAiB,GAAG,WAAW,CAAC,YAAY,CAAC;YACnD,MAAM,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;YAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC1D,MAAM,gBAAgB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBAC9C,MAAM,SAAS,GAAQ,gBAAgB,CAAC,SAAS,CAAC;gBAClD,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,UAAU,CACvC,SAAS,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,6BAAgC,EACzF,gBAAgB,CAAC,IAAI,EACrB,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,OAAO,EACZ,WAAW,CACZ,CAAC,CAAC;aACJ;SACF;KACF;;ICxND;AACA,UAAa,eAAe;QAe1B;YAZO,eAAU,GAAY,KAAK,CAAC;YAC5B,eAAU,GAAY,KAAK,CAAC;YAC5B,aAAQ,GAAY,KAAK,CAAC;YAC1B,iBAAY,GAAY,KAAK,CAAC;YAC9B,gBAAW,GAAY,KAAK,CAAC;YAC7B,iBAAY,GAAY,KAAK,CAAC;YAC9B,gBAAW,GAAY,KAAK,CAAC;YAC7B,iBAAY,GAAY,KAAK,CAAC;YAC9B,eAAU,GAAY,KAAK,CAAC;YAC5B,cAAS,GAAY,KAAK,CAAC;YAC3B,eAAU,GAAY,KAAK,CAAC;SAEX;QAEjB,OAAO,MAAM,CAAC,SAAoD,EAAE,QAA2C;YACpH,MAAM,QAAQ,GAAG,IAAI,eAAe,EAAE,CAAC;YAEvC,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC;YACrD,QAAQ,CAAC,UAAU,GAAG,SAAS,IAAI,QAAQ,CAAC;YAC5C,QAAQ,CAAC,UAAU,GAAG,SAAS,IAAI,QAAQ,CAAC;YAC5C,QAAQ,CAAC,QAAQ,GAAG,OAAO,IAAI,QAAQ,CAAC;YACxC,QAAQ,CAAC,YAAY,GAAG,WAAW,IAAI,QAAQ,CAAC;YAChD,QAAQ,CAAC,WAAW,GAAG,UAAU,IAAI,QAAQ,CAAC;YAC9C,QAAQ,CAAC,YAAY,GAAG,WAAW,IAAI,QAAQ,CAAC;YAChD,QAAQ,CAAC,WAAW,GAAG,UAAU,IAAI,QAAQ,CAAC;YAC9C,QAAQ,CAAC,YAAY,GAAG,WAAW,IAAI,QAAQ,CAAC;YAChD,QAAQ,CAAC,UAAU,GAAG,SAAS,IAAI,QAAQ,CAAC;YAC5C,QAAQ,CAAC,SAAS,GAAG,QAAQ,IAAI,QAAQ,CAAC;YAC1C,QAAQ,CAAC,UAAU,GAAG,SAAS,IAAI,QAAQ,CAAC;YAE5C,OAAO,QAAQ,CAAC;SACjB;QAEM,OAAO,CAAC,QAA2C,EAAE,SAAqB;YAC/E,IAAI,YAAY,IAAI,QAAQ,EAAE;gBAC5B,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;aAC1C;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;aACvC;SACF;QAEO,cAAc,CAAC,SAAqB,EAAE,QAAwB;YACpE,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAEvD,SAAiB,CAAC,SAAS,GAAG,IAAI0C,wBAAgB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAEzE,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,WAAW,EAAE;gBAC5C,UAAU,EAAE,KAAK;gBACjB,GAAG,EAAE;oBACH,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;iBAC7C;aACF,CAAC,CAAC;SACJ;QAEO,WAAW,CAAC,SAAqB,EAAE,QAAa;YACtD,MAAM,SAAS,GAAG,EAAE,CAAC;YACrB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,eAAe,GAAG,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;YAE9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACxD,MAAM,IAAI,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;gBAEhC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAInC,gBAAQ,CAC5B,QAAQ,EACR,IAAI,EACJ,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,CACzB,CAAC;gBAEF,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;aACpC;YAED,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,YAAY,EAAE;gBAC7C,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,SAAS;aACjB,CAAC,CAAC;YAEH,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;YAE1B,OAAO,SAAS,CAAC;SAClB;KACF;IAED,SAAS,kBAAkB,CAAC,QAAa,EAAE,IAAY;QACrD,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE;YACrC,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,cAAa,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE;YAC5D,GAAG,EAAE,UAAS,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAEvB,oBAAY,CAAC,oBAAoB,CAAC,CAAC,EAAE;SACnG,CAAC,CAAC;IACL,CAAC;IAOD;AAEA,AAAa0D,4BAAgB,GAA7B,MAAa,gBAAgB;QAM3B,YAAoB,SAAqB,EAAUC,gBAA6B;YAA5D,cAAS,GAAT,SAAS,CAAY;YAAU,kBAAa,GAAbA,gBAAa,CAAgB;YALzE,eAAU,GAAY,KAAK,CAAC;YAE3B,aAAQ,GAAqB,IAAI,CAAC;YAClC,cAAS,GAAY,KAAK,CAAC;SAEkD;QAE9E,QAAQ;YACb,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,yBAAyB,CAAC,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;gBACxF,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aACtE;YAED,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QAEM,QAAQ,CAAC,QAAa,KAAU;QAEhC,YAAY;YACjB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE3D,oBAAY,CAAC,oBAAoB,GAAGA,oBAAY,CAAC,gBAAgB,CAAC,CAAC;YAClH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;QAEM,SAAS,CAA6C,UAA+B;YAC1F,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAChC;QAEM,WAAW,CAA6C,UAA+B;YAC5F,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACnC;QAEO,iBAAiB;YACvB,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAErE,IAAI,kBAAkB,IAAI,IAAI,CAAC,aAAa,EAAE;gBAC3C,IAAI,CAAC,aAAqB,CAAC,gBAAgB,EAAE,CAAC;aAChD;YAED,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;KACF,CAAA;AA3CY0D,4BAAgB;QAD5B,oBAAoB,CAACzD,oBAAY,CAAC,QAAQ,CAAC;OAC/ByD,wBAAgB,CA2C5B;IAED,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,WAAW,CAAC;IAE7D;AACA,aAAgB,YAAY,CAAC,KAAuB;QAClD,MAAM,UAAU,GAAqB,EAAE,CAAC;QAExC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YAC9C,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,SAAS,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAE9C,IAAI,SAAS,KAAK,IAAI,EAAE;gBACtB,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC5B;SACF;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;;UClKY,YAAY,GAAGlD,SAAE,CAAC,eAAe,EAAgB,CAAC,SAAS,EAAE,CAAC;IAK3E;AACA,UAAa,IAAI;QAYf,YAAmB,OAAoB,EAAU,QAAmB;YAAjD,YAAO,GAAP,OAAO,CAAa;YAAU,aAAQ,GAAR,QAAQ,CAAW;YAX7D,eAAU,GAAiB,EAAE,CAAC;YAC9B,iBAAY,GAAc,EAAE,CAAC;YAC7B,WAAM,GAAW,IAAI,CAAC;YACtB,WAAM,GAAkB,IAAI,CAAC;YAC7B,aAAQ,GAAY,KAAK,CAAC;YAC1B,gBAAW,GAAY,KAAK,CAAC;YAG5B,oBAAe,GAAY,KAAK,CAAC;YACjC,WAAM,GAAY,KAAK,CAAC;YAG9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC7C;QAEM,KAAK,CAAC,QAAyB;YACpC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;gBACxB,MAAMa,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;YACD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,KAAK,QAAQ,EAAE;gBAC3E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;aAC7B;SACF;QAEM,SAAS,CAAC,KAAa;YAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;SACzB;QAEM,OAAO;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC5C;iBAAM;gBACL,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;aAC5B;SACF;QAEM,KAAK,CAAC,KAAmB,EAAE,KAAa;YAC7C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;oBACzB,OAAO;iBACR;gBAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAClD,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAClC;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;QAEM,SAAS;YACd,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzC;QAEM,YAAY;YACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YAErB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC5C;YAED,OAAO,KAAK,CAAC;SACd;QAEM,OAAO,CAAC,mBAA0B,EAAE,SAA2B;YACpE,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,OAAO;aACR;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;YAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;aACxD;YAED,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aAC/B;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;QAEM,OAAO,CAAC,SAA2B;YACxC,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAEjC,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;gBACtC,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC;gBAE3B,OAAO,CAAC,EAAE,EAAE;oBACV,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;iBACnC;gBAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;SACF;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;gBAClC,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;gBAEzB,OAAO,CAAC,EAAE,EAAE;oBACV,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC7B;gBAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACpB;SACF;QAEM,MAAM;YACX,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;YAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACpD,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;aACzB;SACF;KACF;IAED;AACA,UAAa,WAAW;QAOtB,YAAmB,IAAY,EAAU,QAAmB;YAAzC,SAAI,GAAJ,IAAI,CAAQ;YAAU,aAAQ,GAAR,QAAQ,CAAW;YALrD,cAAS,GAAY,KAAK,CAAC;YAE1B,cAAS,GAAW,CAAC,CAAC,CAAC;YACvB,UAAK,GAAW,IAAI,CAAC;SAEmC;QAEzD,YAAY,CAAC,IAAkB,EAAE,yBAAkC;YACxE,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,KAAK,GAAG,EAAE;oBAChB,IAAI,GAAG,WAAW,CAAC,YAAY,CAAC;iBACjC;qBAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;oBACnC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;iBAC3B;gBAED,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,IAAI,CAAC,yBAAyB,EAAE;oBACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACvB;aACF;YAED,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;gBACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACjB;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aACnB;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACrC;QAEM,gBAAgB,CAAC,IAAW;YACjC,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;SAClE;QAEM,gBAAgB,CAAC,IAAU;YAChC,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;gBAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAK,CAAC;SACd;QAEM,MAAM;YACX,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAEzB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtC,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC;aACpB;YAED,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtC;;IApDa,wBAAY,GAAW,MAAM,CAAC;IAuD9C,SAAS,UAAU,CAAa,KAAmB;QACjD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QAChC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YAClD,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;SACxC;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;;aC9Ne,mBAAmB,CAAC,eAAiC,EAAE,mBAAmC,EAAE,YAAiC;QAC3I,MAAM,OAAO,GAAmB,mBAAmB,CAAC,WAAW,EAAE,CAAC;QAClE,MAAM,kBAAkB,GAAG,IAAI,gBAAgB,EAAE,CAAC;QAClD,MAAM,eAAe,GAAG,IAAI,gBAAgB,EAAE,CAAC;QAC/C,MAAM,mBAAmB,GAAG,IAAI,gBAAgB,EAAwB,CAAC;QACzE,MAAM,eAAe,GAAG,IAAI,mBAAmB,CAAC,eAAe,CAAC,CAAC;QACjE,MAAM,sBAAsB,GAAG,IAAI,gBAAgB,EAAmB,CAAC;QACvE,MAAM,QAAQ,GAAG,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAEzD,GAAG,CAAC,uBAAuB,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;QAEtD,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;QACxD,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;QAC1D,OAAO,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,CAAC;QACpE,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAE,sBAAsB,CAAC,CAAC;QAElE,IAAI,YAAY,EAAE;YAChB,OAAO,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC,CAAC;SACnC;QAED,OAAO,CAAC,MAAM,GAAG,UAAS,UAAuB,EAAE,OAAyB,EAAE,kBAAsC,EAAE,IAAY,EAAE,KAA+B;YACjK,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,kBAAkB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;SACtE,CAAC;QAEF,OAAO,CAAC,uBAAuB,GAAG,UAAS,UAAuB,EAAE,MAAW,EAAE,WAAiC,EAAE,OAAsB,EAAE,KAA+B,EAAE,QAA0B;YACrM,kBAAkB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACvC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAChC,mBAAmB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAEzC,IAAI,OAAO,EAAE;gBACX,eAAe,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aACzC;YAED,IAAI,QAAQ,EAAE;gBACZ,sBAAsB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aAC1C;YAED,OAAO,OAAO,CAAC;SAChB,CAAC;QAEF,OAAO,CAAC,OAAO,GAAG;YAChB,eAAe,CAAC,OAAO,EAAE,CAAC;YAC1B,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAC7B,mBAAmB,CAAC,OAAO,EAAE,CAAC;YAC9B,eAAe,CAAC,OAAO,EAAE,CAAC;YAC1B,sBAAsB,CAAC,OAAO,EAAE,CAAC;SAClC,CAAC;QAEF,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;AACA,UAAa,gBAAgB;QAA7B;YACU,aAAQ,GAAM,IAAI,CAAC;SAgB5B;QAdQ,OAAO,CAAC,QAAW;YACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;QAEM,OAAO,CAAC,OAAmB,EAAE,SAAqB;YACvD,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;gBAC/B,MAAMA,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QAEM,OAAO;YACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;KACF;IAED;AACA,UAAa,mBAAmB;QAI9B,YAAoB,eAAiC;YAAjC,oBAAe,GAAf,eAAe,CAAkB;SAAI;QAElD,OAAO,CAAC,OAAqB,EAAE,KAA8B;YAClE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,KAAK,IAAIZ,eAAQ,CAAC,WAAW,CAAC;SACnD;QAEM,OAAO,CAAC,OAAmB,EAAE,SAAyB;YAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,IAAI,OAAO,KAAK,SAAS,EAAE;gBACzB,MAAMY,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;YACD,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE;gBACzC,MAAMA,eAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;YACD,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,KAAK,EAAE;gBACT,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;aAC9D;YAED,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QAEM,OAAO;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;KACF;;ICvGD;IACA;IACA;IACA;IACA;IACA;IACA;AACA,UAAa,gBAAgB;QAI3B,YAAY,eAAiC,EAAE,mBAAmC,EAAU,kBAAsC;YAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;YAChI,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,eAAe,EAAE,mBAAmB,EAAE,kBAAkB,CAAC,YAAY,CAAC,CAAC;YAChH,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,6BAA6B,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;SAChG;QAEM,SAAS,CAAC,UAAuB,EAAE,IAAY,EAAE,YAAsC;YAC5F,MAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACxC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;YACxG,OAAO,KAAK,CAAC;SACd;KACF;IAED;IACA;AACA,UAAa,cAAc,GAAc;QACvC,aAAa,EAAE,IAAI;QACnB,SAAS,CAAC,UAAuB;YAC/B,OAAO,YAAY,CAAC,KAAK,CAAC;SAC3B;KACF;;UCpCY,iBAAiB,GAAGb,SAAE,CAAC,eAAe,EAAqB,CAAC,SAAS,EAAE;;ICVpF,WAAY,gBAAgB;QAC1B,uDAAqB,CAAA;QACrB,iEAAqB,CAAA;QACrB,iEAAqB,CAAA;IACvB,CAAC,EAJWoD,wBAAgB,KAAhBA,wBAAgB,QAI3B;;UCuBY,gBAAgB,GAAGpD,SAAE,CAAC,eAAe,EAAoB;SACnE,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAACqD,uBAAe,CAAC,CAAC,CAAC;IAElD,MAAM,mBAAmB,GAAG,SAAS,CAAC;AAItC,AAAaA,2BAAe;IAD5B;IACA,MAAa,eAAe;QAM1B,YACU,SAAqB,EACrB,SAAqB,EACrB,eAAiC,EACjC,YAA2B,EAC3B,MAAyB,EACjC,iBAAsC;YAL9B,cAAS,GAAT,SAAS,CAAY;YACrB,cAAS,GAAT,SAAS,CAAY;YACrB,oBAAe,GAAf,eAAe,CAAkB;YACjC,iBAAY,GAAZ,YAAY,CAAe;YAC3B,WAAM,GAAN,MAAM,CAAmB;YAV3B,mBAAc,GAAuC,IAAI,GAAG,EAAE,CAAC;YAC/D,kBAAa,GAAkD,IAAI,GAAG,EAAE,CAAC;YACzE,mBAAc,GAAoE,IAAI,GAAG,EAAE,CAAC;YAWlG,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC,MAAM,CACvC,CAAC,GAAG,EAAE,IAAI;gBACR,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;gBACtB,OAAO,GAAG,CAAC;aACZ,EACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CACpB,CAAC;SACH;QAEM,kBAAkB,CAAC,UAA8B,EAAE,aAAkC;YAC1F,IAAI,CAAC,UAAU,EAAE;gBACf,OAAO,IAAI,CAAC;aACb;YAED,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAEhD,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;;gBAG5C,IAAI,KAAK,CAAC,aAAa,KAAK,IAAI,IAAI,aAAa,EAAE;oBACjD,aAAa,CAAC,QAAQ,CAAiB,KAAK,CAAC,aAAa,CAAC,CAAC;iBAC7D;gBAED,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aAC5C;YAED,OAAO,KAAK,CAAC;SACd;QAEM,cAAc,CAAC,UAAsC,EAAE,aAA8B;YAC1F,IAAI,CAAC,UAAU,EAAE;gBACf,OAAO,IAAI,CAAC;aACb;YAED,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAE/C,IAAI,CAAC,KAAK,EAAE;gBACV,MAAM,WAAW,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;gBACjD,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;gBAC3D,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aAC3C;YAED,OAAO,KAAK,CAAC;SACd;QAEM,oBAAoB,CAAC,IAA+C,EAAE,QAA2C;YACtH,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAE1C,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAC/C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACtC;YAED,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACzC;QAEM,cAAc,CAAC,OAAuB;YAC3C,OAAO,IAAI,QAAQ,CACjB,OAAO,EACP,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,MAAM,EACX,IAAI,CACL,CAAC;SACH;QAEO,iBAAiB,CAAC,UAA8B,EAAE,aAA8B;YACtF,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;YACpE,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAC3D,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC7C,OAAO,OAAO,CAAC;SAChB;QAEO,kBAAkB,CAAC,UAA8B,EAAE,aAA8B;YACvF,aAAa,GAAG,aAAa,IAAoB,IAAI,CAAC,SAAS,CAAC;YAEhE,IAAI,UAAU,IAAI,UAAU,CAAC,cAAc,EAAE;gBAC3C,IAAI,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE;oBAC7B,MAAM,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC,QAAQ,IAAI,mBAAmB,CAAC;oBACtE,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;oBAE9C,IAAI,CAAC,QAAQ,EAAE;wBACb,MAAMxC,eAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;qBACxC;oBAED,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAkB,UAAU,EAAE,IAAI,2BAA2B,CAAiB,aAAa,CAAC,EAAEuC,wBAAgB,CAAC,SAAS,CAAC,CAAC;iBACxJ;gBAED,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;aAC9D;YAED,OAAO,cAAc,CAAC;SACvB;KACF,CAAA;AA5GYC,2BAAe;QAF3B9B,aAAM,CAAC+B,iBAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,aAAa,EAAE,iBAAiB,EAAEC,UAAG,CAAC,iBAAiB,CAAC,CAAC;;OAE9FF,uBAAe,CA4G3B;IAED;AACA,aAAgB,gBAAgB,CAAC,UAAsC;QACrE,OAAO;YACL,IAAI,EAAE,UAAU,CAAC,IAAI,IAAI,kBAAkB;YAC3C,cAAc,EAAE,UAAU,CAAC,cAAc;YACzC,KAAK,EAAE,UAAU,CAAC,KAAK,IAAI,CAAC;YAC5B,KAAK,EAAE,UAAU,CAAC,KAAK,IAAI;gBACzB,QAAQ,EAAE,KAAK;aAChB;YACD,SAAS,EAAE,UAAU,CAAC,SAAS,IAAIpD,eAAQ,CAAC,WAAW;YACvD,YAAY,EAAE,UAAU,CAAC,YAAY,GAAGA,eAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,GAAGA,eAAQ,CAAC,UAAU;YACvG,YAAY,EAAE,UAAU,CAAC,YAAY,GAAGA,eAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,GAAGA,eAAQ,CAAC,UAAU;YACvG,UAAU,EAAE,UAAU,CAAC,UAAU,GAAGA,eAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,GAAGA,eAAQ,CAAC,UAAU;YACjG,aAAa,EAAE,UAAU,CAAC,aAAa,IAAI,KAAK;YAChD,aAAa,EAAE,UAAU,CAAC,aAAa,IAAI,IAAI;YAC/C,QAAQ,EAAE,UAAU,CAAC,QAAQ,IAAI,KAAK;SACvC,CAAC;IACJ,CAAC;IAED;AACA,UAAa,2BAA2B;QACtC,YAAoB,OAAuB;YAAvB,YAAO,GAAP,OAAO,CAAgB;SAAI;QAExC,IAAI,CAAU,IAA4B,EAAE,IAAY;YAC7D,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAU,GAAG,EAAE,KAAK,CAAC,CAAC;YAE/D,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,UAAU,EAAE;gBAC5C,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAElD,IAAI,OAAO,KAAK,IAAI,EAAE;oBACpB,OAAQ,OAAO,CAAC,IAA+B,CAAC,WAAW,IAAI,IAAI,CAAC;iBACrE;aACF;YAED,OAAO,IAAI,CAAC;SACb;QAEM,MAAM,CAAgD,IAAmC,EAAE,IAAY;YAC5G,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;gBAChC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;aACtC;YACD,OAAO,IAAI,CAAC;SACb;KACF;;ICxLD,WAAY,cAAc;QACxB,mDAA6B,CAAA;QAC7B,yDAA6B,CAAA;QAC7B,iFAA6B,CAAA;IAC/B,CAAC,EAJWuD,sBAAc,KAAdA,sBAAc,QAIzB;AAqQD,UAAa,sBAAsB;QAAnC;YACS,SAAI,GAAY,IAAI,CAAC;;YAGrB,UAAK,GAA0D,IAAI,CAAC;YAEnE,UAAK,GAAqB,EAAE,CAAC;YAC7B,WAAM,GAAkB,IAAI,CAAC;YAC7B,YAAO,GAAe,IAAI,CAAC;SA2DpC;QAzDQ,OAAO,CAAC,IAAoB;YACjC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;aAC5C;SACF;QAEM,SAAS;YACd,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,OAAO,KAAK,CAAC;aACd;YAED,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;SAC7C;QAEM,MAAM;YACX,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACnB;SACF;QAEM,IAAI;YACT,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;iBACjC;qBAAM;;oBAEL,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;iBAChE;aACF;YAED,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAEO,WAAW;YACjB,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,OAAO;aACR;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;gBACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACrB;SACF;QAEO,QAAQ,CAAC,YAAqB;YACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,IAAI,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBACvC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;aACzB;YAED,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;gBACzB,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;SACF;KACF;IAUD;AACA,UAAa,yBAAyB;QAYpC,YACkB,KAAqB,EAC7B,SAAoC,IAAI,EACxC,sBAA6B,IAAI;YAFzB,UAAK,GAAL,KAAK,CAAgB;YAC7B,WAAM,GAAN,MAAM,CAAkC;YACxC,wBAAmB,GAAnB,mBAAmB,CAAc;YALnC,SAAI,GAA2B,IAAI,CAAC;YAO1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC9C;QAEM,MAAM,CAAC,SAAkB;YAC9B,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;YAClD,OAAO,IAAI,CAAC;SACb;QAEM,aAAa,CAAC,SAA+B;YAClD,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,SAAS,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/B;QAEM,qBAAqB,CAAC,SAA8B;YACzD,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,SAAS,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/B;QAEM,YAAY,CAAC,IAAoB;YACtC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aAChC;iBAAM;gBACL,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtB,IAAI,CAAC,IAAI,GAAG,IAAI,sBAAsB,EAAE,CAAC;iBAC1C;gBACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACzB;SACF;QAEM,WAAW;YAChB,MAAM,SAAS,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAClE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC9B,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;YACtC,OAAO,SAAS,CAAC;SAClB;QAEM,GAAG;YACR,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACzC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBACvB,OAAO,IAAI,CAAC,IAAI,CAAC;aAClB;YAED,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,OAAO,SAAS,CAAC,IAAI,CAAC;SACvB;;QAGM,UAAU;YACf,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;;QAGM,SAAS;YACd,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;SACF;;QAGM,QAAQ;YACb,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,IAAI,CAAC,wBAAwB,EAAE,CAAC;aACjC;SACF;QAEO,eAAe;YACrB,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;YACxC,IAAI,YAAY,CAAC;YAEjB,OAAO,eAAe,EAAE;gBACtB,eAAe,CAAC,SAAS,EAAE,CAAC;gBAC5B,YAAY,GAAG,eAAe,CAAC,aAAa,CAAC;gBAC7C,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC;gBACrC,eAAe,GAAG,YAAY,CAAC;aAChC;SACF;QAEO,wBAAwB;YAC9B,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;YACxC,IAAI,YAAY,CAAC;YAEjB,OAAO,eAAe,EAAE;gBACtB,eAAe,CAAC,QAAQ,EAAE,CAAC;gBAC3B,YAAY,GAAG,eAAe,CAAC,aAAa,CAAC;gBAC7C,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC;gBACrC,eAAe,GAAG,YAAY,CAAC;aAChC;SACF;KACF;IAED;AACA,UAAa,yBAAyB;QAapC,YACkB,KAAqB,EAC7B,SAAoC,IAAI;YADhC,UAAK,GAAL,KAAK,CAAgB;YAC7B,WAAM,GAAN,MAAM,CAAkC;YAL1C,SAAI,GAA2B,IAAI,CAAC;YACpC,qBAAgB,GAAY,IAAI,CAAC;YAMvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC7C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SACpD;QAEM,MAAM,CAAC,SAAkB;YAC9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAE7B,IAAI,SAAS,CAAC,WAAW,EAAE;gBACzB,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACzB;iBAAM,IAAI,eAAe,CAAC,SAAS,CAAC,EAAE;gBACrC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;aAClC;YAED,OAAO,IAAI,CAAC;SACb;QAEM,gBAAgB,CAAC,SAAiC;YACvD,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,CAAC,eAAe,CAAC,gBAAgB,GAAG,SAAS,CAAC;gBAClD,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;gBACjC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;SACF;QAEM,qBAAqB,CAAC,SAA8B;YACzD,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,SAAS,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/B;QAEM,YAAY,CAAC,IAAoB;YACtC,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aAChC;iBAAM;gBACL,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtB,IAAI,CAAC,IAAI,GAAG,IAAI,sBAAsB,EAAE,CAAC;iBAC1C;gBACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACzB;SACF;QAEM,WAAW;YAChB,MAAM,SAAS,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAClE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;YACtC,OAAO,SAAS,CAAC;SAClB;QAEM,GAAG;YACR,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACzC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBACvB,OAAO,IAAI,CAAC,IAAI,CAAC;aAClB;YAED,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,OAAO,SAAS,CAAC,IAAI,CAAC;SACvB;;QAGM,YAAY;YACjB,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;SACF;;QAGM,QAAQ;YACb,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,IAAI,CAAC,wBAAwB,EAAE,CAAC;aACjC;SACF;;QAGM,UAAU;YACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;QAEO,kBAAkB;YACxB,IAAI,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC;YAE9C,IAAI,IAAI,CAAC,KAAK,GAAGA,sBAAc,CAAC,mBAAmB,EAAE;gBACnD,OAAO,kBAAkB,EAAE;oBACzB,kBAAkB,CAAC,YAAY,EAAE,CAAC;oBAClC,kBAAkB,GAAG,kBAAkB,CAAC,gBAAgB,CAAC;iBAC1D;aACF;iBAAM;gBACL,IAAI,eAAe,CAAC;gBAEpB,OAAO,kBAAkB,EAAE;oBACzB,kBAAkB,CAAC,YAAY,EAAE,CAAC;oBAClC,eAAe,GAAG,kBAAkB,CAAC,gBAAgB,CAAC;oBACtD,kBAAkB,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC3C,kBAAkB,GAAG,eAAe,CAAC;iBACtC;aACF;SACF;QAEO,wBAAwB;YAC9B,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;YACxC,IAAI,YAAY,CAAC;YAEjB,OAAO,eAAe,EAAE;gBACtB,eAAe,CAAC,QAAQ,EAAE,CAAC;gBAC3B,YAAY,GAAG,eAAe,CAAC,aAAa,CAAC;gBAC7C,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC;gBACrC,eAAe,GAAG,YAAY,CAAC;aAChC;YAED,IAAI,IAAI,CAAC,KAAK,GAAGA,sBAAc,CAAC,mBAAmB,EAAE;gBACnD,IAAI,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC;gBAC9C,IAAI,eAAe,CAAC;gBAEpB,OAAO,kBAAkB,EAAE;oBACzB,IAAI,YAAY,CAAC,kBAAkB,CAAC,EAAE;wBACpC,kBAAkB,CAAC,OAAO,CAAChE,oBAAY,CAAC,UAAU,CAAC,CAAC;qBACrD;oBAED,eAAe,GAAG,kBAAkB,CAAC,gBAAgB,CAAC;oBACtD,kBAAkB,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC3C,kBAAkB,GAAG,eAAe,CAAC;iBACtC;aACF;SACF;KACF;IAED,SAAS,eAAe,CAAC,SAAiB;QACxC,OAAO,cAAc,IAAI,SAAS,CAAC;IACrC,CAAC;IAED,SAAS,YAAY,CAAC,SAAiB;QACrC,OAAO,SAAS,IAAI,SAAS,CAAC;IAChC,CAAC;AAED,UAAa,SAAS,GAAG;QACvB,WAAW,CAAC,mBAA0B,EAAE,KAAqB;YAC3D,OAAO,IAAI,yBAAyB,CAAC,KAAK,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC;SACxE;QAED,WAAW,CAAC,KAAqB;YAC/B,OAAO,IAAI,yBAAyB,CAAC,KAAK,CAAC,CAAC;SAC7C;QAED,IAAI,EAAE;YACJ,IAAI,EAAE,IAAI;YACV,SAAS,KAAc,OAAO,KAAK,CAAC,EAAE;;YAEtC,MAAM,MAAW;YACjB,IAAI,KAAoB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE;SACpD;KACF;;UCpmBY,sBAAsB;QAAnC;YACS,mBAAc,GAAeS,eAAQ,CAAC,IAAI,CAAC;YAE1C,UAAK,GAA4B,IAAI,CAAC;YACtC,gBAAW,GAAU,IAAI,CAAC;YAC1B,aAAQ,GAAmB,SAAS,CAAC,IAAI,CAAC;YAG1C,YAAO,GAAY,KAAK,CAAC;YACzB,eAAU,GAAY,KAAK,CAAC;SAgJrC;QA9IQ,OAAO,CAAC,KAA6B;YAC1C,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACtB,IAAI,KAAK,YAAY,OAAO,EAAE;oBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAClB;aACF;iBAAM;gBACL,IAAI,KAAK,YAAY,OAAO,EAAE;oBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;iBAC5C;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBACrB;gBAED,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE;oBAC7B,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;iBACxB;aACF;SACF;QAEM,OAAO,CAAC,KAAmB,EAAE,KAAa;YAC/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAEpB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC7B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aACtC;SACF;QAEM,SAAS,CAAC,mBAA0B,EAAE,SAA2B;YACtE,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC7B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;aAC1D;SACF;QAEM,SAAS,CAAC,SAA2B;YAC1C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAExB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC7B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aACrC;SACF;QAEM,SAAS,CAAC,KAAmB;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAErB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC7B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACjC;SACF;QAEM,OAAO;YACZ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;QAEO,OAAO,CAAC,IAAyB;YACvC,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACjB;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;QAEO,IAAI,CAAC,IAAW;YACtB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC7B,OAAO;aACR;YAED,MAAM,QAAQ,GAAG,IAAI,sBAAsB,EAAE,CAAC;YAE9C,QAAQ,CAAC,OAAO,CACd,IAAI,CAAC,0BAA0B,CAC7B,IAAI,CAAC,UAAU;kBACXuD,sBAAc,CAAC,IAAI;kBACnBA,sBAAc,CAAC,OAAO,CAC3B,CACF,CAAC;YAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,QAAQ,CAAC,OAAO,CACd,IAAI,CAAC,wBAAwB,EAAE,CAChC,CAAC;YAEF,IAAI,QAAQ,CAAC,IAAI,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;gBAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;oBACxB,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB,CAAC,CAAC;aACJ;SACF;QAEO,WAAW;YACjB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBAEtB,IAAI,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;oBACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;iBAC9B;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjB;aACF;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;aAChC;SACF;QAEO,0BAA0B,CAAC,WAA2B;YAC5D,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC7B,OAAO,SAAS,CAAC,IAAI,CAAC;aACvB;YAED,OAAO,SAAS,CAAC,WAAW,CAAC,WAAW,GAAGA,sBAAc,CAAC,mBAAmB,CAAC;iBAC3E,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;iBACxB,GAAG,EAAE,CAAC;SACV;QAEO,wBAAwB;YAC9B,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC7B,OAAO,SAAS,CAAC,IAAI,CAAC;aACvB;YAED,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAChE,oBAAY,CAAC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACtE;YAED,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,OAAO,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,EAAEgE,sBAAc,CAAC,IAAI,CAAC;qBACxE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;qBACxB,GAAG,EAAE,CAAC;aACV;YAED,OAAO,SAAS,CAAC,IAAI,CAAC;SACvB;KACF;IAED,MAAM,WAAW;QAIf,YACU,WAAmC,EACnC,OAAuB;YADvB,gBAAW,GAAX,WAAW,CAAwB;YACnC,YAAO,GAAP,OAAO,CAAgB;YAL1B,SAAI,GAAY,KAAK,CAAC;YACrB,gBAAW,GAAY,KAAK,CAAC;SAKjC;QAEG,OAAO,EAAE,CAAC,MAAc;YAC7B,OAAO,OAAO,IAAI,MAAM,CAAC;SAC1B;QAEM,KAAK;YACV,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,OAAO,SAAS,CAAC,IAAI,CAAC;aACvB;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAClB,OAAO,CAAC,CAAC;aACV,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC;SACb;QAEM,SAAS;YACd,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;SACnB;QAEM,MAAM;YACX,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;gBACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;SACF;QAEM,IAAI;YACT,OAAO,IAAI,CAAC,OAAc,CAAC;SAC5B;QAEO,SAAS,CAAC,KAAU;YAC1B,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,OAAO;aACR;YAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACjC;KACF;;ICtMD,MAAM,aAAa,GAAoB;QACrC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE,IAAI;KACpB,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAO9C,AAAaC,mBAAO,GAApB,MAAa,OAAO;QAQlB,YACU,UAAuB,EAC/B,WAAkD,EAC1C,eAAiC;YAFjC,eAAU,GAAV,UAAU,CAAa;YAEvB,oBAAe,GAAf,eAAe,CAAkB;YAV1B,YAAO,GAA+B,IAAI,CAAC;YAC3C,cAAS,GAAY,KAAK,CAAC;YAEpC,eAAU,GAAwC,IAAI,CAAC;YAEvD,gBAAW,GAA+B,IAAI,CAAC;YAOrD,IAAI,CAAC,WAAW,GAAG,IAAI,sBAAsB,EAAE,CAAC;YAChD,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG;gBAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB,CAAC;YAEF,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,YAAY;iBACvC,MAAM,CAAC,CAAC,CAAM,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;iBAClD,MAAM,CAAC,CAAC,GAAG,EAAE,IAAS;gBACrB,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;iBACvB;gBAED,OAAO,GAAG,CAAC;aACZ,EAAE,EAAE,CAAC,CAAC;SACV;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9C;QAEM,SAAS,CAAC,mBAA0B,EAAE,SAA2B;YACtE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;SAC5D;QAEM,SAAS,CAAC,SAA2B;YAC1C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SACvC;QAEM,SAAS,CAAC,KAAmB;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACnC;QAEM,OAAO;YACZ,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;SAC5B;QAEM,cAAc,CAAC,QAAa;YACjC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;SACjC;QAEO,gBAAgB,CAAC,OAAY;YACnC,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,EAAE;gBAChC,OAAO;aACR;YAED,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;YAE3B,IAAI,OAAO,YAAY,OAAO,EAAE;gBAC9B,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;aAClD;iBAAM;gBACL,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aACrC;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACnC;QAEO,WAAW,CAAC,OAAgB;YAClC,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAE1C,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,IAAI,CAAC;aACb;YAED,OAAO,IAAI,CAAC;SACb;QAEO,cAAc,CAAC,OAAgB;YACrC,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,IAAI,CAAC;aACb;YAED,IAAI,gBAAgB,IAAI,OAAO,EAAE;gBAC/B,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CACxC,OAAO,EACP,IAAI,CAAC,UAAU,CAAC,QAAQ,CACzB,CAAC,MAAM,EAAE,CAAC;aACZ;YAED,IAAI,QAAQ,IAAI,OAAO,EAAE;gBACvB,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;aACzB;YAED,IAAI,YAAY,IAAI,OAAO,EAAE;gBAC3B,OAAO,OAAO,CAAC,UAAU,CACvB,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,UAAU,CAAC,QAAQ,CACzB,CAAC;aACH;YAED,IAAI,WAAW,IAAI,OAAO,EAAE;gBAC1B,OAAO,OAAO,CAAC;aAChB;;YAGD,OAAO,aAAa,CAClB,OAAO,EACP,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,UAAU,CAAC,QAAQ,CACzB,CAAC,UAAU,CACV,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,UAAU,CAAC,QAAQ,CACzB,CAAC;SACH;KACF,CAAA;AAxHWC;QAAT,QAAQ;oDAAmD;AAClDA;QAAT,QAAQ;sDAAmC;AAFjCD,mBAAO;QAFnB,aAAa,CAAC,aAAa,CAAC;QAC5BlC,aAAM,CAAC,WAAW,EAAE,oBAAoB,EAAE,gBAAgB,CAAC;OAC/CkC,eAAO,CAyHnB;;AC5IYE,cAAE,GAAf,MAAa,EAAE;QASb,YAAmB,SAAuB,EAAS,QAAyB;YAAzD,cAAS,GAAT,SAAS,CAAc;YAAS,aAAQ,GAAR,QAAQ,CAAiB;YAR3D,UAAK,GAAY,KAAK,CAAC;YAEjC,gBAAW,GAAiB,IAAI,CAAC;YAEjC,WAAM,GAAU,IAAI,CAAC;YACrB,aAAQ,GAAU,IAAI,CAAC;YAI5B,IAAI,CAAC,WAAW,GAAG,IAAI,sBAAsB,EAAE,CAAC;SACjD;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9C;QAEM,SAAS,CAAC,mBAA0B,EAAE,SAA2B;YACtE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;SAC5D;QAEM,SAAS,CAAC,SAA2B;YAC1C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SACvC;QAEM,SAAS,CAAC,KAAmB;YAClC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACnC;QAEM,OAAO;YACZ,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;gBACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACpB;YAED,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE;gBACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;YAED,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;SAC5B;QAEM,YAAY;YACjB,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QAEO,UAAU;YAChB,IAAI,IAAW,CAAC;YAEhB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACnE;iBAAM,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gBACpC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aAC1E;iBAAM;gBACL,IAAI,GAAG,IAAI,CAAC;aACb;YAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAChC;QAEO,UAAU,CAAC,IAAW,EAAE,OAAqB;YACnD,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,IAAI,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;aACzB;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE1B,OAAO,IAAI,CAAC;SACb;KACF,CAAA;AApEWD;QAAT,QAAQ;6CAA+B;AAD7BC,cAAE;QAFd,kBAAkB,CAAC,IAAI,CAAC;QACxBpC,aAAM,CAAC,YAAY,EAAE,eAAe,CAAC;OACzBoC,UAAE,CAqEd;AAIYC,gBAAI,GAAjB,MAAa,IAAI;QACf,YAAoB,OAAqB,EAAE,QAAyB;YAAhD,YAAO,GAAP,OAAO,CAAc;YACvC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACtB;QAEM,IAAI,CAAC,UAAc;YACxB,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;SACvC;KACF,CAAA;AARYA,gBAAI;QAFhB,kBAAkB,CAAC,MAAM,CAAC;QAC1BrC,aAAM,CAAC,YAAY,EAAE,eAAe,CAAC;OACzBqC,YAAI,CAQhB;;IClFD,MAAM,mBAAmB,GAAGpE,oBAAY,CAAC,gBAAgB,GAAGA,oBAAY,CAAC,QAAQ,CAAC;AAIlF,AAAaqE,kBAAM,GAAnB,MAAa,MAAM;QAgBjB,YACS,SAAqB,EACrB,QAAyB,EACzB,UAAuB,EACvB,OAAqB;YAHrB,cAAS,GAAT,SAAS,CAAY;YACrB,aAAQ,GAAR,QAAQ,CAAiB;YACzB,eAAU,GAAV,UAAU,CAAa;YACvB,YAAO,GAAP,OAAO,CAAc;YAZvB,wBAAmB,GAAU,IAAI,CAAC;YAClC,UAAK,GAAY,EAAE,CAAC;YACpB,aAAQ,GAAuB,IAAI,CAAC;YACpC,+BAA0B,GAAY,KAAK,CAAC;SAShB;QAE5B,KAAK,CAAC,KAAmB;YAC9B,IAAI,CAAC,KAAK,GAAe,IAAI,CAAC,UAAU,CAAC,UAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,gBAAkC,CAAC;YACrH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAEvE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;QAEM,SAAS,CAAC,mBAA0B,EAAE,SAA2B;YACtE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;YACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC9C,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;aAC9C;SACF;QAEM,SAAS,CAAC,SAA2B;YAC1C,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC9C,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBACxB,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;SACF;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAE/B,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC9C,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;SACF;;QAGM,YAAY,CAAC,QAAW,EAAE,QAAW,EAAE,KAAmB;YAC/D,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,GAAGrE,oBAAY,CAAC,oBAAoB,CAAC,CAAC;SACpE;;QAGM,mBAAmB,CAAC,QAAyB;YAClD,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAEA,oBAAY,CAAC,gBAAgB,GAAGA,oBAAY,CAAC,oBAAoB,CAAC,CAAC;SAChG;;QAGO,YAAY,CAAC,QAAyB,EAAE,KAAmB;YACjE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;gBACtD,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC;gBAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACrC,IAAI,SAAS,GAAG,SAAS,EAAE;oBACzB,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;oBACzB,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE;wBAC1C,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;qBAC7B;iBACF;qBAAM,IAAI,SAAS,GAAG,SAAS,EAAE;oBAChC,MAAM,SAAS,GAAG,SAAS,CAAC,WAAW,CAACgE,sBAAc,CAAC,mBAAmB,CAAC,CAAC;oBAC5E,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;wBACzE,IAAI,CAAC,OAAO,EAAE,CAAC;wBACf,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBACxB;oBACD,SAAS,CAAC,GAAG,EAAE,CAAC;oBAChB,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;oBACzB,IAAI,SAAS,KAAK,CAAC,EAAE;wBACnB,OAAO;qBACR;iBACF;qBAAM,IAAI,SAAS,KAAK,CAAC,EAAE;oBAC1B,OAAO;iBACR;gBAED,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI;wBAChC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;4BAC/D,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;yBACzE;6BAAM;4BACL,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;yBACjF;qBACF,CAAC,CAAC;iBACJ;qBAAM;oBACL,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI;wBAChC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;4BACrB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;yBACzE;6BAAM;4BACL,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;yBACjF;qBACF,CAAC,CAAC;iBACJ;aACF;YAED,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;gBAC1B,MAAM,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,EAAEA,sBAAc,CAAC,IAAI,CAAC,CAAC;gBACvF,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;wBAC9C,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wBACrB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBACxB;iBACF;qBAAM;oBACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;wBAC9C,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;4BACrB,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;4BACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;4BACrB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;yBACxB;qBACF;iBACF;gBACD,SAAS,CAAC,GAAG,EAAE,CAAC;aACjB;SACF;QAEO,uBAAuB;YAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;YAClC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtF,IAAI,WAAW,KAAK,WAAW,EAAE;oBAC/B,IAAI,WAAW,EAAE;wBACf,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;qBACtC;oBACD,IAAI,WAAW,EAAE;wBACf,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;qBACpC;iBACF;aACF;iBAAM,IAAI,WAAW,EAAE;gBACtB,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;aACtC;SACF;KACF,CAAA;AA1JWE;QAAT,QAAQ;iDAAiB;AADfG,kBAAM;QAFlBtC,aAAM,CAAC,UAAU,EAAE,eAAe,EAAE,WAAW,EAAE,YAAY,CAAC;QAC9D,kBAAkB,CAAC,QAAQ,CAAC;OAChBsC,cAAM,CA2JlB;;AC/JYC,uBAAW,GAAxB,MAAa,WAAW;QAGtB,YAAoB,OAAqB,EAAE,QAAyB;YAAhD,YAAO,GAAP,OAAO,CAAc;YACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACzC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;SAClC;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAC5C;QAEM,SAAS,CAAC,mBAAwB,EAAE,SAA2B;YACpE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;SAC1D;QAEM,SAAS,CAAC,SAA2B;YAC1C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACrC;QAEM,SAAS,CAAC,KAAmB;YAClC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACjC;KACF,CAAA;AAvBYA,uBAAW;QAFvB,kBAAkB,CAAC,aAAa,CAAC;QACjCvC,aAAM,CAAC,YAAY,EAAE,eAAe,CAAC;OACzBuC,mBAAW,CAuBvB;;ACtBYC,gBAAI,GAAjB,MAAa,IAAI;QAKf,YAAoB,OAAqB,EAAE,QAAyB;YAAhD,YAAO,GAAP,OAAO,CAAc;YAJxB,UAAK,GAAQ,IAAI,CAAC;YAE3B,gBAAW,GAAU,IAAI,CAAC;YAGhC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACzC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;SAClC;QAEM,YAAY;YACjB,IAAI,CAAC,SAAS,CAACvE,oBAAY,CAAC,mBAAmB,CAAC,CAAC;SAClD;QAEM,OAAO,CAAC,KAAmB;YAChC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACvB;QAEM,SAAS,CAAC,mBAAwB,EAAE,SAA2B;YACpE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;SAC1D;QAEM,SAAS,CAAC,SAA2B;YAC1C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SACrC;QAEM,SAAS,CAAC,KAAmB;YAClC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACjC;QAEO,SAAS,CAAC,KAAmB;YACnC,IAAI,CAAC,WAAW,CAAC,KAAK,CACpB,KAAK,EACL,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAC1C,CAAC;SACH;KACF,CAAA;AAnCWkE;QAAT,QAAQ;+CAA0B;AADxBK,gBAAI;QAFhB,kBAAkB,CAAC,MAAM,CAAC;QAC1BxC,aAAM,CAAC,YAAY,EAAE,eAAe,CAAC;OACzBwC,YAAI,CAoChB;;UCrCY,OAAO;QAOlB,YAAoB,YAAwB/D,SAAE,CAAC,eAAe,EAAE;YAA5C,cAAS,GAAT,SAAS,CAAmC;YANxD,eAAU,GAAqB,EAAE,CAAC;YAClC,eAAU,GAAmB,EAAE,CAAC;YAChC,cAAS,GAAmB,EAAE,CAAC;YAC/B,cAAS,GAAG,KAAK,CAAC;YAClB,UAAK,GAAmB,IAAI,CAAC;YAGnCT,mBAAY;iBACT,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC;iBACvB,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SACjC;QAEM,QAAQ,CAAC,GAAG,MAA0D;YAC3E,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;SACb;QAEM,GAAG,CAAC,MAAsB;YAC/B,MAAM,SAAS,GAAmB,MAAM,CAAC,SAAS,CAAC;YAEnD,MAAM,SAAS,GAAG;gBAChB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBACxC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;oBACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAChC,SAAS,CAAC,QAAQ,CAChB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,EACpC,MAAM,CAAC,IAAI,CACZ,CAAC;iBACH;gBAED,SAAS,CAAC,KAAK,CAACC,oBAAY,CAAC,aAAa,GAAGA,oBAAY,CAAC,QAAQ,CAAC,CAAC;gBAEpE,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAEgE,sBAAc,CAAC,IAAI,CAAC;qBACpD,MAAM,CAAC,SAAS,CAAC;qBACjB,GAAG,EAAE,CAAC;aACV,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEhC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,MAAM,IAAI,GAAG,SAAS,CAAC,WAAW,CAACA,sBAAc,CAAC,OAAO,CAAC;qBACvD,MAAM,CAAC,SAAS,CAAC;qBACjB,GAAG,EAAE,CAAC;gBAET,MAAM,KAAK,GAAGhE,oBAAY,CAAC,YAAY,GAAGA,oBAAY,CAAC,UAAU,CAAC;gBAElE,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC1B;qBAAM;oBACL,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;iBAClD;aACF,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,SAAS,EAAE,CAAC;aACb;YAED,OAAO,IAAI,CAAC;SACb;QAEM,IAAI;YACT,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAEM,KAAK;YACV,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,IAAI,CAAC;SACb;QAEM,IAAI;YACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC;SACb;KACF;AAEKS,mBAAQ,CAAC,MAAO,CAAC,OAAO,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}